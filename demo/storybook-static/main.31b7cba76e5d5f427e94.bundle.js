(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1108:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(116),exports),__exportStar(__webpack_require__(1223),exports),__exportStar(__webpack_require__(1228),exports),__exportStar(__webpack_require__(1230),exports),__exportStar(__webpack_require__(285),exports),__exportStar(__webpack_require__(1239),exports),__exportStar(__webpack_require__(198),exports),__exportStar(__webpack_require__(286),exports),__exportStar(__webpack_require__(1247),exports),__exportStar(__webpack_require__(1250),exports),__exportStar(__webpack_require__(1253),exports),__exportStar(__webpack_require__(1254),exports),__exportStar(__webpack_require__(199),exports),__exportStar(__webpack_require__(1257),exports),__exportStar(__webpack_require__(1259),exports),__exportStar(__webpack_require__(200),exports),__exportStar(__webpack_require__(1261),exports),__exportStar(__webpack_require__(1264),exports),__exportStar(__webpack_require__(1265),exports),__exportStar(__webpack_require__(201),exports),__exportStar(__webpack_require__(31),exports)},116:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var reactxp_1=__webpack_require__(6);Object.defineProperty(exports,"Animated",{enumerable:!0,get:function(){return reactxp_1.Animated}})},1223:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var AnimatedTransition_1=__webpack_require__(1224);Object.defineProperty(exports,"AnimatedTransition",{enumerable:!0,get:function(){return AnimatedTransition_1.default}})},1224:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.fill=void 0;var React=__importStar(__webpack_require__(0)),react_transition_group_1=__webpack_require__(1335),styles_1=__webpack_require__(27),animated_1=__webpack_require__(116),view_1=__webpack_require__(31),defaultBehavior_1=__importDefault(__webpack_require__(1226)),useCustomAnim_1=__webpack_require__(1227);exports.fill=styles_1.Styles.createViewStyle({position:"absolute",left:0,right:0,top:0,bottom:0});var Animation=React.forwardRef((function(_a,ref){var state=_a.state,timeout=_a.timeout,wrapperStyle=_a.wrapperStyle,children=_a.children,isInit=_a.isInit,_b=_a.behavior,behavior=void 0===_b?defaultBehavior_1.default:_b,animatedStyle=useCustomAnim_1.useCustomAnim(__assign(__assign({duration:timeout,status:state},behavior(isInit)),{behaviorKey:behavior.name}))[0];return React.createElement(animated_1.Animated.View,{ref:ref,style:[animatedStyle.current,exports.fill,wrapperStyle]},children)}));function AnimatedTransition(_a){var inProp=_a.in,behavior=_a.animation,children=_a.children,wrapperStyle=_a.wrapperStyle,clean=_a.clean,_b=_a.timeout,timeout=void 0===_b?300:_b,nodeRef=React.useRef(),_c=React.useState(!1),isInit=_c[0],setInInit=_c[1];React.useEffect((function(){isInit||setInInit(!0)}),[isInit]);var setRef=React.useCallback((function(ref){nodeRef.current=ref}),[]);return React.createElement(react_transition_group_1.Transition,{in:inProp,timeout:timeout,nodeRef:nodeRef},(function(state){return(!clean||clean&&"exited"!==state)&&React.createElement(Animation,{ref:setRef,behavior:behavior,state:state,isInit:isInit,wrapperStyle:wrapperStyle,timeout:timeout},children)}))}exports.default=function default_1(props){return React.createElement(react_transition_group_1.TransitionGroup,{component:view_1.View,style:{display:"flex",flex:1,flexDirection:"column"}},React.createElement(AnimatedTransition,__assign({key:props.id},props)))}},1226:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var width=__webpack_require__(6).UserInterface.measureWindow().width;exports.default=function slideFactory(isInit){return{initialAnimatedValues:{translateX:isInit?width:0},transitionValues:{entering:{translateX:0},exiting:{translateX:-width}}}}},1227:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.useCustomAnim=void 0;var AnimableCommonKey,AnimableTransformKey,react_1=__webpack_require__(0),styles_1=__webpack_require__(27),animated_1=__webpack_require__(116);!function(AnimableCommonKey){AnimableCommonKey.borderRadius="borderRadius",AnimableCommonKey.backgroundColor="backgroundColor",AnimableCommonKey.opacity="opacity"}(AnimableCommonKey||(AnimableCommonKey={})),function(AnimableTransformKey){AnimableTransformKey.perspective="perspective",AnimableTransformKey.rotateX="rotateX",AnimableTransformKey.rotateY="rotateY",AnimableTransformKey.rotateZ="rotateZ",AnimableTransformKey.scaleX="scaleX",AnimableTransformKey.scaleY="scaleY",AnimableTransformKey.translateX="translateX",AnimableTransformKey.translateY="translateY"}(AnimableTransformKey||(AnimableTransformKey={}));var animableKeys=Object.keys(AnimableCommonKey).concat(Object.keys(AnimableTransformKey));function getTransitionStateStyle(animatedKeys,transitionValues){var animableStyle={opacity:transitionValues.opacity,backgroundColor:transitionValues.backgroundColor,borderRadius:transitionValues.borderRadius,transform:animatedKeys.map((function(key){var _a;return(_a={})[key]=transitionValues[key],_a}))};return styles_1.Styles.createAnimatedViewStyle(animableStyle)}function createAnimatedValues(initialAnimatedValues){return{opacity:void 0!==initialAnimatedValues.opacity?new animated_1.Animated.Value(initialAnimatedValues.opacity):void 0,backgroundColor:void 0!==initialAnimatedValues.backgroundColor?new animated_1.Animated.Value(initialAnimatedValues.backgroundColor):void 0,borderRadius:void 0!==initialAnimatedValues.borderRadius?new animated_1.Animated.Value(initialAnimatedValues.borderRadius):void 0,perspective:void 0!==initialAnimatedValues.perspective?new animated_1.Animated.Value(initialAnimatedValues.perspective):void 0,translateX:void 0!==initialAnimatedValues.translateX?new animated_1.Animated.Value(initialAnimatedValues.translateX):void 0,translateY:void 0!==initialAnimatedValues.translateY?new animated_1.Animated.Value(initialAnimatedValues.translateY):void 0,rotateX:void 0!==initialAnimatedValues.rotateX?new animated_1.Animated.Value(initialAnimatedValues.rotateX):void 0,rotateY:void 0!==initialAnimatedValues.rotateY?new animated_1.Animated.Value(initialAnimatedValues.rotateY):void 0,rotateZ:void 0!==initialAnimatedValues.rotateZ?new animated_1.Animated.Value(initialAnimatedValues.rotateZ):void 0,scaleX:void 0!==initialAnimatedValues.scaleX?new animated_1.Animated.Value(initialAnimatedValues.scaleX):void 0,scaleY:void 0!==initialAnimatedValues.scaleY?new animated_1.Animated.Value(initialAnimatedValues.scaleY):void 0}}function createAnimatedKeys(initialAnimatedValues){return Object.keys(initialAnimatedValues)}exports.useCustomAnim=function useCustomAnim(_a){var duration=_a.duration,status=_a.status,transitionValues=_a.transitionValues,initialAnimatedValues=_a.initialAnimatedValues,onFinishAnimation=_a.onFinishAnimation,behaviorKey=_a.behaviorKey,animatedValues=react_1.useRef(createAnimatedValues(initialAnimatedValues)),animatedKeys=react_1.useRef(createAnimatedKeys(initialAnimatedValues)),animatedStyle=react_1.useRef(getTransitionStateStyle(animatedKeys.current,animatedValues.current)),animation=react_1.useRef();return react_1.useEffect((function(){"entering"!==status&&(animatedValues.current=createAnimatedValues(initialAnimatedValues),animatedKeys.current=createAnimatedKeys(initialAnimatedValues),animatedStyle.current=getTransitionStateStyle(animatedKeys.current,animatedValues.current))}),[behaviorKey]),react_1.useEffect((function(){void 0!==transitionValues[status]?function startAnimation(animation,animatedValues,animationValues,duration,onFinishAnimation){var _a,parallelAnimations=[];animableKeys.forEach((function(key){var prop=animatedValues[key],value=animationValues[key];void 0!==prop&&void 0!==value&&parallelAnimations.push(animated_1.Animated.timing(prop,{useNativeDriver:!0,toValue:value,duration:duration,easing:animated_1.Animated.Easing.InOut()}))})),null===(_a=animation.current)||void 0===_a||_a.stop(),animation.current=animated_1.Animated.parallel(parallelAnimations),animation.current.start(onFinishAnimation)}(animation,animatedValues.current,transitionValues[status],duration,(function(){return null==onFinishAnimation?void 0:onFinishAnimation(status)})):null==onFinishAnimation||onFinishAnimation(status)}),[status]),[animatedStyle]}},1228:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var BackgroundImage_1=__webpack_require__(1229);Object.defineProperty(exports,"BackgroundImage",{enumerable:!0,get:function(){return BackgroundImage_1.default}})},1229:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),react_dom_1=__webpack_require__(16),view_1=__webpack_require__(31),BackgroundImage=function(_super){function BackgroundImage(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.setStyle=function(){if(_this.element){var _a=_this.props,_b=_a.borderRadius,borderRadius=void 0===_b?0:_b,center=_a.position,uri=_a.uri,_c=_a.resizeMode,resizeMode=void 0===_c?"auto":_c,repeat=_a.repeat,position=center?center.join(" "):"50% 50%",size="stretch"===resizeMode?"100% 100%":resizeMode;_this.element.style.position="absolute",_this.element.style.top="0",_this.element.style.right="0",_this.element.style.bottom="0",_this.element.style.left="0",_this.element.style.borderRadius=borderRadius+"px",_this.element.style.backgroundImage="url("+uri+")",_this.element.style.backgroundPosition=""+position,_this.element.style.backgroundSize=""+size,_this.element.style.backgroundRepeat=repeat?"repeat":"no-repeat"}},_this}return __extends(BackgroundImage,_super),BackgroundImage.prototype.componentDidMount=function(){this.element=react_dom_1.findDOMNode(this.viewRef),this.setStyle()},BackgroundImage.prototype.render=function(){var _this=this;return React.createElement(view_1.View,{ref:function(view){return _this.viewRef=view},onLayout:this.setStyle})},BackgroundImage.prototype.componentDidUpdate=function(prevProps){(prevProps.uri!==this.props.uri||void 0===prevProps.position&&void 0!==this.props.position||void 0!==prevProps.position&&void 0===this.props.position||void 0!==prevProps.position&&void 0!==this.props.position&&(prevProps.position[0]!==this.props.position[0]||prevProps.position[1]!==this.props.position[1])||prevProps.repeat!==this.props.repeat||prevProps.resizeMode!==this.props.resizeMode)&&this.setStyle()},BackgroundImage}(React.PureComponent);exports.default=BackgroundImage},1230:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var BorderImage_1=__webpack_require__(1231);Object.defineProperty(exports,"BorderImage",{enumerable:!0,get:function(){return BorderImage_1.default}})},1231:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),react_dom_1=__webpack_require__(16),view_1=__webpack_require__(31),BorderImage=function(_super){function BorderImage(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.setStyle=function(){if(_this.element){var _a=_this.props,borderWidth=_a.borderWidth,uri=_a.uri,sliceWidth=_a.sliceWidth;_this.element.style.position="absolute",_this.element.style.top="0",_this.element.style.right="0",_this.element.style.bottom="0",_this.element.style.left="0",_this.element.style.borderWidth=borderWidth+"px",_this.element.style.borderStyle="solid",_this.element.style.borderImageSource="url("+uri+")",_this.element.style.borderImageSlice=""+sliceWidth}},_this}return __extends(BorderImage,_super),BorderImage.prototype.componentDidMount=function(){this.element=react_dom_1.findDOMNode(this.viewRef),this.setStyle()},BorderImage.prototype.render=function(){var _this=this;return React.createElement(view_1.View,{ref:function(view){return _this.viewRef=view},onLayout:this.setStyle})},BorderImage.prototype.componentDidUpdate=function(prevProps){prevProps.uri!==this.props.uri&&this.setStyle()},BorderImage}(React.PureComponent);exports.default=BorderImage},1232:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),Fade=function(_super){function Fade(props){var _this=_super.call(this,props)||this;_this.state={isVisible:!1},_this.animatedOpacity=reactxp_1.Animated.createValue(0);var isAnimatedOnMount=props.isAnimatedOnMount,isVisible=props.isVisible;_this.duration=props.duration||250;var opacityFrom=isAnimatedOnMount?isVisible?0:1:isVisible?1:0,opacityTo=isAnimatedOnMount?isVisible?1:0:isVisible?0:1;return _this.state.isVisible=isVisible,_this.animatedOpacity.setValue(opacityFrom),_this.animatedStyle=reactxp_1.Styles.createAnimatedViewStyle({opacity:_this.animatedOpacity}),_this.animation=_this.getAnimation(opacityTo),_this}return __extends(Fade,_super),Fade.prototype.componentDidMount=function(){this.props.isAnimatedOnMount&&this.animation.start(this.onAnimationEnd.bind(this))},Fade.prototype.render=function(){var isVisible=this.state.isVisible,_a=this.props,children=_a.children,style=_a.style;return React.createElement(reactxp_1.Animated.View,{ignorePointerEvents:!0,style:[style,this.animatedStyle]},isVisible&&children)},Fade.prototype.componentDidUpdate=function(prevProps,_prevState){var _this=this;if(this.props.isVisible!==prevProps.isVisible){this.animation.stop(),this.animation=this.getAnimation(this.props.isVisible?1:0);var childrenShouldBeVisible=this.props.isVisible||!this.props.isVisible&&this.state.isVisible;this.setState({isVisible:childrenShouldBeVisible},(function(){_this.animation.start(_this.onAnimationEnd.bind(_this))}))}},Fade.prototype.onAnimationEnd=function(_a){_a.finished&&this.props.onAnimationEnd&&this.props.onAnimationEnd()},Fade.prototype.getAnimation=function(toValue){return reactxp_1.Animated.timing(this.animatedOpacity,{toValue:toValue,duration:this.duration,easing:reactxp_1.Animated.Easing.Linear()})},Fade}(React.Component);exports.default=Fade},1233:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),react_dom_1=__webpack_require__(16),styles_1=__webpack_require__(27),ThemeContext_1=__webpack_require__(88),view_1=__webpack_require__(31),style_1=__webpack_require__(1234),Paper=function(_super){function Paper(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Paper,_super),Object.defineProperty(Paper.prototype,"shadow",{get:function(){return style_1.shadows.web[this.props.elevation||0]},enumerable:!1,configurable:!0}),Paper.prototype.componentDidMount=function(){this.containerRef&&(react_dom_1.findDOMNode(this.containerRef).style.boxShadow=this.shadow)},Paper.prototype.render=function(){var _this=this,_a=this.props,_b=_a.style,style=void 0===_b?{}:_b,props=__rest(_a,["style"]);return React.createElement(ThemeContext_1.ThemeContext.Consumer,null,(function(theme){var rootStyle=style_1.createWebPaperStyle(theme);return React.createElement(view_1.View,__assign({ref:function(comp){_this.containerRef=comp,_this.props.ref&&_this.props.ref(comp)},style:__spreadArrays(styles_1.toArray(rootStyle),styles_1.toArray(style.root),styles_1.toArray(style.content))},props))}))},Paper}(React.Component);exports.default=Paper},1234:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.shadows=exports.createWebPaperStyle=exports.nativePaperStyle=void 0;var createStyle_1=__webpack_require__(152);exports.nativePaperStyle=function nativePaperStyle(theme,style,borderRadius){return{root:createStyle_1.Styles.createViewStyle(__assign({overflow:"visible"},style&&style.root)),isAndroid:createStyle_1.Styles.createViewStyle({borderWidth:0}),nativeShadowContainer:createStyle_1.Styles.createViewStyle({overflow:"visible",position:"absolute",right:0,bottom:0,borderRadius:borderRadius}),content:createStyle_1.Styles.createViewStyle(__assign({flex:1,backgroundColor:theme.palette.background.paper,overflow:"hidden",borderRadius:borderRadius},style&&style.content))}},exports.createWebPaperStyle=function createWebPaperStyle(theme){return createStyle_1.Styles.createViewStyle({backgroundColor:theme.palette.background.paper})};function createWebElevationShadows(){for(var px=[],_i=0;_i<arguments.length;_i++)px[_i]=arguments[_i];return[px[0]+"px "+px[1]+"px "+px[2]+"px "+px[3]+"px rgba(0,0,0,0.2)",px[4]+"px "+px[5]+"px "+px[6]+"px "+px[7]+"px rgba(0,0,0,0.14)",px[8]+"px "+px[9]+"px "+px[10]+"px "+px[11]+"px rgba(0,0,0,0.12)"].join(",")}function createIOSElevationShadows(){for(var px=[],_i=0;_i<arguments.length;_i++)px[_i]=arguments[_i];var shadowColor="#000";return{shadowColor:shadowColor,shadowOffset:{width:px[0],height:px[1]},shadowOpacity:Number("0.2"),shadowRadius:px[2]}}exports.shadows={web:["none",createWebElevationShadows(0,1,3,0,0,1,1,0,0,2,1,-1),createWebElevationShadows(0,1,5,0,0,2,2,0,0,3,1,-2),createWebElevationShadows(0,1,8,0,0,3,4,0,0,3,3,-2),createWebElevationShadows(0,2,4,-1,0,4,5,0,0,1,10,0),createWebElevationShadows(0,3,5,-1,0,5,8,0,0,1,14,0),createWebElevationShadows(0,3,5,-1,0,6,10,0,0,1,18,0),createWebElevationShadows(0,4,5,-2,0,7,10,1,0,2,16,1),createWebElevationShadows(0,5,5,-3,0,8,10,1,0,3,14,2),createWebElevationShadows(0,5,6,-3,0,9,12,1,0,3,16,2),createWebElevationShadows(0,6,6,-3,0,10,14,1,0,4,18,3),createWebElevationShadows(0,6,7,-4,0,11,15,1,0,4,20,3),createWebElevationShadows(0,7,8,-4,0,12,17,2,0,5,22,4),createWebElevationShadows(0,7,8,-4,0,13,19,2,0,5,24,4),createWebElevationShadows(0,7,9,-4,0,14,21,2,0,5,26,4),createWebElevationShadows(0,8,9,-5,0,15,22,2,0,6,28,5),createWebElevationShadows(0,8,10,-5,0,16,24,2,0,6,30,5),createWebElevationShadows(0,8,11,-5,0,17,26,2,0,6,32,5),createWebElevationShadows(0,9,11,-5,0,18,28,2,0,7,34,6),createWebElevationShadows(0,9,12,-6,0,19,29,2,0,7,36,6),createWebElevationShadows(0,10,13,-6,0,20,31,3,0,8,38,7),createWebElevationShadows(0,10,13,-6,0,21,33,3,0,8,40,7),createWebElevationShadows(0,10,14,-6,0,22,35,3,0,8,42,7),createWebElevationShadows(0,11,14,-7,0,23,36,3,0,9,44,8),createWebElevationShadows(0,11,15,-7,0,24,38,3,0,9,46,8)],native:[createIOSElevationShadows(0,1,3,0,0,1,1,0,0,2,1,-1),createIOSElevationShadows(0,1,5,0,0,2,2,0,0,3,1,-2),createIOSElevationShadows(0,1,8,0,0,3,4,0,0,3,3,-2),createIOSElevationShadows(0,2,4,-1,0,4,5,0,0,1,10,0),createIOSElevationShadows(0,3,5,-1,0,5,8,0,0,1,14,0),createIOSElevationShadows(0,3,5,-1,0,6,10,0,0,1,18,0),createIOSElevationShadows(0,4,5,-2,0,7,10,1,0,2,16,1),createIOSElevationShadows(0,5,5,-3,0,8,10,1,0,3,14,2),createIOSElevationShadows(0,5,6,-3,0,9,12,1,0,3,16,2),createIOSElevationShadows(0,6,6,-3,0,10,14,1,0,4,18,3),createIOSElevationShadows(0,6,7,-4,0,11,15,1,0,4,20,3),createIOSElevationShadows(0,7,8,-4,0,12,17,2,0,5,22,4),createIOSElevationShadows(0,7,8,-4,0,13,19,2,0,5,24,4),createIOSElevationShadows(0,7,9,-4,0,14,21,2,0,5,26,4),createIOSElevationShadows(0,8,9,-5,0,15,22,2,0,6,28,5),createIOSElevationShadows(0,8,10,-5,0,16,24,2,0,6,30,5),createIOSElevationShadows(0,8,11,-5,0,17,26,2,0,6,32,5),createIOSElevationShadows(0,9,11,-5,0,18,28,2,0,7,34,6),createIOSElevationShadows(0,9,12,-6,0,19,29,2,0,7,36,6),createIOSElevationShadows(0,10,13,-6,0,20,31,3,0,8,38,7),createIOSElevationShadows(0,10,13,-6,0,21,33,3,0,8,40,7),createIOSElevationShadows(0,10,14,-6,0,22,35,3,0,8,42,7),createIOSElevationShadows(0,11,14,-7,0,23,36,3,0,9,44,8),createIOSElevationShadows(0,11,15,-7,0,24,38,3,0,9,46,8)]}},1235:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),ThemeContext_1=__webpack_require__(88),Emitter_1=__importDefault(__webpack_require__(492)),MDRippleParticle_1=__importDefault(__webpack_require__(1236));exports.default=function(_a){var onRef=_a.onRef,props=__rest(_a,["onRef"]);return React.createElement(ThemeContext_1.ThemeContext.Consumer,null,(function(theme){return React.createElement(Emitter_1.default,{particle:MDRippleParticle_1.default,onRef:onRef,options:__assign({theme:theme},props)})}))}},1236:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),styles_1=__webpack_require__(27),style_1=__webpack_require__(493),easing=reactxp_1.Animated.Easing.CubicBezier(.4,0,.2,1),Particle=function(_super){function Particle(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.animatedScale=reactxp_1.Animated.createValue(1),_this.runningAnimation=!1,_this}return __extends(Particle,_super),Particle.prototype.componentWillMount=function(){var options=this.props.options,color=options.color||"#000",overlayLuminance=styles_1.colorManipulator.getLuminance(color),pressedOverlayOpacity=options.theme.palette.state.pressed,overlayOpacity=overlayLuminance<.3?pressedOverlayOpacity.dark:overlayLuminance<.7?pressedOverlayOpacity.medium:pressedOverlayOpacity.light;this.animatedOpacity=reactxp_1.Animated.createValue(overlayOpacity),this.animatedStyle=reactxp_1.Styles.createAnimatedViewStyle({transform:[{scale:this.animatedScale}],opacity:this.animatedOpacity})},Particle.prototype.componentDidMount=function(){this.runningAnimation=!0,reactxp_1.Animated.timing(this.animatedScale,{toValue:this.radiusTo/this.radiusFrom,duration:225,easing:easing}).start(this.onAnimateRadiusEnd.bind(this))},Particle.prototype.componentWillReceiveProps=function(newProps){var fading=this.props.isDying;newProps.isDying===fading||this.runningAnimation||this.fadeOut()},Particle.prototype.render=function(){var _a=this.props.emitterLayout,width=_a.width,height=_a.height,radiusFrom=Math.min(width,height)/2,_b=this.props,options=_b.options,x=_b.x,y=_b.y,color=options.color,styleSheet=style_1.rippleStyle({x:x,y:y,radius:radiusFrom,color:color});return React.createElement(reactxp_1.Animated.View,{style:[styleSheet.ripple,reactxp_1.Styles.createViewStyle({left:x-5,top:y-5},!1),this.animatedStyle]})},Object.defineProperty(Particle.prototype,"radiusFrom",{get:function(){var _a=this.props.emitterLayout,width=_a.width,height=_a.height;return Math.min(width,height)/2},enumerable:!1,configurable:!0}),Object.defineProperty(Particle.prototype,"radiusTo",{get:function(){var _a=this.props.emitterLayout,width=_a.width,height=_a.height;return Math.sqrt(Math.pow(width,2)+Math.pow(height,2))},enumerable:!1,configurable:!0}),Particle.prototype.onAnimateRadiusEnd=function(){this.runningAnimation=!1,this.props.isDying&&this.fadeOut()},Particle.prototype.fadeOut=function(){this.runningAnimation||(this.runningAnimation=!0,reactxp_1.Animated.timing(this.animatedOpacity,{toValue:0,duration:150,easing:reactxp_1.Animated.Easing.Linear()}).start(this.props.onDeath))},Particle}(React.PureComponent);exports.default=Particle},1237:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextComp=void 0;var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),styles_1=__webpack_require__(27),ThemeContext_1=__webpack_require__(88);exports.TextComp=function(_a){var children=_a.children,inherited=_a.inherited,style=_a.style,props=__rest(_a,["children","inherited","style"]);return React.createElement(ThemeContext_1.ThemeContext.Consumer,null,(function(theme){return React.createElement(reactxp_1.Text,__assign({style:__spreadArrays([inherited?{}:styles_1.Styles.createTextStyle({fontFamily:theme.typography.fontFamily,fontSize:theme.typography.fontSize,fontWeight:theme.typography.fontWeightLight,color:theme.palette.text.primary})],styles_1.toArray(style))},props),children)}))},exports.default=exports.TextComp},1238:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),Button_1=__webpack_require__(491),style_1=__webpack_require__(494);exports.default=React.forwardRef((function(_a,ref){var _b=_a.style,style=void 0===_b?{}:_b,_c=_a.radius,radius=void 0===_c?32:_c,props=__rest(_a,["style","radius"]),circleButtonStyle=style_1.createCircleButtonStyle({style:style,radius:radius});return React.createElement(Button_1.Button,__assign({style:circleButtonStyle},props,{ref:ref}))}))},1239:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Fab_1=__webpack_require__(1240);Object.defineProperty(exports,"Fab",{enumerable:!0,get:function(){return Fab_1.default}})},1240:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),button_1=__webpack_require__(285),foldableTree_1=__webpack_require__(286),renderNode_1=__webpack_require__(1242),TouchDetector_1=__webpack_require__(1246),Fab=function(_super){function Fab(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={containerPositionRelativeToWindow:{x:0,y:0},isTouchDetectorEnabled:!0},_this.nodeRefs=new Map,_this.updateParentLayout=function(){_this.props.containerRef&&reactxp_1.UserInterface.measureLayoutRelativeToWindow(_this.props.containerRef).then((function(containerPositionRelativeToWindow){_this.state.containerPositionRelativeToWindow.x===containerPositionRelativeToWindow.x&&_this.state.containerPositionRelativeToWindow.y===containerPositionRelativeToWindow.y||_this.setState({containerPositionRelativeToWindow:containerPositionRelativeToWindow})}))},_this.onTargetChange=function(change){"entered"===change.op?_this.props.onEnter&&_this.props.onEnter(change.target):_this.props.onExit&&_this.props.onExit(change.prevTarget)},_this.onObjectLongTouchStart=function(touchedObject){var node=_this.nodeRefs.get(touchedObject.targetId);node.hasChildren&&(node.isOpen?node.isPartialOpen?node.reopen():node.isFullOpen&&node.id!==foldableTree_1.ROOT_ID&&node.close():node.open())},_this.onObjectLongTouchStop=function(targetId){if(targetId){var node=_this.nodeRefs.get(targetId),isLeaf=!(null==node?void 0:node.hasChildren);node&&isLeaf?(_this.nodeRefs.get(foldableTree_1.ROOT_ID).close(),_this.props.onSelect&&_this.props.onSelect(targetId,node.path)):_this.nodeRefs.get(foldableTree_1.ROOT_ID).cancel()}else _this.nodeRefs.get(foldableTree_1.ROOT_ID).cancel()},_this.scaleChildren=function(pointerFromLayoutsDistances){pointerFromLayoutsDistances.forEach((function(_a){var targetId=_a.targetId,distance=_a.distance;_this.nodeRefs.get(targetId).setDistanceFromPointer(distance)}))},_this.onTouchStop=function(targetId){targetId===foldableTree_1.ROOT_ID&&_this.props.onPressRoot&&_this.props.onPressRoot(),targetId?_this.nodeRefs.get(foldableTree_1.ROOT_ID).close():_this.nodeRefs.get(foldableTree_1.ROOT_ID).cancel()},_this.setNodeLayout=function(node,layout){_this.nodeRefs.set(node.id,node),_this.touchDetector.actions.addObject(node.id,layout)},_this.onClick=function(targetId){var _a;_this.setState({isTouchDetectorEnabled:!1}),null===(_a=_this.nodeRefs.get(targetId))||void 0===_a||_a.open()},_this.deleteNodeLayout=function(nodeId){_this.nodeRefs.delete(nodeId),_this.touchDetector.actions.removeObject(nodeId)},_this}return __extends(Fab,_super),Fab.prototype.UNSAFE_componentWillReceiveProps=function(props){props.containerRef&&props.containerRef.props.onLayout},Fab.prototype.componentDidMount=function(){this.props.onRef&&this.props.onRef(this)},Fab.prototype.componentDidUpdate=function(){this.updateParentLayout()},Fab.prototype.render=function(){var _this=this,containerPositionRelativeToWindow=this.state.containerPositionRelativeToWindow,_a=this.props,isOpen=_a.isOpen,onPressRoot=_a.onPressRoot,isDisabled=_a.isDisabled,onCancel=_a.onCancel,onEnter=_a.onEnter,onExit=_a.onExit,onPostClose=_a.onPostClose,onPostOpen=_a.onPostOpen,onPreClose=_a.onPreClose,onPreOpen=_a.onPreOpen,onSelect=_a.onSelect,style=_a.style,_b=_a.delayLongPress,delayLongPress=void 0===_b?300:_b,_c=_a.nodeOpeningDuration,nodeOpeningDuration=void 0===_c?300:_c,_d=_a.optionSeparationAngle,optionSeparationAngle=void 0===_d?45:_d,rootSpreadOrientation=_a.rootSpreadOrientation,_e=_a.spreadRadius,spreadRadius=void 0===_e?120:_e,position=_a.position,_f=_a.nodeData,nodeData=void 0===_f?{}:_f,_g=_a.nodeChildren,nodeChildren=void 0===_g?[]:_g,buildButtonProps=_a.buildButtonProps,completeProps={id:foldableTree_1.ROOT_ID,isOpen:isOpen,contextProps:{isDisabled:isDisabled,style:style,onCancel:onCancel,onSelect:onSelect,onEnter:onEnter,onExit:onExit,onPostClose:onPostClose,onPostOpen:onPostOpen,onPreClose:onPreClose,onPreOpen:onPreOpen,onPressRoot:onPressRoot,renderNode:renderNode_1.renderNodeFactory(renderContentFactory({isDisabled:isDisabled,buildButtonProps:buildButtonProps,delayLongPress:delayLongPress}))},nodeProps:{id:foldableTree_1.ROOT_ID,nodeData:nodeData,nodeParentAbsolutePosition:{x:0,y:0},positionRelativeToParentNode:position,nodeChildren:nodeChildren,nodeOpeningDuration:nodeOpeningDuration,optionSeparationAngle:optionSeparationAngle,onNodeLayout:this.setNodeLayout,onUnmount:this.deleteNodeLayout,rootSpreadOrientation:rootSpreadOrientation,spreadRadius:spreadRadius}};return React.createElement(React.Fragment,null,React.createElement(foldableTree_1.FoldableTree,__assign({},completeProps)),this.state.isTouchDetectorEnabled&&React.createElement(TouchDetector_1.TouchDetector,{positionRelativeToParent:this.props.position,containerPositionRelativeToWindow:containerPositionRelativeToWindow,onRef:function(ref){return _this.touchDetector=ref},onObjectLongTouchStart:this.onObjectLongTouchStart,onObjectLongTouchStop:this.onObjectLongTouchStop,onTouchStop:this.onTouchStop,onClick:this.onClick,onPointerDistancesFromLayouts:this.scaleChildren,onTargetChange:this.onTargetChange}))},Fab}(React.Component);function renderContentFactory(_a){var isDisabled=_a.isDisabled,delayLongPress=_a.delayLongPress,buildButtonProps=_a.buildButtonProps;return function(_a){var nodeInstance=_a.nodeInstance,mandatoryProps=_a.mandatoryProps,nodeData=nodeInstance.nodeData,customProps=buildButtonProps&&buildButtonProps(nodeInstance)||{},label=customProps.label?customProps.label:nodeInstance.isOpen?void 0:nodeData.label,iconSlot=customProps.iconSlot?customProps.iconSlot:nodeInstance.isOpen?nodeData.renderCancelIcon:nodeData.renderOpenIcon;return React.createElement(button_1.CircleButton,__assign({},customProps,{iconSlot:iconSlot,label:label,isDisabled:isDisabled,delayLongPress:delayLongPress,elevation:"web"===reactxp_1.Platform.getType()?10:0},mandatoryProps))}}exports.default=Fab},1241:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),helpers_1=__webpack_require__(202),type_1=__webpack_require__(495),FoldableTree=function(_super){function FoldableTree(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={isFullOpen:!1,isPartialOpen:!1},_this.childRefs=[],_this.show=function(callback){_this.viewRef.show(callback)},_this.hide=function(callback,ancestorId){void 0===ancestorId&&(ancestorId=_this.id),_this.animation&&_this.animation.stop(),_this.childRefs.length>0&&_this.childRefs.map((function(node){return node.hide(helpers_1.noop,ancestorId)})),_this.id===ancestorId?_this.viewRef.hide(callback):_this.viewRef.hide(helpers_1.noop)},_this.hideChildren=function(){requestAnimationFrame((function(){_this.childRefs.map((function(child,index,_a){var isLast=index===_a.length-1;child.hide((function(){isLast&&(_this.childRefs=[],_this.setState({isFullOpen:!1,isPartialOpen:!1,selectedChildNodeId:void 0}))}))}))}))},_this.onPress=function(params){var isCancel=(null==params?void 0:params.isCancel)||!1,isLongPress=(null==params?void 0:params.isLongPress)||!1,_a=_this.props.contextProps,isDisabled=_a.isDisabled,onCancel=_a.onCancel,_b=_this.props.nodeProps,_c=_b.id,id=void 0===_c?"root":_c,children=_b.nodeChildren,_d=_this.props.subTreeProps||{},_e=_d.onSelectChildLeaf,onSelectChildLeaf=void 0===_e?helpers_1.noop:_e,_f=_d.onSelectChildNode,onSelectChildNode=void 0===_f?helpers_1.noop:_f;isDisabled||(children&&children.length?_this.state.isFullOpen?(_this.isRoot&&isCancel&&onCancel&&onCancel(),void 0===_this.state.selectedChildNodeId&&_this.hideChildren()):_this.state.isPartialOpen?void 0!==_this.state.selectedChildNodeId&&(isLongPress?_this.reopenIntermediateNode():_this.closeIntermediateNode()):(_this.displayChildren(),onSelectChildNode(id,_this.displayChildren)):(onSelectChildLeaf(id,_this.path),_this.hideChildren()))},_this.displayChildren=function(){_this.setState({isFullOpen:!0})},_this.closeUnselectedChildren=function(selectedChildNodeId){requestAnimationFrame((function(){_this.childRefs.filter((function(_a){return _a.id!==selectedChildNodeId})).map((function(child,index,_a){var isLast=index===_a.length-1;child.hide((function(){isLast&&(_this.childRefs=_this.childRefs.filter((function(_a){return _a.id===selectedChildNodeId})),_this.setState({isFullOpen:!1,isPartialOpen:!0}))}))}))}))},_this.closeIntermediateNode=function(){_this.childRefs.map((function(child,index,_a){var isLast=index===_a.length-1;child.hide((function(){isLast&&(_this.childRefs=[],_this.setState({isPartialOpen:!1,selectedChildNodeId:void 0},(function(){_this.props.subTreeProps&&_this.props.subTreeProps.onSelectChildNode(_this.id,helpers_1.noop)})))}))}))},_this.reopenIntermediateNode=function(){_this.childRefs.map((function(child){child.hideChildren(),_this.setState({isFullOpen:!0,selectedChildNodeId:void 0},(function(){_this.props.subTreeProps&&_this.props.subTreeProps.onSelectChildNode(_this.id,helpers_1.noop)}))}))},_this.onSelectChildNode=function(selectedChildNodeId){var _a=_this.props.nodeProps.nodeChildren;(void 0===_a?[]:_a).some((function(_a){return _a.id===selectedChildNodeId}))&&_this.closeUnselectedChildren(selectedChildNodeId),_this.setState({selectedChildNodeId:selectedChildNodeId})},_this.onSelectChildLeaf=function(selectedChildNodeId,path){var onSelect=_this.props.contextProps.onSelect,_a=(_this.props.subTreeProps||{}).onSelectChildLeaf,onSelectChildLeaf=void 0===_a?helpers_1.noop:_a;_this.isRoot?(onSelect&&onSelect(selectedChildNodeId,path),_this.hideChildren()):onSelectChildLeaf(selectedChildNodeId,path)},_this}return __extends(FoldableTree,_super),Object.defineProperty(FoldableTree.prototype,"isRoot",{get:function(){return this.id===type_1.ROOT_ID},enumerable:!1,configurable:!0}),Object.defineProperty(FoldableTree.prototype,"path",{get:function(){var parentPath=this.props.subTreeProps?this.props.subTreeProps.parentPath:[];return __spreadArrays(parentPath,[this.id])},enumerable:!1,configurable:!0}),Object.defineProperty(FoldableTree.prototype,"id",{get:function(){return this.props.id},enumerable:!1,configurable:!0}),Object.defineProperty(FoldableTree.prototype,"isOpen",{get:function(){return this.state.isFullOpen||this.state.isPartialOpen},enumerable:!1,configurable:!0}),Object.defineProperty(FoldableTree.prototype,"isFullOpen",{get:function(){return this.state.isFullOpen},enumerable:!1,configurable:!0}),Object.defineProperty(FoldableTree.prototype,"isPartialOpen",{get:function(){return this.state.isPartialOpen},enumerable:!1,configurable:!0}),FoldableTree.prototype.componentDidMount=function(){var subTreeProps=this.props.subTreeProps;this.isRoot||null==subTreeProps||subTreeProps.onRef(this),this.isRoot&&this.props.isOpen&&!this.state.isFullOpen&&this.onPress()},FoldableTree.prototype.render=function(){var _this=this,_a=this.state,isPartialOpen=_a.isPartialOpen,isFullOpen=_a.isFullOpen,selectedChildNodeId=_a.selectedChildNodeId,_b=this.props,contextProps=_b.contextProps,nodeProps=_b.nodeProps,subTreeProps={parentPath:this.path,onSelectChildNode:this.onSelectChildNode,onSelectChildLeaf:this.onSelectChildLeaf,onRef:function(child){_this.childRefs.push(child)}};return contextProps.renderNode({isFullOpen:isFullOpen,isPartialOpen:isPartialOpen,selectedChildNodeId:selectedChildNodeId,contextProps:contextProps,path:this.path,subTreeProps:subTreeProps,nodeProps:nodeProps,onViewRef:function(node){return _this.viewRef=node},onPress:this.onPress})},FoldableTree.prototype.componentDidUpdate=function(prevProps,prevState){var _a=this.props.contextProps,onPostClose=_a.onPostClose,onPreOpen=_a.onPreOpen;!1===prevState.isFullOpen&&!0===this.state.isFullOpen&&onPreOpen&&onPreOpen(this.id),(!0===prevState.isFullOpen&&!1===this.state.isFullOpen||!0===prevState.isPartialOpen&&!1===this.state.isPartialOpen)&&onPostClose&&onPostClose(this.id),this.isRoot&&this.props.isOpen!==prevProps.isOpen&&this.props.isOpen&&!this.state.isFullOpen&&this.onPress()},FoldableTree.prototype.open=function(){throw new Error("Method not implemented")},FoldableTree.prototype.close=function(){throw new Error("Method not implemented")},FoldableTree.prototype.reopen=function(){throw new Error("Method not implemented")},FoldableTree.prototype.cancel=function(){throw new Error("Method not implemented")},FoldableTree}(React.PureComponent);exports.default=FoldableTree},1242:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.renderNodeFactory=void 0;var React=__importStar(__webpack_require__(0)),NodeView_1=__webpack_require__(1243);exports.renderNodeFactory=function renderNodeFactory(renderContent){return function renderNode(rendererProps){return React.createElement(NodeView_1.NodeView,__assign({renderButton:renderContent,renderNode:renderNode},rendererProps))}}},1243:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.NodeView=void 0;var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),helpers_1=__webpack_require__(202),styles_1=__webpack_require__(27),animated_1=__webpack_require__(116),foldableTree_1=__webpack_require__(286),business_1=__webpack_require__(1244),styles_2=__webpack_require__(1245),NodeView=function(_super){function NodeView(props){var _this=_super.call(this,props)||this;return _this.state={width:0,height:0},_this.animatedProximityValues={translateX:new animated_1.Animated.Value(0),translateY:new animated_1.Animated.Value(0),scale:new animated_1.Animated.Value(1)},_this.show=function(callback){_this.animation&&_this.animation.stop(),_this.animation=animated_1.Animated.parallel([animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateX,{toValue:_this.props.nodeProps.positionRelativeToParentNode.x,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0}),animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateY,{toValue:_this.props.nodeProps.positionRelativeToParentNode.y,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0}),animated_1.Animated.timing(_this.animatedToggleValues.animatedOpacity,{toValue:1,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0}),animated_1.Animated.timing(_this.animatedToggleValues.animatedScale,{toValue:1,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0})]),_this.animation.start(callback)},_this.hide=function(callback){_this.animation=animated_1.Animated.parallel([animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateX,{toValue:0,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0}),animated_1.Animated.timing(_this.animatedToggleValues.animatedTranslateY,{toValue:0,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0}),animated_1.Animated.timing(_this.animatedToggleValues.animatedOpacity,{toValue:0,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0}),animated_1.Animated.timing(_this.animatedToggleValues.animatedScale,{toValue:1,duration:_this.props.nodeProps.nodeOpeningDuration,easing:animated_1.Animated.Easing.InOut(),useNativeDriver:!0})]),_this.animation.start(callback)},_this.onNodeLayout=function(layout){_this.setButtonLayoutRelativeToContainer(layout),_this.props.nodeProps.onNodeLayout(_this,_this.buttonLayoutRelativeToContainer)},_this.onPress=function(){_this.animateScaleDown(),_this.props.onPress()},_this.onHoverStart=function(){_this.props.contextProps.onEnter&&_this.props.contextProps.onEnter(_this.id),_this.animateScaleUp()},_this.onHoverEnd=function(){_this.props.contextProps.onExit&&_this.props.contextProps.onExit(_this.id),_this.animateScaleDown()},_this.setButtonLayoutRelativeToContainer=function(layout){var _a=_this.props.nodeProps,positionRelativeToParentNode=_a.positionRelativeToParentNode,nodeParentAbsolutePosition=_a.nodeParentAbsolutePosition;_this.buttonLayoutRelativeToContainer={x:(nodeParentAbsolutePosition.x||0)+positionRelativeToParentNode.x,y:(nodeParentAbsolutePosition.y||0)+positionRelativeToParentNode.y,width:layout.width,height:layout.height}},_this.animatedToggleValues=business_1.getInitialAnimatedValues({isRoot:_this.props.nodeProps.id===foldableTree_1.ROOT_ID}),_this}return __extends(NodeView,_super),Object.defineProperty(NodeView.prototype,"id",{get:function(){return this.props.nodeProps.id},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"isRoot",{get:function(){return this.props.nodeProps.id===foldableTree_1.ROOT_ID},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"localPosition",{get:function(){return this.props.nodeProps.positionRelativeToParentNode},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"nodeData",{get:function(){return this.props.nodeProps.nodeData},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"hasChildren",{get:function(){return!!this.props.nodeProps.nodeChildren.length},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"isOpen",{get:function(){return this.props.isFullOpen||this.props.isPartialOpen},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"isFullOpen",{get:function(){return this.props.isFullOpen},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"isPartialOpen",{get:function(){return this.props.isPartialOpen},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"path",{get:function(){return this.props.path},enumerable:!1,configurable:!0}),Object.defineProperty(NodeView.prototype,"spreadOrientation",{get:function(){var _a=this.props.nodeProps,rootSpreadOrientation=_a.rootSpreadOrientation,spreadRadius=_a.spreadRadius;if(this.isRoot&&rootSpreadOrientation)return rootSpreadOrientation;if(!this.buttonLayoutRelativeToContainer)return 0;var openedPositionRelativeToPage={x:this.buttonLayoutRelativeToContainer.x,y:this.buttonLayoutRelativeToContainer.y};return business_1.getSpreadOrientation({localPosition:openedPositionRelativeToPage,radius:spreadRadius,nodeLayout:__assign({},this.buttonLayoutRelativeToContainer),parentDimension:reactxp_1.UserInterface.measureWindow()})},enumerable:!1,configurable:!0}),NodeView.prototype.setDistanceFromPointer=function(distance){this.hasChildren||function onHoverFeedback(_a){var localPosition=_a.localPosition,animatedValues=_a.animatedValues,distanceFromCenter=_a.distanceFromChildCenter,relativeDistance=(distanceFromCenter||1/0)-32,clampedDistance=Math.min(100,Math.max(0,relativeDistance)),factor=.1-clampedDistance/680,toScale=1+factor;distanceFromCenter&&(animatedValues.translateX.setValue(localPosition.x*factor),animatedValues.translateY.setValue(localPosition.y*factor),animatedValues.scale.setValue(toScale))}({animatedValues:this.animatedProximityValues,localPosition:this.localPosition,distanceFromChildCenter:distance})},NodeView.prototype.open=function(){this.isOpen||this.props.onPress()},NodeView.prototype.close=function(){this.isOpen&&this.props.onPress()},NodeView.prototype.reopen=function(){this.props.onPress({isLongPress:!0})},NodeView.prototype.cancel=function(){this.props.onPress({isCancel:!0})},NodeView.prototype.hideChildren=function(){throw Error("Method not implemented")},NodeView.prototype.componentDidMount=function(){var onViewRef=this.props.onViewRef;this.isRoot||this.show(helpers_1.noop),onViewRef&&onViewRef(this)},NodeView.prototype.componentWillUnmount=function(){var _a=this.props.nodeProps,onUnmount=_a.onUnmount,id=_a.id;onUnmount&&onUnmount(id)},NodeView.prototype.render=function(){var _this=this,_a=this.props,contextProps=_a.contextProps,_b=_a.nodeProps,nodeChildren=_b.nodeChildren,nodeLocalPosition=_b.positionRelativeToParentNode,nodeOpeningDuration=_b.nodeOpeningDuration,nodeParentAbsolutePosition=_b.nodeParentAbsolutePosition,optionSeparationAngle=_b.optionSeparationAngle,spreadRadius=_b.spreadRadius,onNodeLayout=_b.onNodeLayout,subTreeProps=_a.subTreeProps,isFullOpen=_a.isFullOpen,selectedChildNodeId=_a.selectedChildNodeId,nodeProps=_a.nodeProps,_c=this.props.contextProps.style,style=void 0===_c?{}:_c,fabStyle=styles_2.createFabStyle(__assign({isRoot:this.isRoot,localPosition:nodeProps.positionRelativeToParentNode,style:style},this.state)),animatedStyles={toggle:styles_1.Styles.createAnimatedViewStyle({opacity:this.animatedToggleValues.animatedOpacity,transform:[{translateX:this.animatedToggleValues.animatedTranslateX},{translateY:this.animatedToggleValues.animatedTranslateY},{scale:this.animatedToggleValues.animatedScale}]}),hover:styles_1.Styles.createAnimatedViewStyle({transform:[{translateX:this.animatedProximityValues.translateX},{translateY:this.animatedProximityValues.translateY},{scale:this.animatedProximityValues.scale}]})},children=function renderChildren(_a){var contextProps=_a.contextProps,isFullOpen=_a.isFullOpen,nodeChildren=_a.nodeChildren,nodeLocalPosition=_a.nodeLocalPosition,nodeOpeningDuration=_a.nodeOpeningDuration,nodeParentAbsolutePosition=_a.nodeParentAbsolutePosition,onNodeLayout=_a.onNodeLayout,onMount=_a.onMount,onUnmount=_a.onUnmount,optionSeparationAngle=_a.optionSeparationAngle,selectedChildNodeId=_a.selectedChildNodeId,spreadOrientation=_a.spreadOrientation,spreadRadius=_a.spreadRadius,subTreeProps=_a.subTreeProps;return nodeChildren.reduce((function(els,child,index,_a){var siblingNumber=_a.length,id=child.id,localPosition=business_1.getPosition({spreadRadius:spreadRadius,optionSeparationAngle:optionSeparationAngle,spreadOrientation:spreadOrientation,siblingNumber:siblingNumber,index:index}),parentNodeAbsolutePosition={x:(nodeParentAbsolutePosition.x||0)+nodeLocalPosition.x,y:(nodeParentAbsolutePosition.y||0)+nodeLocalPosition.y};return isFullOpen||child.id===selectedChildNodeId?__spreadArrays(els,[React.createElement(foldableTree_1.FoldableTree,{key:id,id:child.id,subTreeProps:subTreeProps,contextProps:contextProps,nodeProps:{id:child.id,nodeData:child.nodeData||{},nodeChildren:child.nodeChildren||[],positionRelativeToParentNode:localPosition,nodeParentAbsolutePosition:parentNodeAbsolutePosition,onNodeLayout:onNodeLayout,onMount:onMount,onUnmount:onUnmount,nodeOpeningDuration:nodeOpeningDuration,optionSeparationAngle:optionSeparationAngle,spreadRadius:spreadRadius}})]):els}),[])}({contextProps:contextProps,isFullOpen:isFullOpen,nodeChildren:nodeChildren,nodeLocalPosition:nodeLocalPosition,nodeOpeningDuration:nodeOpeningDuration,nodeParentAbsolutePosition:nodeParentAbsolutePosition,onNodeLayout:onNodeLayout,optionSeparationAngle:optionSeparationAngle,spreadRadius:spreadRadius,selectedChildNodeId:selectedChildNodeId,spreadOrientation:this.spreadOrientation,subTreeProps:subTreeProps,onUnmount:function(childId){_this.props.nodeProps.onUnmount&&_this.props.nodeProps.onUnmount(childId)}}),ButtonContainer=React.createElement(animated_1.Animated.View,{style:[fabStyle.buttonContainer,fabStyle.animatedViewHover,animatedStyles.hover],onLayout:this.onNodeLayout},this.props.renderButton({nodeInstance:this,mandatoryProps:{onHoverStart:this.onHoverStart,onHoverEnd:this.onHoverEnd,onLayout:function(_a){var width=_a.width,height=_a.height;(0===_this.state.width&&_this.state.width!==width||0===_this.state.height&&_this.state.height!==height)&&_this.setState({width:width,height:height})},onPress:function(e){_this.isRoot&&_this.props.contextProps.onPressRoot&&_this.props.contextProps.onPressRoot(),helpers_1.isTouch(e)||_this.onHoverEnd(),(!helpers_1.isTouch(e)||helpers_1.isTouch(e)&&(_this.props.isPartialOpen||_this.props.isFullOpen||_this.props.isFullOpen&&_this.props.nodeProps.nodeChildren.length))&&_this.onPress()},onLongPress:function(e){!_this.isOpen&&_this.hasChildren&&(e.stopPropagation(),_this.onPress())}}}));return React.createElement(animated_1.Animated.View,{style:[fabStyle.animatedViewToggle,animatedStyles.toggle,this.isRoot?fabStyle.root:{}]},children,ButtonContainer)},NodeView.prototype.animateScaleUp=function(){this.touchProximityAnimation&&this.touchProximityAnimation.stop(),this.touchProximityAnimation=getHoverAnimation({toPos:{x:0,y:0},toScale:1.2,animatedValues:this.animatedProximityValues,duration:100}),this.touchProximityAnimation.start()},NodeView.prototype.animateScaleDown=function(){this.touchProximityAnimation&&this.touchProximityAnimation.stop(),this.touchProximityAnimation=getHoverAnimation({toPos:{x:0,y:0},toScale:1,animatedValues:this.animatedProximityValues,duration:100}),this.touchProximityAnimation.start()},NodeView}(React.Component);function getHoverAnimation(_a){var toPos=_a.toPos,toScale=_a.toScale,animatedValues=_a.animatedValues,duration=_a.duration;return animated_1.Animated.parallel([animated_1.Animated.timing(animatedValues.translateX,{toValue:toPos.x,duration:duration,easing:animated_1.Animated.Easing.InOut()}),animated_1.Animated.timing(animatedValues.translateY,{toValue:toPos.y,duration:duration,easing:animated_1.Animated.Easing.InOut()}),animated_1.Animated.timing(animatedValues.scale,{toValue:toScale,duration:duration,easing:animated_1.Animated.Easing.InOut()})])}exports.NodeView=NodeView},1244:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getSpreadOrientation=exports.getPosition=exports.getInitialAnimatedValues=void 0;var animated_1=__webpack_require__(116);exports.getInitialAnimatedValues=function(_a){var isRoot=_a.isRoot;return{animatedTranslateX:new animated_1.Animated.Value(0),animatedTranslateY:new animated_1.Animated.Value(0),animatedOpacity:new animated_1.Animated.Value(Number(isRoot)),animatedScale:new animated_1.Animated.Value(1)}},exports.getPosition=function getPosition(_a){var optionSeparationAngle=_a.optionSeparationAngle,spreadRadius=_a.spreadRadius,spreadOrientation=_a.spreadOrientation,siblingNumber=_a.siblingNumber,index=_a.index,spreadAngle=optionSeparationAngle*(siblingNumber-1);return{x:Math.cos((spreadOrientation-spreadAngle/2+optionSeparationAngle*index)*Math.PI/180)*spreadRadius,y:Math.sin((spreadOrientation-spreadAngle/2+optionSeparationAngle*index)*Math.PI/180)*spreadRadius}},exports.getSpreadOrientation=function getSpreadOrientation(_a){var localPosition=_a.localPosition,radius=_a.radius,nodeLayout=_a.nodeLayout,parentDimension=_a.parentDimension,isOverflowLeft=localPosition.x-radius<0,isOverflowRight=localPosition.x+radius+nodeLayout.width>parentDimension.width,isOverflowTop=localPosition.y-radius<0,isOverflowBottom=localPosition.y+radius+nodeLayout.height>parentDimension.height;return isOverflowTop||isOverflowRight||isOverflowBottom||isOverflowLeft?isOverflowRight?180+(isOverflowTop?-45:45):isOverflowTop?45:-45:0}},1245:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.createFabStyle=void 0;var styles_1=__webpack_require__(27);exports.createFabStyle=function createFabStyle(_a){var isRoot=_a.isRoot,localPosition=_a.localPosition,_b=_a.style,style=void 0===_b?{}:_b,rootPosition=isRoot?{left:localPosition.x,top:localPosition.y}:void 0;return{root:styles_1.Styles.createViewStyle(__assign(__assign({position:"absolute",overflow:"visible"},style.root),rootPosition),!1),animatedViewToggle:styles_1.Styles.createViewStyle({position:"absolute",overflow:"visible"}),animatedViewHover:styles_1.Styles.createViewStyle({position:"absolute",overflow:"visible"}),buttonContainer:styles_1.Styles.createViewStyle({position:"absolute",alignSelf:"auto"})}}},1246:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TouchDetector=void 0;var React=__importStar(__webpack_require__(0)),styles_1=__webpack_require__(27),animated_1=__webpack_require__(116),TouchDetector=function(_super){function TouchDetector(props){var _this=_super.call(this,props)||this;return _this.actions={addObject:function(objectId,layout){present(_this,{type:"addObject",payload:{objectId:objectId,layout:layout}}),_this.forceUpdate()},removeObject:function(nodeId){present(_this,{type:"removeObject",payload:{nodeId:nodeId}})},startLongTouch:function(touch){present(_this,{type:"addLongTouch",payload:{touch:touch}})}},_this.touchDetectorAnimatedValue={x:animated_1.Animated.createValue(1),y:animated_1.Animated.createValue(1),width:animated_1.Animated.createValue(1),height:animated_1.Animated.createValue(1)},_this._SAMModelData={objectLayouts:new Map,touches:[],longTouchIds:[],longPressDelay:200,willCancelNextPressEvent:!1},_this.onRepresentation=function(rep){var _a,_b,_c;rep.touchDetectorLayout&&_this.setBoundingBox(rep.touchDetectorLayout),null===(_a=rep.newTargets)||void 0===_a||_a.forEach(_this.onObjectTouchStart),null===(_b=rep.oldTouchTargetIds)||void 0===_b||_b.forEach(_this.onObjectTouchStop),rep.didReleaseEmptyTouch&&_this.onObjectTouchStop(),rep.newLongTouch&&_this.onObjectLongTouchStart(rep.newLongTouch),null===(_c=rep.oldLongTouchTargetIds)||void 0===_c||_c.forEach(_this.onObjectLongTouchStop),rep.clickTargetId&&_this.props.onClick&&_this.props.onClick(rep.clickTargetId),_this.props.onPointerDistancesFromLayouts&&rep.pointerDistancesFromLayouts&&_this.props.onPointerDistancesFromLayouts(rep.pointerDistancesFromLayouts),rep.targetChange&&_this.props.onTargetChange&&_this.props.onTargetChange(rep.targetChange)},_this.onResponderStart=function(event){present(_this,{type:"startTouch",payload:{touches:getLocalTouches(event.nativeEvent.changedTouches,_this.localPositionRelativeToPage)}})},_this.onResponderRelease=function(event){present(_this,{type:"stopTouch",payload:{touches:getLocalTouches(event.nativeEvent.changedTouches,_this.localPositionRelativeToPage)}})},_this.onResponderMove=function(event){var touch=getLocalTouches(event.nativeEvent.changedTouches,_this.localPositionRelativeToPage)[0];present(_this,{type:"moveTouch",payload:{identifier:touch.identifier,localX:touch.localX,localY:touch.localY}})},_this.onObjectTouchStart=function(touchedObject){_this.props.onObjectTouchStart&&_this.props.onObjectTouchStart(touchedObject)},_this.onObjectTouchStop=function(targetId){_this.props.onTouchStop&&(targetId?_this.props.onTouchStop(targetId):_this.props.onTouchStop())},_this.onObjectLongTouchStart=function(touchedObject){_this.props.onObjectLongTouchStart&&_this.props.onObjectLongTouchStart(touchedObject)},_this.onObjectLongTouchStop=function(targetId){_this.props.onObjectLongTouchStop&&_this.props.onObjectLongTouchStop(targetId)},_this.onPress=function(event){var click,localOriginPositionRelativeToPage,timeStamp;_this.props.onClick&&function isMouseClick(event){return!("touches"in event)}(event)&&present(_this,{type:"clicked",payload:{click:(click=event,localOriginPositionRelativeToPage=_this.localPositionRelativeToPage,timeStamp=Date.now(),{uid:timeStamp.toString(),timeStamp:timeStamp,localX:(click.pageX||click.clientX)-localOriginPositionRelativeToPage.x,localY:(click.pageY||click.clientY)-localOriginPositionRelativeToPage.y})}})},_this._SAMModelData.longPressDelay=_this.props.longPressDelay||200,_this.touchDetectorAnimation=styles_1.Styles.createAnimatedViewStyle({transform:[{translateX:_this.touchDetectorAnimatedValue.x},{translateY:_this.touchDetectorAnimatedValue.y},{scaleX:_this.touchDetectorAnimatedValue.width},{scaleY:_this.touchDetectorAnimatedValue.height}]}),_this}return __extends(TouchDetector,_super),Object.defineProperty(TouchDetector.prototype,"data",{get:function(){return this._SAMModelData},enumerable:!1,configurable:!0}),Object.defineProperty(TouchDetector.prototype,"localPositionRelativeToPage",{get:function(){return{x:this.props.containerPositionRelativeToWindow.x,y:this.props.containerPositionRelativeToWindow.y}},enumerable:!1,configurable:!0}),TouchDetector.prototype.setBoundingBox=function(boundingBox){this.touchDetectorAnimatedValue.x.setValue(boundingBox.x+boundingBox.width/2),this.touchDetectorAnimatedValue.y.setValue(boundingBox.y+boundingBox.height/2),this.touchDetectorAnimatedValue.height.setValue(boundingBox.height),this.touchDetectorAnimatedValue.width.setValue(boundingBox.width)},TouchDetector.prototype.componentDidMount=function(){this.props.onRef&&this.props.onRef(this)},TouchDetector.prototype.render=function(){return React.createElement(React.Fragment,null,React.createElement(animated_1.Animated.View,{onResponderStart:this.onResponderStart,onResponderRelease:this.onResponderRelease,onResponderMove:this.onResponderMove,onPress:this.onPress,style:[{position:"absolute",width:1,height:1,left:0,top:0},this.touchDetectorAnimation]}))},TouchDetector}(React.Component);function present(instance,proposal){var _a,oldModel=__assign(__assign({},instance.data),{longTouchIds:__spreadArrays(instance.data.longTouchIds),touches:instance.data.touches.map((function(touch){return __assign({},touch)})),objectLayouts:new Map(instance.data.objectLayouts)});switch(proposal.type){case"addObject":instance.data.objectLayouts.set(proposal.payload.objectId,proposal.payload.layout);break;case"removeObject":instance.data.objectLayouts.delete(proposal.payload.nodeId);break;case"startTouch":cleanTouches(proposal,instance),instance.data.willCancelNextPressEvent=!0,(_a=instance.data.touches).push.apply(_a,proposal.payload.touches);break;case"stopTouch":instance.data.willCancelNextPressEvent=!0,cleanTouches(proposal,instance);break;case"addLongTouch":var startTouch=instance.data.touches.find((function(_a){var uid=_a.uid;return proposal.payload.touch.uid===uid}));if(startTouch){var startTarget=getTouchedObjects([startTouch],instance.data.objectLayouts)[0],currentTarget=getTouchedObjects([proposal.payload.touch],instance.data.objectLayouts)[0];startTarget&&currentTarget&&startTarget.targetId===currentTarget.targetId&&instance.data.longTouchIds.push(proposal.payload.touch.uid)}break;case"moveTouch":var touch=instance.data.touches.find((function(_a){return _a.identifier===proposal.payload.identifier}));touch&&(touch.localX=proposal.payload.localX,touch.localY=proposal.payload.localY)}!function computeNextState(previousData,_a,proposal){var _b,data=_a.data,onRepresentation=_a.onRepresentation,actions=_a.actions,representation={};switch(proposal.type){case"addObject":case"removeObject":representation.touchDetectorLayout=function getBoundingBox(objectLayouts){if(!objectLayouts.length)return{x:0,y:0,width:0,height:0};var rightestChild=objectLayouts.reduce((function(farestChild,childWithPosition){return farestChild&&farestChild.x>childWithPosition.x?farestChild:childWithPosition}),objectLayouts[0]),leftestChild=objectLayouts.reduce((function(closestChild,childWithPosition){return closestChild&&closestChild.x<childWithPosition.x?closestChild:childWithPosition}),objectLayouts[0]),uppestChild=objectLayouts.reduce((function(closestChild,childWithPosition){return closestChild&&closestChild.y<childWithPosition.y?closestChild:childWithPosition}),objectLayouts[0]),lowestChild=objectLayouts.reduce((function(farestChild,childWithPosition){return farestChild&&farestChild.y>childWithPosition.y?farestChild:childWithPosition}),objectLayouts[0]),leftest=leftestChild.x,rightest=rightestChild.x,uppest=uppestChild.y,lowest=lowestChild.y,width=rightest-leftest+rightestChild.width,height=lowest-uppest+lowestChild.height;return{x:leftest,y:uppest,width:width,height:height}}(Array.from(data.objectLayouts.values()));break;case"startTouch":representation.newTargets=getTouchedObjects(proposal.payload.touches,data.objectLayouts);break;case"stopTouch":var oldTouches_1=proposal.payload.touches.map((function(_a){var identifier=_a.identifier;return previousData.touches.find((function(_a){var _identifier=_a.identifier;return identifier===_identifier}))})),oldLongTouchIds_1=previousData.longTouchIds.filter((function(id){return oldTouches_1.some((function(_a){return _a.uid===id}))})),oldNormalTouchIds_1=previousData.touches.map((function(_a){return _a.uid})).filter((function(uid){return!oldLongTouchIds_1.includes(uid)})),oldLongTouches=oldTouches_1.filter((function(_a){var uid=_a.uid;return oldLongTouchIds_1.includes(uid)})),oldNormalTouches=oldTouches_1.filter((function(_a){var uid=_a.uid;return oldNormalTouchIds_1.includes(uid)})),oldTouchTargetIds=representation.oldTouchTargetIds=getTouchedObjects(oldNormalTouches,data.objectLayouts).map((function(_a){return _a.targetId}));(representation.oldLongTouchTargetIds=getTouchedObjects(oldLongTouches,data.objectLayouts).map((function(_a){return _a.targetId}))).length||oldTouchTargetIds.length||(representation.didReleaseEmptyTouch=!0);break;case"addLongTouch":if(data.longTouchIds.includes(proposal.payload.touch.uid)){var target=getTouchedObjects([proposal.payload.touch],data.objectLayouts)[0];target&&(representation.newLongTouch={targetId:target.targetId,touchUIDs:[proposal.payload.touch.uid]})}break;case"moveTouch":var movedTouch=data.touches.find((function(_a){return _a.identifier===proposal.payload.identifier}));movedTouch&&(representation.newTargets=getTouchedObjects([movedTouch],data.objectLayouts),representation.pointerDistancesFromLayouts=[],data.objectLayouts.forEach((function(layout,targetId){representation.pointerDistancesFromLayouts.push({targetId:targetId,distance:Math.hypot(proposal.payload.localX-layout.x-layout.width/2,proposal.payload.localY-layout.y-layout.height/2)})}))),representation.targetChange=getTargetChange(proposal,previousData,data);break;case"clicked":if(!data.willCancelNextPressEvent){var targetId=function getClickedObjectId(click,objectLayouts){var targetLayout=Array.from(objectLayouts.entries()).find((function(_a){_a[0];var layout=_a[1];return isInside({x:click.localX,y:click.localY},layout)}));return targetLayout?targetLayout[0]:void 0}(proposal.payload.click,data.objectLayouts);representation.clickTargetId=targetId}}switch(proposal.type){case"startTouch":proposal.payload.touches.forEach((function(touch){setTimeout((function(){actions.startLongTouch(touch)}),data.longPressDelay)}));break;case"moveTouch":"entered"===(null===(_b=getTargetChange(proposal,previousData,data))||void 0===_b?void 0:_b.op)&&setTimeout((function(){var touch=data.touches.find((function(_a){var identifier=_a.identifier;return proposal.payload.identifier===identifier}));touch&&touch&&actions.startLongTouch(touch)}),data.longPressDelay)}onRepresentation(representation)}(oldModel,instance,proposal)}function cleanTouches(proposal,instance){proposal.payload.touches.forEach((function(_a){var identifier=_a.identifier,index=instance.data.touches.findIndex((function(_a){var _identifier=_a.identifier;return identifier===_identifier})),removed=instance.data.touches.splice(index,1);removed[0]&&instance.data.longTouchIds.splice(instance.data.longTouchIds.indexOf(removed[0].uid),1)}))}function getTouchedObjects(touches,objectLayouts){var targets=[];return touches.forEach((function(touch){Array.from(objectLayouts.entries()).filter((function(_a){_a[0];var layout=_a[1];return isInside({x:touch.localX,y:touch.localY},layout)})).map((function(_a){return{id:_a[0],touchId:touch.uid}})).forEach((function(target){var alreadyKnownTarget=targets.find((function(_a){return _a.targetId===target.id}));alreadyKnownTarget?alreadyKnownTarget.touchUIDs.push(target.touchId):targets.push({targetId:target.id,touchUIDs:[target.touchId]})}))})),targets}function isInside(position,layout){return position.x>=layout.x&&position.x<=layout.x+layout.width&&position.y>=layout.y&&position.y<=layout.y+layout.height}function getLocalTouches(touchList,localPositionRelativeToPage){for(var touches=[],i=0;i<touchList.length;i++){var timeStamp=Date.now();touches.push({identifier:touchList[i].identifier,uid:touchList[i].identifier+""+timeStamp,localX:touchList[i].pageX-localPositionRelativeToPage.x,localY:touchList[i].pageY-localPositionRelativeToPage.y,timeStamp:timeStamp})}return touches}function getTargetChange(proposal,previousData,data){var _a,_b,oldTouch=previousData.touches.find((function(_a){var identifier=_a.identifier;return proposal.payload.identifier===identifier})),currentTouch=data.touches.find((function(_a){var identifier=_a.identifier;return proposal.payload.identifier===identifier}));if(oldTouch&&currentTouch){var oldTouchTargetId=null===(_a=getTouchedObjects([oldTouch],previousData.objectLayouts)[0])||void 0===_a?void 0:_a.targetId,currentTouchTargetId=null===(_b=getTouchedObjects([currentTouch],data.objectLayouts)[0])||void 0===_b?void 0:_b.targetId;if(oldTouchTargetId!==currentTouchTargetId&&currentTouchTargetId)return{op:"entered",prevTarget:oldTouchTargetId,target:currentTouchTargetId};if(oldTouchTargetId!==currentTouchTargetId&&oldTouchTargetId)return{op:"exited",prevTarget:oldTouchTargetId,target:currentTouchTargetId}}}exports.TouchDetector=TouchDetector},1247:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Grid_1=__webpack_require__(1248);Object.defineProperty(exports,"Grid",{enumerable:!0,get:function(){return Grid_1.default}})},1248:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),view_1=__webpack_require__(31),styles=__importStar(__webpack_require__(1249));exports.default=function Grid(_a){var items=_a.items,style=_a.style,_b=_a.padding,padding=void 0===_b?4:_b,_c=_a.itemHeight,itemHeight=void 0===_c?108:_c,_d=_a.itemWidth,itemWidth=void 0===_d?80:_d,itemContainerStyle=styles.createItemContainerStyle(itemHeight,itemWidth,padding);return React.createElement(view_1.View,{style:styles.createGridStyle(padding,style)},items.map((function(_a){var key=_a.key,image=_a.image,title=_a.title;return React.createElement(view_1.View,{style:itemContainerStyle,key:key},React.createElement(view_1.View,{style:styles.imageContainer},image),title&&React.createElement(view_1.View,{style:styles.bottomContainer},title))})))}},1249:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.bottomContainer=exports.imageContainer=exports.createItemContainerStyle=exports.createGridStyle=void 0;var styles_1=__webpack_require__(27);exports.createGridStyle=function createGridStyle(padding,style){return styles_1.Styles.createViewStyle(__assign({flex:1,flexDirection:"row",justifyContent:"flex-start",flexWrap:"wrap",padding:padding/2},style))},exports.createItemContainerStyle=function createItemContainerStyle(height,width,padding){return styles_1.Styles.createViewStyle({height:height,width:width,flexShrink:1,padding:padding/2,alignItems:"stretch"})},exports.imageContainer=styles_1.Styles.createViewStyle({flex:1,alignItems:"stretch"}),exports.bottomContainer=styles_1.Styles.createViewStyle({minHeight:28,justifyContent:"flex-end"})},1250:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var LinearGradient_1=__webpack_require__(1251);Object.defineProperty(exports,"LinearGradient",{enumerable:!0,get:function(){return LinearGradient_1.default}})},1251:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=this&&this.__generator||function(thisArg,body){var f,y,t,g,_={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),react_dom_1=__webpack_require__(16),reactxp_1=__webpack_require__(6),view_1=__webpack_require__(31),styles=__importStar(__webpack_require__(1252)),LinearGradient=function(_super){function LinearGradient(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.measure=function(e){e.width!==_this.oldWidth&&e.height!==_this.oldHeight&&(_this.oldWidth=e.width,_this.oldHeight=e.height,_this.updateLayout({width:e.width,height:e.height}))},_this}return __extends(LinearGradient,_super),LinearGradient.prototype.render=function(){var _this=this,style=this.props.style,gradientContainerStyle=styles.createGradientContainerStyle(style);return React.createElement(view_1.View,{style:[gradientContainerStyle,style],onLayout:this.measure,ref:function(comp){return _this.rootRef=comp}},React.createElement(view_1.View,{style:style,ref:function(comp){return _this.backgroundImageRef=comp}}))},LinearGradient.prototype.componentDidMount=function(){return __awaiter(this,void 0,void 0,(function(){var rect;return __generator(this,(function(_a){switch(_a.label){case 0:return[4,reactxp_1.UserInterface.measureLayoutRelativeToWindow(this.rootRef)];case 1:return rect=_a.sent(),this.oldWidth=rect.width,this.oldHeight=rect.height,this.updateLayout({width:rect.width,height:rect.height}),[2]}}))}))},LinearGradient.prototype.updateLayout=function(dimensions){var _this=this;[react_dom_1.findDOMNode(this.backgroundImageRef)].map((function(e){var style=_this.getStyle(dimensions);Object.keys(style).forEach((function(key){return e.style[key]=style[key]}))}))},LinearGradient.prototype.getAngle=function(_a){var width=_a.width,height=_a.height,_b=this.props,_d=_b.start,start=void 0===_d?[0,0]:_d,_e=_b.end,end=void 0===_e?[0,1]:_e;return Math.atan2(width*(100*end[1]-100*start[1]),height*(100*end[0]-100*start[0]))+Math.PI/2+"rad"},Object.defineProperty(LinearGradient.prototype,"locations",{get:function(){return this.props.locations&&this.props.locations.length===this.props.colors.length?this.props.locations:this.props.colors.map((function(_c,i,colors){return i/(colors.length-1)}))},enumerable:!1,configurable:!0}),Object.defineProperty(LinearGradient.prototype,"colors",{get:function(){var locations=this.locations;return this.props.colors.map((function(color,index){var location=locations[index],locationStyle="";return location&&(locationStyle=" "+100*location+"%"),color+locationStyle})).join(",")},enumerable:!1,configurable:!0}),LinearGradient.prototype.getStyle=function(dimensions){return{position:"absolute",top:"0",right:"0",bottom:"0",left:"0",backgroundImage:"linear-gradient("+this.getAngle(dimensions)+", "+this.colors+")"}},LinearGradient}(React.PureComponent);exports.default=LinearGradient},1252:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createGradientContainerStyle=void 0;var styles_1=__webpack_require__(27);exports.createGradientContainerStyle=function createGradientContainerStyle(style){if(!style)return{};var borderRadius=style.borderRadius;return borderRadius?styles_1.Styles.createViewStyle({borderRadius:borderRadius}):{}}},1253:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var reactxp_1=__webpack_require__(6);Object.defineProperty(exports,"Link",{enumerable:!0,get:function(){return reactxp_1.Link}})},1254:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var List_1=__webpack_require__(1255);Object.defineProperty(exports,"List",{enumerable:!0,get:function(){return List_1.default}});var ListItem_1=__webpack_require__(1256);Object.defineProperty(exports,"ListItem",{enumerable:!0,get:function(){return ListItem_1.default}})},1255:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),view_1=__webpack_require__(31),styles_1=__webpack_require__(496);exports.default=function default_1(_a){var style=_a.style,children=_a.children,rootStyle=style&&style.root||{};return React.createElement(view_1.View,{style:[styles_1.listStyle,rootStyle]},children)}},1256:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),styles_1=__webpack_require__(27),button_1=__webpack_require__(285),text_1=__webpack_require__(201),view_1=__webpack_require__(31),styles_2=__webpack_require__(496);exports.default=styles_1.withTheme((function(_a){var renderLeftIcon=_a.renderLeftIcon,renderLeftCircleIcon=_a.renderLeftCircleIcon,circleImageSlot=_a.circleImageSlot,squareImageSlot=_a.squareImageSlot,centerSlot=_a.centerSlot,rightSlot=_a.rightSlot,title=_a.title,titleSlot=_a.titleSlot,meta=_a.meta,metaSlot=_a.metaSlot,text=_a.text,textSlot=_a.textSlot,palette=_a.palette,_b=_a.hasTwoLinesText,hasTwoLinesText=void 0!==_b&&_b,theme=_a.theme,style=_a.style,isLast=_a.isLast,mainAction=_a.mainAction,listItemStyle=styles_2.createListItemStyle({theme:theme,hasMeta:!!meta,hasIcon:!!renderLeftIcon,hasCircleImageOrImage:!!circleImageSlot||!!renderLeftCircleIcon,hasSquareImage:!!squareImageSlot,hasTextOrContent:!!text||!!centerSlot,hasTwoLinesText:hasTwoLinesText,styleOverride:style,isLast:isLast,palette:palette});return React.createElement(view_1.View,{style:listItemStyle.root},renderLeftIcon&&React.createElement(view_1.View,{style:listItemStyle.leftIconContainer},renderLeftIcon(listItemStyle.iconStyle)),renderLeftCircleIcon&&React.createElement(view_1.View,{style:listItemStyle.circleIconContainer},renderLeftCircleIcon(listItemStyle.iconCircleStyle)),circleImageSlot&&React.createElement(view_1.View,{style:listItemStyle.circleImageContainer},circleImageSlot),squareImageSlot&&React.createElement(view_1.View,{style:listItemStyle.squareImageContainer},squareImageSlot),React.createElement(view_1.View,{style:listItemStyle.center},titleSlot,title&&React.createElement(text_1.Text,{style:listItemStyle.title},title),metaSlot,meta&&React.createElement(text_1.Text,{style:listItemStyle.meta},meta),textSlot,text&&React.createElement(text_1.Text,{style:listItemStyle.text},text),centerSlot),mainAction&&React.createElement(button_1.Button,{variant:"text",onPress:mainAction,palette:palette,style:listItemStyle.mainButton}),rightSlot&&React.createElement(view_1.View,{style:listItemStyle.right},rightSlot))}))},1257:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0});var ProgressBar_1=__webpack_require__(1258);Object.defineProperty(exports,"ProgressBar",{enumerable:!0,get:function(){return ProgressBar_1.default}}),__exportStar(__webpack_require__(497),exports)},1258:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),ThemeContext_1=__webpack_require__(88),view_1=__webpack_require__(31),style_1=__importDefault(__webpack_require__(497)),ProgressBar=function(_super){function ProgressBar(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={containerWidth:0},_this.animatedPercent=reactxp_1.Animated.createValue(0),_this.animatedOffset=reactxp_1.Animated.createValue(0),_this.onLayout=function(layout){_this.setState({containerWidth:layout.width})},_this}return __extends(ProgressBar,_super),ProgressBar.prototype.componentDidMount=function(){this.animatedStyle=reactxp_1.Styles.createAnimatedViewStyle({transform:[{translateX:this.animatedOffset},{scaleX:this.animatedPercent}]})},ProgressBar.prototype.render=function(){var _this=this,_a=this.props,palette=_a.palette,style=_a.style;return React.createElement(ThemeContext_1.ThemeContext.Consumer,null,(function(theme){var stylesSheet=style_1.default({theme:theme,palette:palette,style:style});return React.createElement(view_1.View,{style:stylesSheet.root},React.createElement(view_1.View,{style:stylesSheet.background}),React.createElement(view_1.View,{style:stylesSheet.top,onLayout:_this.onLayout},React.createElement(reactxp_1.Animated.View,{style:[stylesSheet.fill,_this.animatedStyle]})))}))},ProgressBar.prototype.componentDidUpdate=function(prevProps,prevState){if(this.state.containerWidth>0&&0===prevState.containerWidth||this.state.containerWidth!==prevState.containerWidth||this.props.progress!==prevProps.progress){var init=0===prevState.containerWidth;this.animation&&(this.animation.translate.stop(),this.animation.scale.stop());var scale=Math.min(1,Math.max(0,this.props.progress/100)),offset=this.state.containerWidth/-2+this.state.containerWidth*scale/2;this.animation=this.getAnimation({scale:scale,offset:offset},init?0:this.props.animationDuration||0),this.animation.translate.start(),this.animation.scale.start()}},ProgressBar.prototype.getAnimation=function(_a,duration){var offset=_a.offset,scale=_a.scale;return{translate:reactxp_1.Animated.timing(this.animatedOffset,{toValue:offset,duration:duration,easing:reactxp_1.Animated.Easing.InOut()}),scale:reactxp_1.Animated.timing(this.animatedPercent,{toValue:scale,duration:duration,easing:reactxp_1.Animated.Easing.InOut()})}},ProgressBar}(React.PureComponent);exports.default=ProgressBar},1259:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var RadialGradient_1=__webpack_require__(1260);Object.defineProperty(exports,"RadialGradient",{enumerable:!0,get:function(){return RadialGradient_1.default}})},1260:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),react_dom_1=__webpack_require__(16),view_1=__webpack_require__(31),RadialGradient=function(_super){function RadialGradient(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(RadialGradient,_super),RadialGradient.prototype.render=function(){var _this=this,style=this.props.style;return React.createElement(view_1.View,{style:style},React.createElement(view_1.View,{ref:function(comp){return _this.backgroundImageRef=comp}}))},RadialGradient.prototype.componentDidMount=function(){this.updateGradientStyle()},RadialGradient.prototype.componentDidUpdate=function(){this.updateGradientStyle()},RadialGradient.prototype.updateGradientStyle=function(){var _this=this;[react_dom_1.findDOMNode(this.backgroundImageRef)].map((function(e){return Object.keys(_this.style).forEach((function(key){return e.style[key]=_this.style[key]}))}))},Object.defineProperty(RadialGradient.prototype,"style",{get:function(){var _a=this.props,center=_a.center,colors=_a.colors,isEllipse=_a.isEllipse,_b=_a.radius,radius=void 0===_b?"farthest-corner":_b,stops=_a.stops,colorStrings=colors.map((function(color,i){return color+" "+100*stops[i]+"%"})).join(", "),isCenterInPercent=!center||"string"==typeof center[0],posX=center?center[0]+(isCenterInPercent?"":"px"):"50%",posY=center?center[1]+(isCenterInPercent?"":"px"):"50%";return{position:"absolute",top:"0",right:"0",bottom:"0",left:"0",backgroundImage:"radial-gradient("+(isEllipse?"ellipse":"circle")+" "+(isEllipse&&Array.isArray(radius)?radius.map((function(r){return r+"%"})).join(" "):radius)+" at "+posX+" "+posY+", "+colorStrings+")"}},enumerable:!1,configurable:!0}),RadialGradient}(React.Component);exports.default=RadialGradient},1261:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(1262),exports)},1262:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Slider=void 0;var react_1=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),styles_1=__webpack_require__(27),paper_1=__webpack_require__(199),view_1=__webpack_require__(31),style_1=__webpack_require__(1263);exports.Slider=function Slider(_a){var _b,isAmount=_a.isAmount,value=_a.value,range=_a.range,palette=_a.palette,steps=_a.steps,styleOverride=_a.style,onChange=_a.onChange,theme=react_1.useContext(styles_1.ThemeContext),_c=style_1.createStyle({theme:theme,palette:palette,styleOverride:styleOverride}),root=_c.root,unusedSegment=_c.unusedSegment,usedSegment=_c.usedSegment,cursor=_c.cursor,_d=react_1.useState(0),xPos=_d[0],setPos=_d[1],_e=react_1.useState(),layout=_e[0],setLayout=_e[1],setRootRef=react_1.useCallback((function(rootView){reactxp_1.UserInterface.measureLayoutRelativeToWindow(rootView).then((function(layout){setLayout(layout),setPos(function getInitialPos(_a){var _b=_a.value,value=void 0===_b?0:_b,range=_a.range,layout=_a.layout,delta=range[1]-range[0];return value*layout.width/delta}({range:range,value:value,layout:layout}))})).catch(console.warn)}),[]),dragX=function useDrag(_a){var setPos=_a.setPos,layout=_a.layout;return layout?function(e){"targetTouches"in e?setPos(Math.min(Math.max(0,e.touches[0].clientX-layout.x),layout.width)):e.nativeEvent.buttons>0&&setPos(Math.max(0,e.clientX-layout.x))}:void 0}({setPos:setPos,layout:layout}),position=function getClampedPosition(_a){var steps=_a.steps,xPos=_a.xPos,_b=_a.width,width=void 0===_b?0:_b,stepWidth=steps&&steps>0?width/steps:NaN,clampedPosition=Math.min(Math.max(0,xPos),width);return steps&&steps>0?Math.round(clampedPosition/stepWidth)*stepWidth:clampedPosition}({steps:steps,xPos:xPos,width:null==layout?void 0:layout.width}),valueFromState=function getValue(_a){var range=_a.range,_b=_a.position,position=void 0===_b?0:_b,_c=_a.width,width=void 0===_c?0:_c,_range=range[1]-range[0],delta=position*_range/width;return range[0]+delta}({range:range,position:position,width:null==layout?void 0:layout.width});return react_1.useEffect((function(){return null==onChange?void 0:onChange(valueFromState)}),[valueFromState]),react_1.default.createElement(view_1.View,{style:root,ref:setRootRef,onResponderMove:dragX,onMouseMove:dragX},isAmount&&react_1.default.createElement(view_1.View,{style:unusedSegment}),react_1.default.createElement(view_1.View,{style:[usedSegment,isAmount?{right:(null!==(_b=null==layout?void 0:layout.width)&&void 0!==_b?_b:0)-position}:void 0]}),react_1.default.createElement(paper_1.Paper,{style:{root:[cursor,{left:position-10}]},elevation:1}))}},1263:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.createStyle=void 0;var styles_1=__webpack_require__(27);exports.createStyle=function createStyle(_a){var theme=_a.theme,_b=_a.palette,palette=void 0===_b?"primary":_b,styleOverride=_a.styleOverride;return{root:[styles_1.Styles.createViewStyle({flex:1,overflow:"visible",justifyContent:"center"}),null==styleOverride?void 0:styleOverride.root],unusedSegment:[styles_1.Styles.createViewStyle({height:theme.spacing,position:"absolute",borderRadius:4,left:0,right:0,backgroundColor:theme.palette.modifier.disabled}),null==styleOverride?void 0:styleOverride.baseSegment],usedSegment:[styles_1.Styles.createViewStyle({position:"absolute",height:theme.spacing,borderRadius:4,left:0,right:0,backgroundColor:theme.palette[palette].main}),null==styleOverride?void 0:styleOverride.activeSegment],cursor:[styles_1.Styles.createViewStyle({position:"absolute",backgroundColor:theme.palette[palette].main,width:20,height:20,borderRadius:20}),null==styleOverride?void 0:styleOverride.cursor]}}},1264:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var reactxp_1=__webpack_require__(6);Object.defineProperty(exports,"Spinner",{enumerable:!0,get:function(){return reactxp_1.ActivityIndicator}})},1265:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0});var Tab_1=__webpack_require__(498);Object.defineProperty(exports,"Tab",{enumerable:!0,get:function(){return Tab_1.default}});var TabBar_1=__webpack_require__(1266);Object.defineProperty(exports,"TabBar",{enumerable:!0,get:function(){return TabBar_1.default}}),__exportStar(__webpack_require__(203),exports)},1266:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),helpers_1=__webpack_require__(202),styles_1=__webpack_require__(27),withTheme_1=__webpack_require__(490),paper_1=__webpack_require__(199),view_1=__webpack_require__(31),ScrollIndicator_1=__webpack_require__(1267),styles_2=__webpack_require__(203),Tab_1=__importDefault(__webpack_require__(498)),Tabs=function(_super){function Tabs(props){var _this=_super.call(this,props)||this;_this.state={activeTabId:"",isScrollEnabled:!1,hasLeftScrollIndicator:!1,hasRightScrollIndicator:!1,wrapperWidth:0},_this.layout={currentScroll:0,maxScroll:0,tabsState:[]},_this.SAMmodel={tabsWidth:0,tabsState:[]},_this.cursorAnimatedValues={opacity:reactxp_1.Animated.createValue(0),translateX:reactxp_1.Animated.createValue(0),translateY:reactxp_1.Animated.createValue(0),rotate:reactxp_1.Animated.createValue(0),scaleX:reactxp_1.Animated.createValue(0),scaleY:reactxp_1.Animated.createValue(1)},_this.controlState="stale",_this.rollRight=helpers_1.recall((function(iteration){void 0===iteration&&(iteration=0);var lastEntirelyDisplayedTab=function getLastEntirelyDisplayedTab(tabsLayout,paddingHorizontal){return tabsLayout.tabsState.slice().reverse().find((function(t){return!function isTabOutsideOnRight(tabState,tabsLayout,paddingHorizontal){return getTabRightOffset(tabState,tabsLayout,paddingHorizontal)>0}(t,tabsLayout,paddingHorizontal)}))}(_this.layout,_this.paddingHorizontal);if(void 0!==lastEntirelyDisplayedTab){var tabId=lastEntirelyDisplayedTab.id,nextTabIndex=Math.min(_this.SAMmodel.tabsState.findIndex((function(tab){return tab.id===tabId}))+iteration+1,_this.SAMmodel.tabsState.length-1),nextTab=_this.SAMmodel.tabsState[nextTabIndex];_this.scrollToTab(nextTab.id)}}),(function(iteration){return[iteration]}),500),_this.rollLeft=helpers_1.recall((function(iteration){void 0===iteration&&(iteration=0);var firstEntirelyDisplayedTab=function getFirstEntirelyDisplayedTab(tabsLayout){return tabsLayout.tabsState.slice().find((function(t){return!function isTabOutsideOnLeft(tabState,tabsLayout){return getTabLeftOffset(tabState,tabsLayout)<0}(t,tabsLayout)}))}(_this.layout);if(void 0!==firstEntirelyDisplayedTab){var tabId=firstEntirelyDisplayedTab.id,previousTabIndex=Math.max(_this.SAMmodel.tabsState.findIndex((function(tab){return tab.id===tabId}))-(iteration+1),0),previousTab=_this.SAMmodel.tabsState[previousTabIndex];_this.scrollToTab(previousTab.id)}}),(function(iteration){return[iteration]}),500),_this.bindTab=function(id){var _a=_this.props,hasIconOnTop=_a.hasIconOnTop,palette=_a.palette,isFrozen=_a.isFrozen,_b=_this.state,activeTabId=_b.activeTabId,isScrollEnabled=_b.isScrollEnabled;return{onWillMount:_this.registerTab,onTabLayout:_this.setTabLayout,onUnmount:_this.removeTab,onPress:_this.onPressTab,isFrozen:isFrozen,isActive:id===activeTabId,mustGrow:isScrollEnabled,hasIconOnTop:hasIconOnTop,palette:palette}},_this.onLayout=function(barLayout){void 0!==_this.layout.barLayout&&barLayout.height===_this.layout.barLayout.height&&barLayout.width===_this.layout.barLayout.width&&barLayout.x===_this.layout.barLayout.x&&barLayout.y===_this.layout.barLayout.y||(_this.layout.barLayout=barLayout,_this.computeState())},_this.registerTab=function(id){_this.present({mutation:"registerTab",payload:{id:id}})},_this.removeTab=function(id){_this.present({mutation:"removeTab",payload:{id:id}})},_this.setTabLayout=function(payload){_this.present({mutation:"setTabLayout",payload:payload})},_this.onScroll=function(_newScrollTop,newScrollLeft){_this.layout.currentScroll=Math.round(newScrollLeft),_this.layout.currentScroll>0===_this.state.hasLeftScrollIndicator&&_this.layout.currentScroll<_this.layout.maxScroll===_this.state.hasRightScrollIndicator||_this.setState({hasLeftScrollIndicator:_this.layout.currentScroll>0,hasRightScrollIndicator:_this.layout.currentScroll<_this.layout.maxScroll})},_this.onPressTab=function(activeTabId){var _a=_this.props,onChange=_a.onChange,onPressActiveTab=_a.onPressActiveTab;activeTabId!==_this.state.activeTabId?(_this.scrollToTab(activeTabId),onChange&&onChange(activeTabId),_this.setState({activeTabId:activeTabId})):onPressActiveTab&&onPressActiveTab()};var rotate=_this.cursorAnimatedValues.rotate.interpolate({inputRange:[0,1],outputRange:"web"===reactxp_1.Platform.getType()?[0,360]:["0deg","360deg"]});return _this.animatedStyle=styles_1.Styles.createAnimatedViewStyle({transform:[{translateX:_this.cursorAnimatedValues.translateX},{translateY:_this.cursorAnimatedValues.translateY},{scaleX:_this.cursorAnimatedValues.scaleX},{scaleY:_this.cursorAnimatedValues.scaleY},{rotate:rotate}]}),_this}return __extends(Tabs,_super),Object.defineProperty(Tabs.prototype,"activeTab",{get:function(){var _this=this;return this.SAMmodel.tabsState.find((function(s){return s.id===_this.state.activeTabId}))},enumerable:!1,configurable:!0}),Object.defineProperty(Tabs.prototype,"paddingHorizontal",{get:function(){return this.getStyles(this.state.isScrollEnabled).paddingHorizontal},enumerable:!1,configurable:!0}),Object.defineProperty(Tabs.prototype,"isLayoutReady",{get:function(){return void 0!==this.layout.barLayout&&this.SAMmodel.tabsState.length>0&&this.SAMmodel.tabsState.every((function(tab){return!tab.isStale}))},enumerable:!1,configurable:!0}),Object.defineProperty(Tabs.prototype,"tabs",{get:function(){var _this=this;return this.props.tabs.map((function(props){return React.createElement(Tab_1.default,__assign({key:props.id},props,_this.bindTab(props.id)))}))},enumerable:!1,configurable:!0}),Tabs.getDerivedStateFromProps=function(nextProps,state){var hasActiveTabFromPropsChanged=nextProps.activeTabId!==state.activeIdFromProps;return __assign(__assign({},state),{activeIdFromProps:nextProps.activeTabId,activeTabId:hasActiveTabFromPropsChanged&&nextProps.activeTabId?nextProps.activeTabId:state.activeTabId})},Tabs.prototype.componentDidMount=function(){var firstTabId=function getFirstTabId(model){var tab=model.tabsState[0];return tab?tab.id:void 0}(this.SAMmodel);(this.props.activeTabId||firstTabId)&&this.setState({activeTabId:this.props.activeTabId||firstTabId})},Tabs.prototype.shouldComponentUpdate=function(nextProps,nextState){return helpers_1.shouldComponentUpdate(nextProps,nextState,this.props,this.state)},Tabs.prototype.render=function(){var isFrozen=this.props.isFrozen,_a=this.state,hasLeftScrollIndicator=_a.hasLeftScrollIndicator,hasRightScrollIndicator=_a.hasRightScrollIndicator,isScrollEnabled=_a.isScrollEnabled,styles=this.getStyles(isScrollEnabled),left=isFrozen?{left:-this.layout.currentScroll}:{},tabs=React.createElement(view_1.View,{style:[styles.scrollContent,{minWidth:this.state.wrapperWidth},left]},this.renderCursor(styles),this.tabs);return React.createElement(paper_1.Paper,{elevation:2,style:{root:styles.root,content:styles.container},onLayout:this.onLayout},this.renderInScrollView(tabs,styles,isScrollEnabled,hasLeftScrollIndicator,hasRightScrollIndicator))},Tabs.prototype.componentDidUpdate=function(_prevProps,prevState){this.state.activeTabId!==prevState.activeTabId&&"isLayoutReady"===this.controlState&&this.scrollToTab(this.state.activeTabId),this.activeTab&&this.activeTab.layout&&this.updateCursorPosition()},Tabs.prototype.updateCursorPosition=function(){var _this=this;this.cursorAnimation&&Object.keys(this.cursorAnimation).forEach((function(key){return _this.cursorAnimation[key].stop()})),this.cursorAnimation=this.getAnimation({opacity:1,translateX:this.activeTab.layout.x+.5*this.activeTab.layout.width,translateY:0,rotate:0,scaleX:this.activeTab.layout.width,scaleY:1}),Object.keys(this.cursorAnimation).forEach((function(key){return _this.cursorAnimation[key].start()}))},Tabs.prototype.renderCursor=function(style){var activeTabLayout=this.activeTab&&this.activeTab.layout?this.activeTab.layout:{x:0,y:0,width:0,height:0},barLayout=this.layout&&this.layout.barLayout?this.layout.barLayout:{x:0,y:0,width:0,height:0};return React.createElement(reactxp_1.Animated.View,{style:[style.cursorAnimatedContainer,this.animatedStyle]},this.props.renderCustomCursor?this.props.renderCustomCursor(activeTabLayout,barLayout,this.props.theme):React.createElement(view_1.View,{style:style.cursor}))},Tabs.prototype.renderInScrollView=function(tabs,styles,isScrollEnabled,hasLeftScrollIndicator,hasRightScrollIndicator){var _this=this,_a=this.props,palette=_a.palette,theme=_a.theme,leftScrollButton=_a.leftScrollButton,rightScrollButton=_a.rightScrollButton,isFrozen=_a.isFrozen;return React.createElement(React.Fragment,null,React.createElement(reactxp_1.ScrollView,{ref:function(comp){return _this.scrollViewRef=comp},scrollEnabled:isScrollEnabled&&!isFrozen,horizontal:!0,showsHorizontalScrollIndicator:!1,showsVerticalScrollIndicator:!1,onScroll:this.onScroll,style:styles.scrollView},tabs),hasLeftScrollIndicator&&leftScrollButton&&React.createElement(ScrollIndicator_1.ScrollIndicator,{palette:palette,style:styles.leftIndicator,slot:leftScrollButton,theme:theme,onPress:function(){return _this.rollLeft()}}),hasRightScrollIndicator&&rightScrollButton&&React.createElement(ScrollIndicator_1.ScrollIndicator,{palette:palette,style:styles.rightIndicator,slot:rightScrollButton,theme:theme,onPress:function(){return _this.rollRight()}}))},Tabs.prototype.getStyles=function(isScrollEnabled){var _a=this.props,hasIconOnTop=_a.hasIconOnTop,palette=_a.palette,theme=_a.theme,style=_a.style;return styles_2.tabsBarStyle({theme:theme,palette:palette,style:style,options:{hasIconOnTop:hasIconOnTop,isScrollEnabled:isScrollEnabled}})},Tabs.prototype.computeState=function(){var previousControlState=this.controlState;switch("stale"===this.controlState?this.isLayoutReady&&(this.controlState="isLayoutReady"):"isLayoutReady"===this.controlState&&(this.isLayoutReady||(this.controlState="stale")),this.layout.tabsState=this.SAMmodel.tabsState.filter((function(s){return!s.isStale})).map((function(_a){return{id:_a.id,layout:_a.layout}})),"isLayoutReady"===this.controlState&&this.activeTab&&("stale"===previousControlState&&this.activeTab.layout&&(this.cursorAnimatedValues.translateX.setValue(this.activeTab.layout.x),this.cursorAnimatedValues.scaleX.setValue(this.activeTab.layout.width)),this.updateCursorPosition()),this.controlState){default:case"stale":break;case"isLayoutReady":this.setScrollState()}},Tabs.prototype.present=function(proposal){var _this=this;if("registerTab"===proposal.mutation){var payload_1=proposal.payload;this.SAMmodel.tabsState=this.SAMmodel.tabsState.filter((function(t){return t.id!==payload_1.id})),this.SAMmodel.tabsState.push({id:payload_1.id,isStale:!0}),this.computeState()}else if("setTabLayout"===proposal.mutation){var payload_2=proposal.payload;if(!payload_2.layout)return;if(this.isLayoutReady)this.SAMmodel.tabsState=this.SAMmodel.tabsState.map((function(ref){return ref.id===payload_2.id?payload_2:__assign({},ref)}));else{var tab=this.SAMmodel.tabsState.find((function(ref){return ref.id===payload_2.id}));tab&&(tab.isStale=!1,tab.layout=payload_2.layout),this.SAMmodel.tabsWidth=getTabsWidth(this.SAMmodel)}this.computeState()}else if("removeTab"===proposal.mutation){if("stale"===this.controlState)return;var payload_3=proposal.payload;this.SAMmodel.tabsState=this.SAMmodel.tabsState.filter((function(s){return s.id!==payload_3.id})),this.SAMmodel.tabsWidth=getTabsWidth(this.SAMmodel),this.computeState()}this.props.tabs.reduce((function(newOrderedArray,tab){var tabToOrder=_this.SAMmodel.tabsState.findIndex((function(t){return t.id===tab.id}));return tabToOrder?__spreadArrays([tabToOrder],newOrderedArray):newOrderedArray}),[])},Tabs.prototype.setScrollState=function(){var _this=this,isScrollEnabled=this.SAMmodel.tabsWidth>this.layout.barLayout.width,hasRightScrollIndicator=isScrollEnabled;this.layout.maxScroll=isScrollEnabled?this.SAMmodel.tabsWidth-this.layout.barLayout.width+2*this.getStyles(isScrollEnabled).paddingHorizontal:0;var wrapperWidth=(this.layout&&this.layout.barLayout&&this.layout.barLayout.width||0)-2*this.paddingHorizontal;this.setState({isScrollEnabled:isScrollEnabled,hasRightScrollIndicator:hasRightScrollIndicator,wrapperWidth:wrapperWidth},(function(){_this.props.isFrozen||_this.scrollToTab(_this.state.activeTabId,!1)}))},Tabs.prototype.scrollToTab=function(id,animated){var offset=this.getTabOffset(id);this.scrollTo(this.layout.currentScroll+offset,animated)},Tabs.prototype.getTabOffset=function(id){var tab=this.layout.tabsState.find((function(t){return t.id===id}));if(void 0===tab)return 0;var offsetBorderLeft=getTabLeftOffset(tab,this.layout),offsetBorderRight=getTabRightOffset(tab,this.layout,this.paddingHorizontal);return offsetBorderLeft<0?offsetBorderLeft:offsetBorderRight>0?offsetBorderRight:0},Tabs.prototype.scrollTo=function(position,animated){void 0===animated&&(animated=!0);var value=this.limit(position);this.scrollViewRef&&this.scrollViewRef.setScrollLeft(value,animated),this.layout.currentScroll=Math.round(value)},Tabs.prototype.limit=function(value){return void 0===value&&(value=0),Math.min(this.layout.maxScroll,Math.max(0,value))},Tabs.prototype.getAnimation=function(_a){var opacity=_a.opacity,translateX=_a.translateX,translateY=_a.translateY,rotate=_a.rotate,scaleX=_a.scaleX,scaleY=_a.scaleY,customAnimation=this.props.customCursorAnimation?this.props.customCursorAnimation(this.cursorAnimatedValues,this.activeTab.layout,this.props.theme):{};return{opacity:customAnimation.opacity||reactxp_1.Animated.timing(this.cursorAnimatedValues.opacity,{useNativeDriver:!0,toValue:opacity,duration:Tabs.cursorTransitionDuration,easing:reactxp_1.Animated.Easing.InOut()}),translateX:customAnimation.translateX||reactxp_1.Animated.timing(this.cursorAnimatedValues.translateX,{useNativeDriver:!0,toValue:translateX,duration:Tabs.cursorTransitionDuration,easing:reactxp_1.Animated.Easing.InOut()}),translateY:customAnimation.translateY||reactxp_1.Animated.timing(this.cursorAnimatedValues.translateY,{useNativeDriver:!0,toValue:translateY,duration:Tabs.cursorTransitionDuration,easing:reactxp_1.Animated.Easing.InOut()}),rotate:customAnimation.rotate||reactxp_1.Animated.timing(this.cursorAnimatedValues.rotate,{useNativeDriver:!0,toValue:rotate,duration:Tabs.cursorTransitionDuration,easing:reactxp_1.Animated.Easing.InOut()}),scaleX:customAnimation.scaleX||reactxp_1.Animated.timing(this.cursorAnimatedValues.scaleX,{useNativeDriver:!0,toValue:scaleX,duration:Tabs.cursorTransitionDuration,easing:reactxp_1.Animated.Easing.InOut()}),scaleY:customAnimation.scaleY||reactxp_1.Animated.timing(this.cursorAnimatedValues.scaleY,{useNativeDriver:!0,toValue:scaleY,duration:Tabs.cursorTransitionDuration,easing:reactxp_1.Animated.Easing.InOut()})}},Tabs.cursorTransitionDuration=200,Tabs}(React.Component);function getTabsWidth(model){if(0===model.tabsState.length)return 0;var firstTabRect=function getFirstTab(model){return model.tabsState[0]||void 0}(model).layout,lastTabRect=function getLastTab(model){return model.tabsState[model.tabsState.length-1]}(model).layout;return firstTabRect&&lastTabRect?Math.round(lastTabRect.x+lastTabRect.width-firstTabRect.x):0}function getTabRightOffset(tab,tabsLayout,paddingHorizontal){return tab.layout.x+tab.layout.width-tabsLayout.currentScroll-(tabsLayout.barLayout.x+tabsLayout.barLayout.width-2*paddingHorizontal)}function getTabLeftOffset(tab,tabsLayout){return tab.layout.x-tabsLayout.currentScroll-tabsLayout.barLayout.x}exports.default=withTheme_1.withTheme(Tabs)},1267:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScrollIndicator=void 0;var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),helpers_1=__webpack_require__(153),fade_1=__webpack_require__(198),ripple_1=__webpack_require__(200),view_1=__webpack_require__(31),styles_1=__webpack_require__(203),flex=reactxp_1.Styles.createViewStyle({flex:1}),ScrollIndicator=function(_super){function ScrollIndicator(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={isHover:!1},_this}return __extends(ScrollIndicator,_super),ScrollIndicator.prototype.render=function(){var _this=this,_a=this.props,onPress=_a.onPress,palette=_a.palette,slot=_a.slot,style=_a.style,theme=_a.theme,overlayColor=helpers_1.getMaterialOverlayColor({palette:palette,theme:theme,isOnPaper:void 0!==palette}),overlayStyle=styles_1.createScrollIndicatorOverlayStyle(overlayColor,theme);return React.createElement(view_1.View,{style:style,onStartShouldSetResponder:function(){return!0}},slot&&slot(theme),React.createElement(ripple_1.Ripple,{color:overlayColor,onRef:function(emitter){return _this.ripple=emitter}}),React.createElement(fade_1.Fade,{style:styles_1.fitParent,isVisible:this.state.isHover},React.createElement(view_1.View,{style:overlayStyle})),React.createElement(view_1.View,{style:styles_1.fitParent},React.createElement(reactxp_1.Button,{style:flex,onHoverStart:function(){return _this.setState({isHover:!0})},onHoverEnd:function(){_this.ripple.onPressOut(),_this.setState({isHover:!1})},onPress:onPress,onPressIn:function(e){_this.ripple.onPressIn(e)},onPressOut:function(){_this.ripple.onPressOut()}})))},ScrollIndicator}(React.Component);exports.ScrollIndicator=ScrollIndicator},1268:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0})},1269:function(module,exports,__webpack_require__){var map={"./animatedTransition/story.web.tsx":1270,"./backgroundImage/story.web.tsx":1290,"./borderImage/story.web.tsx":1293,"./button/story.web.tsx":1296,"./fab/story.web.tsx":1299,"./fade/story.web.tsx":1302,"./grid/story.web.tsx":1306,"./linearGradient/story.web.tsx":1309,"./list/story.web.tsx":1312,"./paper/story.web.tsx":1315,"./progressBar/story.web.tsx":1318,"./radialGradient/story.web.tsx":1321,"./ripple/story.web.tsx":1324,"./slider/story.web.tsx":1327,"./spinner/story.web.tsx":1330,"./tab/story.web.tsx":1332};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1269},1270:function(module,exports,__webpack_require__){"use strict";(function(module){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),doc_1=__importDefault(__webpack_require__(1280)),story_common_1=__importDefault(__webpack_require__(499));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Animated transition",story_common_1.default,{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1280:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`SceneTransition`\n### Usage\nThis component is used where you want to make a transition between two scene. For example with a router or in a caroussel.\n\n** Important: ** you will need to set `display: flex` and and a height to the parent or the scene.\n\n#### Use with basic component\n```\n<div style={{\n  display: 'flex',\n  height: '300px'\n}}>\n  <AnimatedTransition\n    clean\n    key={activeId}\n  >\n    {activeId === 'section0' && <Text>Section 0</Text>}\n    {activeId === 'section1' && <Text>Section 1</Text>}\n    {activeId === 'section2' && <Text>Section 2</Text>}  \n  </AnimatedTransition>\n</div>\n```\n\n#### Use with React Router:\nYou can use SceneTransition with the react router Switch component. Make sure to pass the location props to the switch.\nOtherwize the previous component won't be display during its exit.\n\n```\n<Route render={({location}) => (\n  <Scene\n    render={\n      ()=>(\n        <Switch location={location}>\n          <Route path=\"/profile\" component={() => <Text>Profile</Text>} />\n          <Route path=\"/portfolio\" component={() => <Text>Portfolio</Text>} />\n          <Route path=\"/contact\" component={() => <Text>Contact</Text>} />\n          <Redirect to=\"/profile\" />\n        </Switch>\n      )\n    }\n  />\n)}\n```\n\n/>\n\n### Properties\n\n#### children\n`type: React.ReactNode`\n\nThe children who change.\n\n#### timeout (optional)\n` number `\nthe duration of the transition. Default is 300ms.\n\n#### id\n`string | number | undefined`\nA unique id to discriminate children. This value must change between\neach transition.\nThe value can be first at undefined but must be set to trigger the first\ntransition (case of React Router location.key)\n\n#### clean (optional)\nUse when you want to remove the old children from the component tree.\nUse case : screen transition.\n\n#### animation\n```\n  (isInit: boolean) => {\n    initialAnimatedValues: {\n      borderRadius?: number\n      backgroundColor?: number\n      opacity?: number\n      perspective?: number\n      rotateX?: number\n      rotateY?: number\n      rotateZ?: number\n      scaleX?: number\n      scaleY?: number\n      translateX?: number\n      translateY?: number\n    },\n    transitionValues: {\n      entering?: {\n        ...\n        translateX: number\n        ...\n      },\n      entered?: {\n        ...\n        translateX: number\n        ...\n      },\n      exiting?: {\n        ...\n        translateX: number\n        ...\n      },\n      exited?: {\n        ...\n        translateX: number\n        ...\n      }\n    },\n  }\n```\n\nThe animation behavior factory. A function which takes a isInit boolean\nas argument (when the transition is rendering for the first time) and returns\na declarative animation.\nThe first part of the returned value is `initialAnimatedValues`. It describes the value\nof the properties to animate at their initial state.\nThe second part of the returned value is `transitionValues` which descibes, for each transition status,\nthe value of the animated properties.\nNote that you need to declare all the values used in the transition status in the `initialAnimatedValues`\notherwize, the animated properties won't be applied.\n"},1282:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function collapseFactory(isInit){return{initialAnimatedValues:{rotateX:isInit?90:0},transitionValues:{entering:{rotateX:0},exiting:{rotateX:90}}}}},1283:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Navigation=void 0;var ui_1=__webpack_require__(23),React=__importStar(__webpack_require__(0)),react_router_dom_1=__webpack_require__(204),story_common_1=__webpack_require__(499),FontAwesome=__webpack_require__(118);exports.Navigation=function Navigation(){var history=react_router_dom_1.useHistory();return React.createElement(ui_1.TabBar,{style:story_common_1.style.header,activeTabId:"profile",onChange:function(id){history.push("/"+id)},leftScrollButton:function(theme){return React.createElement(ui_1.View,{style:{flex:1,alignItems:"center",justifyContent:"center"}},React.createElement(FontAwesome.default,{name:"chevron-left",size:16,color:theme.palette.primary.contrastText}))},rightScrollButton:function(theme){return React.createElement(ui_1.View,{style:{flex:1,alignItems:"center",justifyContent:"center"}},React.createElement(FontAwesome.default,{name:"chevron-right",size:16,color:theme.palette.primary.contrastText}))},tabs:[{id:"profile",label:"Profile",style:{isActiveLabel:story_common_1.labelStyle}},{id:"portfolio",label:"Portfolio",style:{isActiveLabel:story_common_1.labelStyle}},{id:"contact",label:"Contact",style:{isActiveLabel:story_common_1.labelStyle}}]})}},1289:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(204),exports);var react_router_dom_1=__webpack_require__(204);Object.defineProperty(exports,"RRouter",{enumerable:!0,get:function(){return react_router_dom_1.BrowserRouter}})},1290:function(module,exports,__webpack_require__){"use strict";(function(module){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),doc_1=__importDefault(__webpack_require__(1291)),story_common_1=__webpack_require__(1292);react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Background image",story_common_1.backgroundImage,{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1291:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`BackgroundImage`\n### Usage\nThis component displays a background image inside a container. Does not accept children.\n```\n<View\n  style={Styles.createViewStyle({\n    borderStyle: 'solid',\n    borderColor: '#ddd',\n    borderWidth: 10,\n    width: 128,\n    height: 128\n  })}\n>\n  <BackgroundImage\n    uri=\"https://i.ibb.co/Yhs3Ff5/btn-bg.png\"\n    resizeMode=\"cover\"\n  />\n  {children}\n</View>\n```\n### Properties\n#### source\n`type: string`\n\nThe uri of the image to fetch.\n\n#### resizeMode\n`type: 'stretch' | 'contain' | 'cover' | 'auto'`\n\nThe resize method, similar to the [RN property](https://facebook.github.io/react-native/docs/image#resizemode)\n\n### repeat *optional*\n`type: boolean`\nIf true, repeat the pattern along X and Y axis.\n\n### position *optional*\n`type: [string, string]`\n\nAvailable in `auto` resize mode. A tupple of string which will offset the top/left of the image.\neg: `['50px', '50px'] or['50%', '50%']`\n"},1292:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.backgroundImage=void 0;var ui_1=__webpack_require__(23),addon_knobs_1=__webpack_require__(21),React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6);exports.backgroundImage=function(_a){var _b=_a.containerWidth,containerWidth=void 0===_b?220:_b,_c=_a.containerHeight,containerHeight=void 0===_c?220:_c,_d=_a.resizeMode,resizeMode=void 0===_d?"auto":_d,_e=_a.position,position=void 0===_e?[0,0]:_e,_f=_a.repeat,repeat=void 0!==_f&&_f;return React.createElement(ui_1.View,{style:reactxp_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignItems:"center"})},React.createElement(ui_1.View,{style:reactxp_1.Styles.createViewStyle({borderStyle:"solid",borderColor:"#ddd",borderWidth:10,overflow:"hidden",width:addon_knobs_1.number("Container width",containerWidth,{range:!0,min:0,max:500,step:20}),height:addon_knobs_1.number("Container height",containerHeight,{range:!0,min:0,max:500,step:20})})},React.createElement(ui_1.BackgroundImage,{uri:"https://i.ibb.co/Yhs3Ff5/btn-bg.png",resizeMode:addon_knobs_1.select("Resize mode",["stretch","cover","contain","auto"],resizeMode),repeat:addon_knobs_1.boolean("Repeat image",repeat),position:addon_knobs_1.array("Position in % or px",[position[0]+"%",position[1]+"%"],", ")})))}},1293:function(module,exports,__webpack_require__){"use strict";(function(module){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),doc_1=__importDefault(__webpack_require__(1294)),story_common_1=__webpack_require__(1295);react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Border image",story_common_1.borderImage,{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1294:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default='\n### Import name\n`BorderImage`\n## Usage\nThis component displays an image around the border of a container.\nIn contrary to the web, the image is not placed on the border, but before (on the padding zone).\nSome limitations are to be expected:\n- no border repeat. Like iOS The image take a one pixel slice and stretch it along the side of the container.\n- no `fill` param. This component focus only on the border and will present a hole in the center.\nHint: You can cap it by using a BackgroundImage in you container.\n- one slice value for the 4 sides. You won\'t be able to specify a slice position for each side of the image.\n\n```\n<View\n  style={Styles.createViewStyle({\n    width: 256,\n    height: 512\n  })}\n>\n  <BorderImage\n    uri="https://i.ibb.co/Yhs3Ff5/btn-bg.png"\n    borderWidth={32}\n    sliceWidth={127}\n  />\n</View>\n```\n### Properties\n#### uri\n`type: string`\n\nThe URL of the image.\n\n#### borderWidth\n`type: number`\n\nThe border width which the image will fit\n\n#### sliceWidth\n`type: number`\n\nThe distance from the border of the image where to slice.\nSimilar to the CSS [`border-image-slice`](https://developer.mozilla.org/fr/docs/Web/CSS/border-image-slice)\nSupport only one value, applied to the four position.\n'},1295:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.borderImage=void 0;var ui_1=__webpack_require__(23),React=__importStar(__webpack_require__(0));exports.borderImage=function(){return React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignItems:"center"})},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({width:128,height:256})},React.createElement(ui_1.BorderImage,{uri:"https://i.ibb.co/Yhs3Ff5/btn-bg.png",borderWidth:16,sliceWidth:127})))}},1296:function(module,exports,__webpack_require__){"use strict";(function(module){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),doc_1=__importDefault(__webpack_require__(1297)),story_common_1=__importDefault(__webpack_require__(1298));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Button",story_common_1.default,{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1297:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default='\n\n### Import name\n`Button`\n### Usage\nA Material UI button.\n```\n  <Button\n    style={style}\n    variant="contained"\n    label="RAISED"\n    elevation={4}\n  />\n```\n\n### Props\n\n#### onPress *optional*\n`type: (e: Types.SyntheticEvent) => void`\n\nThe click handler.\n\n#### isDisabled *optional*\n`type: boolean`\n\nIf true, the button is disabled.\n\n#### elevation *optional*\n`type: number`\n\nThe elevation of the component.\n\n#### isDense *optional*\n`type: boolean`\n\nIf true, display a smaller button.\n\n#### label *optional*\n`type: string`\n\nThe button label.\n\n#### palette *optional*\n`type: primary | secondary`\n\nThe palette to use. If set, it will affect the background color.\nIf `variant` is also set on `text` or `outline`, it will set the label color.\n\n#### variant *optional*\n`type: primary | secondary`\n\nSet the variant of the button according to the Material Design specs.\n\n#### iconSlot *optional*\n`type: iconSlot?: (style: StyleProp<TextStyle>) => React.ReactNode`\n\nThe icon rendering slot. It take in parameter a style to use with you Icon.\n\nexemple:\n```\n<Button\n  style={style}\n  variant="contained"\n  iconSlot={iconStyle => (\n    <FontAwesome.default style={iconStyle} name="search" />\n  )}\n  label="SEARCH"\n/>\n```\n\n#### badgeSlot\n`type: (theme: Theme<any, any>) => React.ReactNode`\n\nUse this to display a notification badge.\n\n#### backgroundSlot *optional*\n`type: (theme: Theme<any, any>) => React.ReactNode`\n\nRender slot for a deeper customization. Exemple: set a borderImage to the button.\n\n```\n<Button\n  style={{\n    root: [\n      style.root,\n      {\n        borderRadius: 16,\n      },\n    },\n    content: [{\n      borderRadius: 16,\n    }],\n    label: [{\n      color: \'#FFE082\',\n    }],\n    icon: [{\n      color: \'#FFE082\',\n    }],\n  }}\n  variant="text"\n  label="CONTACT"\n  iconSlot={iconStyle => (\n    <FontAwesome.default style={iconStyle} name="user" />\n  )}\n  backgroundSlot={() => (\n    <View\n      style={Styles.createViewStyle({\n        position: \'absolute\',\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n      })}\n    >\n      <BorderImage\n        uri="https://i.ibb.co/Yhs3Ff5/btn-bg.png"\n        borderWidth={18}\n        sliceWidth={127}\n      />\n    </View>\n  )}\n/>\n```\n\n### Style\n\n`type ButtonStyle = {\n    root: StyleProp<ViewStyle>\n    content: StyleProp<ViewStyle>\n    icon: StyleProp<Types.TextStyle>\n    label: StyleProp<Types.TextStyle>\n    overlay: StyleProp<ViewStyle>\n}`\n\n- `root:` use only exterior properties here (eg: use margin, borderRadius, etc. But not padding)\n- `content`: the internal container. You can use padding, background color, etc.\n- `icon`: the optional icon style\n- `label`: the text label \n- `overlay`: the overlay which appears during an mouseover\n'},1298:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),FontAwesome=__webpack_require__(118),style={root:[ui_1.Styles.createViewStyle({margin:8})]};exports.default=function default_1(){return React.createElement(reactxp_1.ScrollView,{style:ui_1.Styles.createScrollViewStyle({flex:1})},React.createElement(ui_1.View,null,React.createElement(ui_1.Text,null,"Variant: Contained"),React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({overflow:"visible",flexDirection:"row",flexWrap:"wrap",justifyContent:"space-between",alignItems:"center"})},React.createElement(ui_1.Button,{style:style,variant:"contained",label:"PRIMARY"}),React.createElement(ui_1.Button,{style:style,variant:"contained",label:"RAISED",elevation:4}),React.createElement(ui_1.Button,{style:style,variant:"contained",palette:"secondary",label:"SECONDARY"}),React.createElement(ui_1.Button,{style:style,variant:"contained",iconSlot:function(iconStyle){return React.createElement(FontAwesome.default,{style:iconStyle,name:"search"})},label:"PUSH"}),React.createElement(ui_1.Button,{style:style,isDense:!0,variant:"contained",iconSlot:function(iconStyle){return React.createElement(FontAwesome.default,{style:iconStyle,name:"search"})},label:"DENSE"}),React.createElement(ui_1.Button,{style:style,variant:"contained",isDisabled:!0,label:"DISABLED"})),React.createElement(ui_1.Text,{style:ui_1.Styles.createTextStyle({marginTop:50})},"Variant: Outlined"),React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flexDirection:"row",flexWrap:"wrap",justifyContent:"space-between",alignItems:"center"})},React.createElement(ui_1.Button,{style:style,variant:"outlined",palette:"primary",label:"PRIMARY"}),React.createElement(ui_1.Button,{style:style,variant:"outlined",palette:"secondary",label:"SECONDARY"}),React.createElement(ui_1.Button,{style:style,variant:"outlined",palette:"primary",iconSlot:function(iconStyle){return React.createElement(FontAwesome.default,{style:iconStyle,name:"search"})},label:"PUSH"}),React.createElement(ui_1.Button,{style:style,variant:"outlined",isDisabled:!0,label:"DISABLED"})),React.createElement(ui_1.Text,{style:ui_1.Styles.createTextStyle({marginTop:50})},"Circle button"),React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flexDirection:"row",overflow:"visible",flexWrap:"wrap",justifyContent:"space-between",alignItems:"center"})},React.createElement(ui_1.CircleButton,{iconSlot:function(_style){return React.createElement(FontAwesome.default,{name:"check",style:_style})},radius:20}),React.createElement(ui_1.CircleButton,{iconSlot:function(_style){return React.createElement(FontAwesome.default,{name:"check",style:_style})}}),React.createElement(ui_1.CircleButton,{iconSlot:function(_style){return React.createElement(FontAwesome.default,{name:"check",style:_style})},isDisabled:!0}),React.createElement(ui_1.CircleButton,{iconSlot:function(_style){return React.createElement(FontAwesome.default,{name:"check",style:_style})},elevation:12,palette:"primary"}),React.createElement(ui_1.CircleButton,{iconSlot:function(_style){return React.createElement(FontAwesome.default,{name:"check",style:_style})},palette:"secondary"})),React.createElement(ui_1.Text,{style:ui_1.Styles.createTextStyle({marginTop:50})},"Variant: Text"),React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flexDirection:"row",flexWrap:"wrap",justifyContent:"space-between",alignItems:"center"})},React.createElement(ui_1.Button,{style:style,variant:"text",label:"PRIMARY"}),React.createElement(ui_1.Button,{style:style,variant:"text",palette:"secondary",label:"SECONDARY"}),React.createElement(ui_1.Button,{style:style,variant:"text",iconSlot:function(iconStyle){return React.createElement(FontAwesome.default,{style:iconStyle,name:"search"})},label:"PUSH"}),React.createElement(ui_1.Button,{style:style,variant:"text",isDisabled:!0,label:"DISABLED"})),React.createElement(ui_1.Text,{style:ui_1.Styles.createTextStyle({marginTop:50})},"Custom background"),React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({overflow:"visible",flexDirection:"row",flexWrap:"wrap",justifyContent:"space-between",alignItems:"center"})},React.createElement(ui_1.Button,{style:{root:[{height:64,width:200,borderRadius:32},style.root],content:[{borderRadius:32}],label:[{color:"#FFE082"}],icon:[{color:"#FFE082"}]},elevation:10,label:"CONTACT",iconSlot:function(iconStyle){return React.createElement(FontAwesome.default,{style:iconStyle,name:"user"})},backgroundSlot:function(){return React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({position:"absolute",top:0,bottom:0,left:0,right:0})},React.createElement(ui_1.BorderImage,{uri:"https://i.ibb.co/Yhs3Ff5/btn-bg.png",borderWidth:32,sliceWidth:127}))}}))))}},1299:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1300)),story_common_1=__importDefault(__webpack_require__(1301));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Fab",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1300:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\nA multi level circular menu button.\n### Import name\n`Fab`\n### Usage\n```\n<Fab\n  nodeData={{\n    renderOpenIcon: this.renderOpenIcon,\n    renderCancelIcon: this.renderCancelIcon\n  }}\n  posX={0}\n  posY={0}\n  children={[\n    {\n      id: '00',\n      nodeData: {\n        label: '00'\n      }\n    },\n    {\n      id: '01',\n      nodeData: {\n        label: '01'\n      }\n    },\n    {\n      id: '02',\n      nodeData: {\n        renderOpenIcon: this.renderOpenIcon,\n        renderCancelIcon: this.renderCancelIcon\n      },\n      children: [\n        {\n          id: '020',\n          nodeData: {\n            label: '020'\n          }\n        },\n        {\n          id: '021',\n          nodeData: {\n            renderOpenIcon: this.renderOpenIcon,\n            renderCancelIcon: this.renderCancelIcon\n          },\n          children: [\n            {\n              id: '0210',\n              nodeData: {\n                label: '0210'\n              }\n            },\n            {\n              id: '0211',\n              nodeData: {\n                renderOpenIcon: this.renderOpenIcon,\n                renderCancelIcon: this.renderCancelIcon\n              },\n              children: [\n                {\n                  id: '02110',\n                  nodeData: {\n                    label: '02110'\n                  }\n                },\n                {\n                  id: '02111',\n                  nodeData: {\n                    label: '02111'\n                  }\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    },\n  ]}\n  onPressRoot={() => alert(\"root pressed\")}\n  onCancel={this.onCancel}\n  onSelect={this.onSelect}\n  onPreOpen={this.onPreOpen}\n  onPostOpen={this.onPostOpen}\n  onPreClose={this.onPreClose}\n  onPostClose={this.onPostClose}\n/>\n```\n### Properties\n\nThe Fab is made of nested Button. So the root and each leaf accepts the buton properties.\n\n**Important:** you must provide a position information to the root either by using the left/bottom/right/top style properties or by posX/poxY properties\n\n#### containerRef\n`type: Ref`\n\n#### posX *optional*\n`type: number`\n\n#### posY *optional*\n`type: number`\n\n#### onEnter *optional*\n`type: (id: string) => void`\n\nCallback executed when the touch enters a node or an leaf.\n\n#### onExit *optional*\n`type: (id: string) => void`\n\nCallback executed when the touch exitss a node or an leaf.\n\n#### onExit *optional*\n`type: (id: string) => void`\n\nCallback executed when the touch exits a node or an leaf.\n\n#### onSelect *optional*\n`type: (id: string, path: string[]) => void`\n\nCallback executed when the touch is ended over a node or an leaf.\n`id`: the selected leaf id\n`path`: the path to the selected leaf\n\n\n##### nodeData\n`type: FabButtonData`\n\nAn object representing the node data:\n```\n{\n  label?: string // label to display\n  renderOpenIcon?: (style: StyleProp<TextStyle>) => React.ReactNode // a render function to generate an open icon\n  renderCancelIcon?: (style: StyleProp<TextStyle>) => React.ReactNode // a render function to generate an close icon\n}\n```\n\n#### nodeChildren\n`type: Array<Child<FabButtonData>>`\n\nIf you want to make a multi level menu you will have to describe the children in this props.\n\n```\n{\n  id: string\n  nodeChildren?: Array<Child<FabButtonData>> // see bellow\n  nodeData: FabButtonData // see bellow\n}\n```\n\n#### iconSlot *optional*\n`type: iconSlot?: (style: StyleProp<TextStyle>) => React.ReactNode`\n\nThe icon to display when a Fab is open.\n\n### isOpen *optional*\n`type: string`\n\nOpen or close the root element via parent props\n\nAn leaf array (chould be recursive) to display nested Fabs. The leafs takes the same arguments as the root Fab\nbut with and additional `id: string` props.\n\n### onRef *optional*\n`type: (fab: Fab) => void`\n\nTo retrieve the Fab instance.\n\n### Other leafal props\n- ButtonProps\n- children: [React.ReactNode]\n- style: [ViewStyle](https://microsoft.github.io/reactxp/docs/styles.html#view-style-attributes)\n"},1301:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),FontAwesome=__webpack_require__(118),default_1=function(_super){function default_1(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={fabContainer:null},_this.buildButtonProps=function(nodeInstance){var hasChildren=nodeInstance.hasChildren;return{radius:hasChildren?32:28,palette:hasChildren?"primary":"secondary"}},_this.renderOpenIcon=function(style){return React.createElement(FontAwesome.default,{name:"plus",style:style})},_this.renderCancelIcon=function(style){return React.createElement(FontAwesome.default,{name:"remove",style:style})},_this.onPreOpen=function(onPreOpenId){_this.setState({onPreOpenId:onPreOpenId})},_this.onPostOpen=function(onPostOpenId){_this.setState({onPostOpenId:onPostOpenId})},_this.onPreClose=function(onPreCloseId){_this.setState({onPreCloseId:onPreCloseId})},_this.onPostClose=function(onPostCloseId){_this.setState({onPostCloseId:onPostCloseId})},_this.onCancel=function(){_this.setState({selectedId:"canceled"})},_this.onSelect=function(selectedId,path){_this.setState({selectedId:selectedId,path:path.join(" > ")})},_this.onEnter=function(hoveredId){_this.setState({hoveredId:hoveredId})},_this.onExit=function(){_this.setState({hoveredId:""})},_this}return __extends(default_1,_super),default_1.prototype.render=function(){var _this=this,windowDimension=reactxp_1.UserInterface.measureWindow(),position={x:windowDimension.width-100,y:windowDimension.height-100};return React.createElement(React.Fragment,null,React.createElement(ui_1.View,{ref:function(view){view&&null===_this.state.fabContainer&&_this.setState({fabContainer:view})},onLayout:function(){},style:ui_1.Styles.createViewStyle({overflow:"visible",flex:1,justifyContent:"space-around",alignItems:"center",alignSelf:"stretch"})},React.createElement(ui_1.Fab,{delayLongPress:300,containerRef:this.state.fabContainer,position:position,nodeData:{renderOpenIcon:this.renderOpenIcon,renderCancelIcon:this.renderCancelIcon},nodeChildren:[{id:"00",nodeData:{label:"00"}},{id:"01",nodeData:{label:"01"}},{id:"02",nodeData:{renderOpenIcon:this.renderOpenIcon,renderCancelIcon:this.renderCancelIcon},nodeChildren:[{id:"020",nodeData:{label:"020"}},{id:"021",nodeData:{renderOpenIcon:this.renderOpenIcon,renderCancelIcon:this.renderCancelIcon},nodeChildren:[{id:"0210",nodeData:{label:"0210"}},{id:"0211",nodeData:{renderOpenIcon:this.renderOpenIcon,renderCancelIcon:this.renderCancelIcon},nodeChildren:[{id:"02110",nodeData:{label:"02110"}},{id:"02111",nodeData:{label:"02111"}}]}]}]}],onCancel:this.onCancel,onSelect:this.onSelect,onPreOpen:this.onPreOpen,onPostOpen:this.onPostOpen,onPreClose:this.onPreClose,onPostClose:this.onPostClose,onEnter:this.onEnter,onExit:this.onExit,buildButtonProps:this.buildButtonProps}),React.createElement(ui_1.View,{style:{position:"absolute",left:0,top:0}},React.createElement(ui_1.Text,null,"Breadcrumbs: ",this.state.path),React.createElement(ui_1.Text,null,"Selected: ",this.state.selectedId),React.createElement(ui_1.Text,null,"Hover: ",this.state.hoveredId),React.createElement(ui_1.Text,null,"PreOpen: ",this.state.onPreOpenId),React.createElement(ui_1.Text,null,"LastOpened: ",this.state.onPostOpenId),React.createElement(ui_1.Text,null,"PreClose: ",this.state.onPreCloseId),React.createElement(ui_1.Text,null,"PostClose: ",this.state.onPostCloseId))))},default_1}(React.Component);exports.default=default_1},1302:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1303)),story_common_1=__importDefault(__webpack_require__(1304));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Fade",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1303:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`Fade`\n### Usage\nThis component makes its child (dis)appear with a fade.\n```\n<Fade isVisible={this.state.isVisible}/>\n```\n### Properties\n\n#### isVisible\n`type: boolean`\n\nMakes (dis)appear the children\n\n#### isAnimatedOnMount - *optional*\n`type: boolean`\n\nDefault to true. On mount, animate the fading to the `isVisible` prop value. Set it to false, when you don't need an entrance (dis)apparition.\n\n#### duration - *optional*\n`type: number`\n\nThe animation duration.\n\n#### onAnimationEnd - *optional*\n`type: () => void`\n\nTriggered at the end of the fade.\n\n### Other optional props\n- children: [React.ReactNode]\n- style: [ViewStyle](https://microsoft.github.io/reactxp/docs/styles.html#view-style-attributes)\n"},1304:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),React=__importStar(__webpack_require__(0)),styles=__importStar(__webpack_require__(1305)),Spoiler=function(_super){function Spoiler(props){var _this=_super.call(this,props)||this;return _this.setIdle=function(){_this.props.isVisible||_this.setState({isIdle:!0})},_this.state={isIdle:!props.isVisible},_this}return __extends(Spoiler,_super),Spoiler.prototype.UNSAFE_componentWillReceiveProps=function(nextProps){this.props.isVisible!==nextProps.isVisible&&nextProps.isVisible&&this.setState({isIdle:!1})},Spoiler.prototype.render=function(){var isVisible=this.props.isVisible;return!this.state.isIdle&&React.createElement(ui_1.Fade,{isVisible:isVisible,isAnimatedOnMount:isVisible,onAnimationEnd:this.setIdle},React.createElement(ui_1.View,null,React.createElement(ui_1.Text,null,"Han shot first. Period.")))},Spoiler}(React.PureComponent),default_1=function(_super){function default_1(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={isVisible:!1},_this}return __extends(default_1,_super),default_1.prototype.render=function(){var _this=this,isVisible=this.state.isVisible;return React.createElement(ui_1.View,{style:styles.root},React.createElement(ui_1.Button,{style:{root:styles.button},label:"Spoiler alert",onPress:function(){return _this.setState({isVisible:!isVisible})}}),React.createElement(ui_1.View,{style:styles.fadeContainer},React.createElement(Spoiler,{isVisible:isVisible})))},default_1}(React.PureComponent);exports.default=default_1},1305:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.fadeContainer=exports.button=exports.root=void 0;var ui_1=__webpack_require__(23);exports.root=ui_1.Styles.createViewStyle({flex:1,justifyContent:"center"}),exports.button=ui_1.Styles.createViewStyle({flex:0}),exports.fadeContainer=ui_1.Styles.createViewStyle({marginTop:50,height:50})},1306:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1307)),story_common_1=__importDefault(__webpack_require__(1308));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Grid",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1307:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default='\n### Import name\n`Grid`\n### Usage\nThis component displays a basic grid. This is far to be a complete implementation of the material specs for now.\nNo icon support, title is always below.\nThis is not a CSS grid, you will be responsible to manually compute the height/width needed for the item.\n```\n<Grid\nstyle={{alignSelf: \'stretch\'}}\nitems={[{\n  image: <Image style={{flex: 1}} source="https://i.ibb.co/Yhs3Ff5/btn-bg.png"/>,\n  title: "Titre"\n}, {\n  image: <Image style={{flex: 1}} source="https://i.ibb.co/Yhs3Ff5/btn-bg.png"/>,\n  title: "Titre"\n}, {\n  image: <Image style={{flex: 1}} source="https://i.ibb.co/Yhs3Ff5/btn-bg.png"/>,\n  title: "Titre"\n}, {\n  image: <Image style={{flex: 1}} source="https://i.ibb.co/Yhs3Ff5/btn-bg.png"/>,\n  title: "Titre"\n}, {\n  image: <Image style={{flex: 1}} source="https://i.ibb.co/Yhs3Ff5/btn-bg.png"/>,\n  title: "Titre"\n}\n/>\n```\n### Properties\n\n### Items\n`type: Array<{\n  image: React.ReactNode,\n  title: React.ReactNode,\n  mainAction: () => void\n}>`\n\n#### padding *optional*\n`type: number`\n\nThe gutter size.\n\n### itemHeight *optional*\n`type: number`\n\nGrid item height, including the title (which is 28px height)\n\n### itemWidth *optional*\n`type: number`\n\nGrid item width\n'},1308:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),ui_1=__webpack_require__(23),default_1=function(_super){function default_1(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={},_this}return __extends(default_1,_super),default_1.prototype.render=function(){return React.createElement(ui_1.Grid,{style:{alignSelf:"stretch"},items:[{key:"0",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"1",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"2",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"3",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"4",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"5",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"6",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"7",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"8",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"},{key:"9",image:React.createElement(reactxp_1.Image,{style:{flex:1},source:"https://i.ibb.co/Yhs3Ff5/btn-bg.png"}),title:"Titre"}]})},default_1}(React.Component);exports.default=default_1},1309:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1310)),story_common_1=__importDefault(__webpack_require__(1311));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Linear gradient",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1310:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`LinearGradient`\n\n### Installation\n\nFor use with RN, install `expo install expo-linear-gradient`\n\n### Usage\nThis component displays a linear gradient. Does not accept children.\n```\n<LinearGradient\n  style={{\n    width: 200,\n    height: 200,\n    padding: 15,\n    alignItems: 'center',\n    borderRadius: 5\n  }}\n  colors={['#eee', '#B4985F']}\n/>\n```\n### Properties\n\nThis API sticks to the [Expo Linear Gradient](https://docs.expo.io/versions/v28.0.0/sdk/linear-gradient)\n\n#### colors\n`type: string[]`\n\nAn array of colors that represent stops in the gradient. At least two colors are required (otherwise it's not a gradient, it's just a fill!).\n\n#### start - *optional*\n`type: [number, number]`\n\nAn array of [x, y] where x and y are floats. They represent the position that the gradient starts at, as a fraction of the overall size of the gradient. For example, [0.1, 0.1] means that the gradient will start 10% from the top and 10% from the left.\n\n#### end - *optional*\n`type: [number, number]`\n\nSame as start but for the end of the gradient.\n\n#### locations - *optional*\n`type: number[]`\n\nAn array of the same lenth as colors, where each element is a float with the same meaning as the start and end values, but instead they indicate where the color at that index should be.\n\n### Other optional props\n- style: [ViewStyle](https://microsoft.github.io/reactxp/docs/styles.html#view-style-attributes)\n"},1311:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),addon_knobs_1=__webpack_require__(21),React=__importStar(__webpack_require__(0));exports.default=function default_1(_a){var _b=_a.height,height=void 0===_b?200:_b,_c=_a.width,width=void 0===_c?200:_c;return React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignItems:"center"})},React.createElement(ui_1.LinearGradient,{style:{width:addon_knobs_1.number("Width",width,{range:!0,min:0,max:500,step:20}),height:addon_knobs_1.number("Height",height,{range:!0,min:0,max:500,step:20}),padding:15,alignItems:"center",borderRadius:5},colors:["#eee","#B4985F"]}))}},1312:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1313)),story_common_1=__importDefault(__webpack_require__(1314));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("List",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1313:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default='\n### Import name\n`List` and `ListItem`\n### Usage\nThis component displays a vertical list of items.\n```\n<List>\n  <ListItem\n    key="100"\n    title="The cake is a lie"\n    meta="day 100"\n    text="I am still stuck, Glados watching my back. I can feel it."\n  />\n  <ListItem\n    key="101"\n    title="The cake is a lie"\n    meta="day 101"\n    text="I am still stuck, Glados watching my back. I can feel it."\n  />\n  <ListItem\n    key="102"\n    title="The cake is a lie"\n    meta="day 102"\n    text="I am still stuck, Glados watching my back. I can feel it."\n  />\n  <ListItem\n    key="103"\n    title="The cake is a lie"\n    meta="day 103"\n    text="I am still stuck, Glados watching my back. I can feel it."\n  />\n</List>\n```\n\n### Properties of List\n\n#### style *optional*\n`type: ViewStyle`\n\nStyle applied on the list container.\n\n### Properties of ListItem\n  \n### circleImageSlot *optional*\n`type: React.ReactNode`\n\nThe image slot.\n\n#### squareImageSlot *optional*\n`type: string`\n\nThe left square image source.\n\n### renderLeftIcon *optional*\n`type: (iconStyle: StyleProp<TextStyle>) => React.ReactNode `\n\nDisplay an icon on the left.\n\n### renderLeftCircleIcon *optional*\n`type: (iconStyle: StyleProp<TextStyle>) => React.ReactNode `\n\nDisplay an circled icon on the left\n\n#### textSlot *optional*\n`type: React.ReactNode`\n\nSlot before the title\n\n#### title *optional*\n`type: string`\n\nThe title. Appearing in bold and primary color.\n\n#### meta *optional*\n`type: string`\n\nThe meta description. Use this for add information as date/author/price... in italic.\n\n#### metaSlot *optional*\n`type: React.ReactNode`\n\nSlot before the meta\n\n#### text *optional*\n`type: string`\n\n#### textSlot *optional*\n`type: React.ReactNode`\n\nSlot before the text\n\n### hasTwoLinesText *optional*\n`type: boolean`\n\nIf there is no `meta`, the text can be set on two lines.\n\n#### palette *optional*\n`type: \'primary\' | \'secondary\'`\n\nThe palette affect the title, overlay and ripple color.\n\n### isLast *optional*\n`type: boolean`\n\nIf true, will remove the last divider\n\n### mainAction *optional*\n`type: () => void`\n\nThe main action when when the user clicks on the item.\n\n### rightSlot *optional*\n`type: React.ReactNode`\n\nThe right slot which is meant to received text or control like check box or switch.\n\n### centerSlot *optional*\n`type: React.ReactNode`\n\nThe center slot which takes place behind the text.\n\n### renderRightIcon *optional*\n`type: (iconStyle: StyleProp<TextStyle>) => React.ReactNode `\n\nThe right icon slot renderer.\n\n#### style *optional*\n`type: Partial<ListItemStyleOverride>`\n\nYou can pass a style object with those keys to override the default style:\n\n```  \n{\n  root: ViewStyle\n  leftIconContainer: ViewStyle\n  circleIconContainer: ViewStyle\n  circleImageContainer: ViewStyle\n  squareImageContainer: ViewStyle\n  iconStyle: TextStyle\n  iconCircleStyle: TextStyle\n  center: TextStyle\n  title: TextStyle\n  meta: TextStyle\n  text: TextStyle\n  right: ViewStyle\n  mainButton: ButtonStyleOverride\n}\n```\n'},1314:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),addon_knobs_1=__webpack_require__(21),React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),FontAwesome=__webpack_require__(118),renderLeftIcon=function(style){return React.createElement(FontAwesome.default,{name:"star",style:__assign(__assign({},style),{position:"relative"})})},renderLeftCircleIcon=function(style){return React.createElement(FontAwesome.default,{name:"star",style:__assign(__assign({},style),{position:"relative"})})},renderRightIcon=function(style){return React.createElement(FontAwesome.default,{name:"ellipsis-v",style:__assign(__assign({},style),{position:"relative"})})};exports.default=ui_1.withTheme((function(_a){var _b=_a.palette,palette=void 0===_b?addon_knobs_1.select("Palette",[void 0,"primary","secondary"],"primary"):_b,_c=_a.hasLeftIcon,hasLeftIcon=void 0===_c?addon_knobs_1.boolean("Has left icon",!1):_c,_d=_a.hasLeftCircleIcon,hasLeftCircleIcon=void 0===_d?addon_knobs_1.boolean("Has left circle icon",!1):_d,_e=_a.hasLeftCircleImage,hasLeftCircleImage=void 0===_e?addon_knobs_1.boolean("Has left circle image",!1):_e,_f=_a.hasLeftSquareImage,hasLeftSquareImage=void 0===_f?addon_knobs_1.boolean("Has left square image",!1):_f,_g=_a.hasSecondaryAction,hasSecondaryAction=void 0===_g?addon_knobs_1.boolean("Has secondary action",!1):_g,_h=_a.hasTwoLinesText,hasTwoLinesText=void 0===_h?addon_knobs_1.boolean("Has two lines text",!1):_h,_j=_a.hasMeta,hasMeta=void 0===_j?addon_knobs_1.boolean("Has meta",!1):_j,_k=_a.hasText,hasText=void 0===_k?addon_knobs_1.boolean("Has text",!1):_k,_l=_a.theme,theme=void 0===_l?{}:_l,rightSlot=React.createElement(ui_1.CircleButton,{radius:16,variant:"text",style:{icon:{color:theme.palette.text.secondary}},palette:palette,iconSlot:renderRightIcon,onPress:alert});return React.createElement(ui_1.List,{style:{root:{alignSelf:"stretch"}}},React.createElement(ui_1.ListItem,{key:"100",palette:palette,rightSlot:hasSecondaryAction?rightSlot:void 0,title:"The cake is a lie",renderLeftIcon:hasLeftIcon?renderLeftIcon:void 0,renderLeftCircleIcon:hasLeftCircleIcon?renderLeftCircleIcon:void 0,circleImageSlot:hasLeftCircleImage&&React.createElement(React.Fragment,null,React.createElement(ui_1.BackgroundImage,{uri:"https://i.ibb.co/Yhs3Ff5/btn-bg.png",resizeMode:"cover"}),React.createElement(ui_1.View,{style:{width:28,height:28,justifyContent:"center",alignItems:"center",borderRadius:100,overflow:"hidden"}},React.createElement(reactxp_1.Image,{style:{width:100,height:100},source:"https://upload.wikimedia.org/wikipedia/commons/7/71/Pixelart-tv-iso-2.png"}))),squareImageSlot:hasLeftSquareImage&&React.createElement(reactxp_1.Image,{style:{flex:1},source:"http://www.easy-birthday-cakes.com/images/companion-cube-cake-21584741.jpg"}),meta:hasMeta?"day 100":void 0,text:hasText?"I am still stuck, Glados watching my back. I can feel it. This is not a game.":void 0,hasTwoLinesText:hasTwoLinesText}),React.createElement(ui_1.ListItem,{key:"101",palette:palette,rightSlot:hasSecondaryAction?rightSlot:void 0,title:"The cake is a lie",renderLeftIcon:hasLeftIcon?renderLeftIcon:void 0,renderLeftCircleIcon:hasLeftCircleIcon?renderLeftCircleIcon:void 0,circleImageSlot:hasLeftCircleImage&&React.createElement(reactxp_1.Image,{style:{width:40,height:40},source:"https://upload.wikimedia.org/wikipedia/commons/7/71/Pixelart-tv-iso-2.png"}),squareImageSlot:hasLeftSquareImage&&React.createElement(reactxp_1.Image,{style:{flex:1},source:"http://www.easy-birthday-cakes.com/images/companion-cube-cake-21584741.jpg"}),meta:hasMeta?"day 101":void 0,text:hasText?"I am still stuck, Glados watching my back. I can feel it. This is not a game.":void 0,hasTwoLinesText:hasTwoLinesText}),React.createElement(ui_1.ListItem,{key:"102",palette:palette,rightSlot:hasSecondaryAction?rightSlot:void 0,title:"The cake is a lie",renderLeftIcon:hasLeftIcon?renderLeftIcon:void 0,renderLeftCircleIcon:hasLeftCircleIcon?renderLeftCircleIcon:void 0,circleImageSlot:hasLeftCircleImage&&React.createElement(reactxp_1.Image,{style:{width:40,height:40},source:"https://upload.wikimedia.org/wikipedia/commons/7/71/Pixelart-tv-iso-2.png"}),squareImageSlot:hasLeftSquareImage&&React.createElement(reactxp_1.Image,{style:{flex:1},source:"http://www.easy-birthday-cakes.com/images/companion-cube-cake-21584741.jpg"}),meta:hasMeta?"day 102":void 0,text:hasText?"I am still stuck, Glados watching my back. I can feel it. This is not a game.":void 0,hasTwoLinesText:hasTwoLinesText}),React.createElement(ui_1.ListItem,{key:"103",palette:palette,rightSlot:hasSecondaryAction?rightSlot:void 0,title:"The cake is a lie",renderLeftIcon:hasLeftIcon?renderLeftIcon:void 0,renderLeftCircleIcon:hasLeftCircleIcon?renderLeftCircleIcon:void 0,circleImageSlot:hasLeftCircleImage&&React.createElement(reactxp_1.Image,{style:{width:40,height:40},source:"https://upload.wikimedia.org/wikipedia/commons/7/71/Pixelart-tv-iso-2.png"}),squareImageSlot:hasLeftSquareImage&&React.createElement(reactxp_1.Image,{style:{flex:1},source:"http://www.easy-birthday-cakes.com/images/companion-cube-cake-21584741.jpg"}),meta:hasMeta?"day 103":void 0,text:hasText?"I am still stuck, Glados watching my back. I can feel it. This is not a game.":void 0,hasTwoLinesText:hasTwoLinesText,isLast:!0}))}))},1315:function(module,exports,__webpack_require__){"use strict";(function(module){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),doc_1=__importDefault(__webpack_require__(1316)),story_common_1=__importDefault(__webpack_require__(1317));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Paper",story_common_1.default,{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1316:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`Paper`\n### Usage\nThis component is a container which implements the Material Design Paper specifications.\n```\n<Paper\n  elevation={10}\n  style={\n    root: {\n      width: 232,\n      height: 132,\n    }\n  }}\n>\n   <Text\n      style={Styles.createTextStyle({\n        textAlign: 'center',\n      })}\n    >\n      \"I am at level 10\"\n    </Text>\n  </View>\n</Paper>\n```\n### Properties\n\n#### elevation *optional*\n`type: number`\n\nFrom 0 to 24, the Material Design elevation number.\n\n### Style\n\n`type ButtonStyle = {\n    root: StyleProp<ViewStyle>\n    content: StyleProp<ViewStyle>\n}`\n\n- `root:` use only exterior properties here (eg: use margin, borderRadius, etc. But not padding)\n- `content`: the internal container. You can use padding, background color, etc.\n"},1317:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6);exports.default=function default_1(){return React.createElement(reactxp_1.ScrollView,{style:ui_1.Styles.createScrollViewStyle({flex:1})},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flexWrap:"wrap",flexDirection:"row"})},React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:0},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"0dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:1},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"1dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:2},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"2dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:3},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"3dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:4},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"4dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:5},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"5dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:6},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"6dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:7},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"7dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:8},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"8dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:9},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"9dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:10},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"10dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:11},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"11dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:12},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"12dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:13},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"13dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:14},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"14dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:15},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"15dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:16},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"16dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:17},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"17dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:18},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"18dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:19},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"19dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:20},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"20dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:21},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"21dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:22},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"22dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:23},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"23dp"))),React.createElement(ui_1.Paper,{style:{root:ui_1.Styles.createViewStyle({margin:15,width:120,height:60})},elevation:24},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,alignItems:"center",justifyContent:"center"})},React.createElement(reactxp_1.Text,null,"24dp")))))}},1318:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1319)),story_common_1=__importDefault(__webpack_require__(1320));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Progress bar",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1319:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`ProgressBar`\n### Usage\nThis component displays a animated progress bar.\n```\n<ProgressBar\n  progress={30}\n  animationDuration={200}\n/>\n```\n### Properties\n\n#### progress *optional*\n`type: number`\n\nFrom 0 to 100, the value of the progression.\n\n#### animationDuration *optional*\n`type: number`\n\nTime of transition between to `progress` values\n\n#### palette *optional*\n`type: 'primary' | 'secondary'`\n\nThe color of the progress indicator.\n\n#### style *optional*\n`type: Partial<ProgressBarStyle>`\n\nYou can pass a style object with thos keys to ovveride the default style:\n\n```  \n{\n  root: ViewStyle\n  top: Types.ViewStyle\n  background: ViewStyle\n  fill: Types.ViewStyle\n}\n```\n"},1320:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),addon_knobs_1=__webpack_require__(21),React=__importStar(__webpack_require__(0));exports.default=function default_1(_a){var _b=_a.animationDuration,animationDuration=void 0===_b?300:_b,_c=_a.progress,progress=void 0===_c?50:_c;return React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignSelf:"stretch"})},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({alignSelf:"stretch"})},React.createElement(ui_1.ProgressBar,{progress:addon_knobs_1.number("Progress",progress,{range:!0,min:0,max:100}),animationDuration:addon_knobs_1.number("Animation duration",animationDuration,{range:!0,min:0,max:3e3,step:10})})))}},1321:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1322)),story_common_1=__importDefault(__webpack_require__(1323));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Radial gradient",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1322:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`RadialGradient`\n### Usage\nThis component displays a radial gradient. Does not accept children.\n```\n<RadialGradient\n  style={{\n    width: 200,\n    height: 200,\n  }}\n  colors={['#edd33e', '#B4985F', '#0000ff']}\n  stops={[0.1, 0.5, 0.6]}\n  center={[50, 100]}\n  radius={100}\n/>\n```\n### Properties\n\n#### colors\n`type: string[]`\n\nAn array of colors that represent stops in the gradient. At least two colors are required (otherwise it's not a gradient, it's just a fill!).\n\n#### stops\n`type: number[]`\n\nAn array of the same lenth as colors, where each element is a float with the same meaning as the start and end values, but instead they indicate where the color at that index should be.\n\n### center *optional*\n`type: [number, number] | [string, string]`\n\nA tuple of number indicate the origin of the gradient ellipse.\nIf ommitted, the component will take the center of the element.\n\n### isEllipse *optional*\n`type: boolean`\n\nThe final shape of the gradient. If true, the shape will be function of the container width/height.\n\n### radius *optional*\n`type: number | 'closest-corner' | 'farthest-side' | 'farthest-corner'`\n\nLike in CSS, this represent the radius of the final ellipse of the gradient. It can be a `number` in pixel unit. Or a string:\n- `closest-side` The gradient's ending shape meets the side of the box closest to its center (for circles) or meets both the vertical and horizontal sides closest to the center (for ellipses).\n- `closest-corner` The gradient's ending shape is sized so that it exactly meets the closest corner of the box from its center.\n- `farthest-side`\tSimilar to closest-side, except the ending shape is sized to meet the side of the box farthest from its center (or vertical and horizontal sides).\n- `farthest-corner`\tThe gradient's ending shape is sized so that it exactly meets the farthest corner of the box from its center.\n\n### Other optional props\n- style: [ViewStyle](https://microsoft.github.io/reactxp/docs/styles.html#view-style-attributes)\n"},1323:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),React=__importStar(__webpack_require__(0)),ui_1=__webpack_require__(23);exports.default=function default_1(_a){var _b=_a.isEllipse,isEllipse=void 0===_b||_b,_c=_a.height,height=void 0===_c?200:_c,_d=_a.width,width=void 0===_d?200:_d,radius=_a.radius,_e=_a.percentRadius,percentRadius=void 0===_e?[50,50]:_e,_f=_a.center,center=void 0===_f?[50,50]:_f,predefinedRadiusKnob=addon_knobs_1.select("Radius type",[void 0,"closest-side","closest-corner","farthest-side","farthest-corner"],radius),percentRadiusKnob=addon_knobs_1.array("Radius in percent (to enable, select NULL in Radius Type)",percentRadius,", ");return React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignItems:"center"})},React.createElement(ui_1.RadialGradient,{style:{width:addon_knobs_1.number("Container width",width,{range:!0,min:0,max:500,step:20}),height:addon_knobs_1.number("Container height",height,{range:!0,min:0,max:500,step:20})},radius:predefinedRadiusKnob||percentRadiusKnob,isEllipse:addon_knobs_1.boolean("Ellipse shape",isEllipse),colors:["#edd33e","#B4985F","#00f","#000"],stops:[.1,.5,.99,1],center:addon_knobs_1.array("Gradient origin position (in percent)",[center[0]+"%",center[1]+"%"],", ")}))}},1324:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1325)),story_common_1=__importDefault(__webpack_require__(1326));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Ripple",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1325:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`RippleGenerator`\n### Usage\nThis component displays a Material Design Ripple on user press.\n\nLike BackgroundImage, this element will stick in absolute position, taking the whole surface of its container.\n\nNote: due to an [issue](https://github.com/Microsoft/reactxp/issues/1012) in ReactXP, the action event handler of you container should take place in the onPres props of the RipppleGenerator.\n```\n<Paper\n  elevation={4}\n  style={{\n    width: 232,\n    height: 132,\n  }}\n>\n  <Ripple\n    onPress={console.log}\n    isOnPaper\n  />\n</Paper>\n```\n### Properties\n\n#### color *optional*\n`type: string`\n\nThe ripple teint. Take the precedence on `palette` attribute.\n\n### onPress *optional*\n`type: (e: Types.SyntheticEvent) => void`\n\nThe event handler of the Ripple. Due to an issue limitation of ReactXP\n"},1326:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),ui_1=__webpack_require__(23),default_1=function(_super){function default_1(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={isClicked0:!1,isClicked1:!1},_this}return __extends(default_1,_super),default_1.prototype.render=function(){var _this=this;return React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,overflow:"visible",justifyContent:"center",alignItems:"center"})},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({alignSelf:"stretch",overflow:"visible",height:250,justifyContent:"space-between",alignItems:"center"})},React.createElement(ui_1.Paper,{elevation:4,style:{root:{width:232,height:132}}},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1})},React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignItems:"center"})},React.createElement(ui_1.Text,{style:ui_1.Styles.createTextStyle({textAlign:"center"})},this.state.isClicked0?"Clicked":"Click! Click!")),React.createElement(ui_1.Ripple,{color:"#ff0000",onRef:function(e){return _this.ripple0=e}}),React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({position:"absolute",top:0,right:0,bottom:0,left:0})},React.createElement(reactxp_1.Button,{style:ui_1.Styles.createViewStyle({flex:1}),onPress:function(){_this.setState({isClicked0:!0})},onPressIn:function(e){_this.ripple0&&_this.ripple0.onPressIn(e)},onPressOut:function(e){_this.ripple0&&_this.ripple0.onPressOut(e)}}))))))},default_1}(React.Component);exports.default=default_1},1327:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1328)),story_common_1=__importDefault(__webpack_require__(1329));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Slider",(function(){return React.createElement(story_common_1.default,null)}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1328:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default='\n### Import name\n`Slider`\n### Usage\nThis component displays a Material Design Slider.\n\n```\n<Slider style={{root: [{width: 100}]}}>\n```\n### Properties\n\n#### isAmount *optional*\n`type: boolean`\n\nIf true, acts as an amount slider, contrasting the bar behind the cursor.\nIf false acts as a position cursor, the bar behind being full active.\n\n### range\n`type: [number, number]`\n\nA tupple representing the start and end range of value\n\n### value *optional*\n`type: number`\n\nThe current value\n\n### step\n`type: number`\n\nThe step between two cursor position\n\n#### isAmount *optional*\n`type: boolean`\n\n\n#### palette *optional*\n`type: "primary" | "secondary"`\n\nThe theme palette.\n\n### onChange *optional*\n`type: (value: number) => void`\n\nFire when the value changes.\n\n### style *optional*\n`type: SliderOverrideStyle = {\n  baseSegment: StyleRuleSet<ViewStyle>\n  activeSegment: StyleRuleSet<ViewStyle>\n  cursor: StyleRuleSet<ViewStyle>\n}`\n\n'},1329:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),ui_1=__webpack_require__(23),addon_knobs_1=__webpack_require__(21);exports.default=function default_1(){var value=addon_knobs_1.number("Value",1);return React.createElement(ui_1.Slider,{style:{root:{width:100}},range:[0,3],isAmount:!0,steps:3,value:value,key:value,onChange:console.log})}},1330:function(module,exports,__webpack_require__){"use strict";(function(module){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),react_1=__webpack_require__(24),React=__importStar(__webpack_require__(0)),doc_1=__importDefault(__webpack_require__(1331));react_1.storiesOf("Sproutch",module).add("Spinner",(function(){return React.createElement(ui_1.View,{style:ui_1.Styles.createViewStyle({flex:1,overflow:"visible",justifyContent:"center",alignItems:"center"})},React.createElement(ui_1.Spinner,{color:"#456",size:"small"}))}),{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1331:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n### Import name\n`Spinner`\n### Usage\nThis component displays a animated spinner. It is just a wrapper of the ReactXP.ActivityIndicator\n```\n<ProgressBar\n  progress={30}\n  animationDuration={200}\n/>\n```\n### Properties\n\n#### color *optional*\n`type: string`\n\nThe color of the indicator.\n\n#### deferTime *optional*\n`type: number`\n\nNumber of ms to wait before displaying\n\n#### size *optional*\n`type: 'large' | 'medium' | 'small' | 'tiny'`\n\nSize of indicator (exact sizes are platform-specific)\n### Other optional props\n- style:\n  - [ViewStyle](https://microsoft.github.io/reactxp/docs/styles.html#view-style-attributes)\n  - [TransformStyle](https://microsoft.github.io/reactxp/docs/styles.html#transform-style-attributes)\n  - [FlexboxStyle](https://microsoft.github.io/reactxp/docs/styles.html#flexbox-style-attributes)\n"},1332:function(module,exports,__webpack_require__){"use strict";(function(module){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});var addon_knobs_1=__webpack_require__(21),react_1=__webpack_require__(24),doc_1=__importDefault(__webpack_require__(1333)),story_common_1=__importDefault(__webpack_require__(1334));react_1.storiesOf("Sproutch",module).addDecorator(addon_knobs_1.withKnobs).add("Tabs",story_common_1.default,{notes:{markdown:doc_1.default}})}).call(this,__webpack_require__(14)(module))},1333:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default="\n\nThis components needs `TabBar` and Tab\n\n### Import name\n`TabBar` and `Tab`\n### Usage\nThis component implements the Tab system of Material Design.\n```\n<TabBar children = {\n    setProps => (\n      <>\n        <Tab\n          key={0}\n          id=\"0\"\n          label=\"First tab label\"\n          {...setProps('0')}\n        />\n        <Tab\n          key={1}\n          id=\"1\"\n          label=\"Second tab label\"\n          {...setProps('1')}\n        />\n        <Tab\n          key={2}\n          id=\"2\"\n          label=\"Third tab label\"\n          {...setProps('2')}\n        />\n      </>\n    )\n  }\n/>\n```\n### Properties\n\n#### activeTabId *optional*\n`type: string`\n\nThe intitial active tab id. Use this if you want to active a tab on mount.\n\n#### hasIconOnTop *optional*\n`type: boolean`\n\nSet to True if you want the icon displays on top of the label.\n\n#### palette *optional*\n`type: 'primary' | 'secondary'`\n\nThe color of the tab font.\n\nSize of indicator (exact sizes are platform-specific)\n#### style *optional*\n\nAccept a style object to override the default style of the TabBar\n\n```\n{\n  root: ViewStyle\n  wrapper: ViewStyle\n  scrollIndicator: ViewStyle\n  cursor: ViewStyle\n  scrollView: ScrollViewStyle\n}\n```\n\n#### tabs\n`type: TabProps[]`\n\nThis is here where you will generate the tabs. They can change dynamically. \n\n```\nTabProps = {\n  id: string // unique tab id\n  renderIcon?: ( // render function with in parameter a preset for the icon style\n    style: Types.TextStyle\n  ) => JSX.Element\n  label?: string // the text\n  isDisable?: boolean // prevent click on the icon\n  slot?: JSX.Element // a slot to put some children, like a notification badge\n  style?: Partial<TabStyle> // An object to override the default style. See below.\n}\n```\n\nThe style props accepts this object type.\n\n```\n{\n  root: Types.ViewStyle\n  icon: Types.TextStyle\n  label: Types.TextStyle\n}\n```\n\nThe complete tabs property used in this story:\n\n```\n[\n  {\n    id: \"0\",\n    label: text('First tab label', firstTabLabel),\n    isDisable: boolean('Disabled', isDisable),\n    slot: notification,\n    renderIcon: iconStyle => (\n        <>\n          {boolean('With icon', hasIcon) && (\n            <FontAwesome.default\n              style={iconStyle}\n              name=\"rocket\"\n              size={30}\n              color=\"#900\"\n            />\n          )}\n        </>\n      )\n  },\n  ...Array.from(Array(number('Tab number', tabNumber)))\n      .map((_, i) => ({\n        id: i + 1 + '',\n        label: `${otherTabBarLabel} ${i + 1}`,\n        renderIcon: iconStyle => (\n          <>\n            {boolean('With icon', hasIcon) && (\n              <FontAwesome.default\n                style={iconStyle}\n                name=\"check\"\n                size={30}\n                color=\"#900\"\n              />\n            )}\n          </>\n        )\n      }))\n  ]\n```\n\n#### renderCustomCursor *optional*\n```\n  type: (\n    tabLayout: LayoutInfo, // The actual active tab layout\n    barLayout: LayoutInfo, // The Tabar layout\n    theme: Theme<any, any> // Your theme\n  ) => JSX.Element | JSX.Element[]\n```\n\nUse this render props if you want to customize the cursor.\n\nExemple: A cursor fading depending on this position in the tabs bar\n\n```\nfunction renderCustomCursor(\n  { x }: LayoutInfo,\n  { width: barWidth }: LayoutInfo,\n  theme: DefaultTheme\n) {\n  return (\n    <View\n      style={Styles.createViewStyle({\n        borderRadius: 1,\n        height: 4,\n        backgroundColor: colorManipulator.fade(\n          theme.business.warning.main,\n          Math.max(x / barWidth, 0.1)\n        ),\n        transform: [{ scaleY: 4 }],\n      })}\n    />\n  )\n}\n```\n\n#### customCursorAnimation *optional*\n```\n  type: (\n    {\n      scaleX,\n      scaleY,\n      translateY,\n      rotateZ\n    }: {  // the animated values used in the cursor animation,\n      scaleX,\n      scaleY,\n      translateY,\n      rotateZ\n    }\n    {\n      width\n    }: { // the new active tab width\n      width: number\n    },\n    theme: Theme // Your theme\n  )`\n```\n\n```\n(\n  { scaleX, scaleY, translateY, rotateZ },\n  { width },\n  theme\n) => ({\n  scaleX: Animated.sequence([\n    Animated.timing(scaleX, {\n      toValue: 0,\n      duration: 100,\n      easing: Animated.Easing.Out(),\n    }),\n    Animated.timing(scaleX, {\n      toValue: width - theme.spacing * 2,\n      duration: 200,\n      easing: Animated.Easing.In(),\n    }),\n  ]),\n  scaleY: Animated.sequence([\n    Animated.timing(scaleY, {\n      toValue: 30,\n      duration: 100,\n      easing: Animated.Easing.Out(),\n    }),\n    Animated.timing(scaleY, {\n      toValue: 4,\n      duration: 200,\n      easing: Animated.Easing.In(),\n    }),\n  ]),\n  translateY: Animated.sequence([\n    Animated.timing(translateY, {\n      toValue: -30,\n      duration: 50,\n      easing: Animated.Easing.Out(),\n    }),\n    Animated.timing(translateY, {\n      toValue: 0,\n      duration: 50,\n      easing: Animated.Easing.In(),\n    }),\n  ]),\n  rotate: Animated.sequence([\n    Animated.timing(rotate, {\n      toValue: 180,\n      duration: 50,\n      easing: Animated.Easing.Out(),\n    }),\n    Animated.timing(rotate, {\n      toValue: 0,\n      duration: 50,\n      easing: Animated.Easing.In(),\n    }),\n  ]),\n})\n\n```\n\n\n#### leftScrollButton\n`type: ()) => JSX.Element | JSX.Element[]`\n\nSlot for the left scroll button\n\nExample:\n\n```\n<View\n  style={{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }}\n>\n  <FontAwesome.default name=\"chevron-left\" size={16} color=\"#ddd\" />\n</View>\n```\n\n#### rightScrollButton\n`type: () => JSX.Element | JSX.Element[]`\n\nSlot for the right scroll button\n\nExample:\n\n```\n<View\n  style={{\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  }}\n>\n  <FontAwesome.default name=\"chevron-right\" size={16} color=\"#ddd\" />\n</View>\n```\n\n#### isFrozen *optional*\n`type: boolean`\n\nBlock scroll and tab action if true.\n\n#### onChange *optional*\n`type: (tabId: string) => void`\n\nCallback on tab change. This is triggered before the cursor animation.\n\n#### onPressActiveTab *optional*\n`type: () => void`\n\nCallback on the active tab press.\n"},1334:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0});var ui_1=__webpack_require__(23),addon_knobs_1=__webpack_require__(21),React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),FontAwesome=__webpack_require__(118);function renderCustomCursor(_a,_b,theme){var x=_a.x,barWidth=_b.width;return React.createElement(ui_1.View,{style:reactxp_1.Styles.createViewStyle({position:"absolute",width:1,height:4,top:44,backgroundColor:ui_1.colorManipulator.fade(theme.business.warning.main,Math.max(x/Math.max(barWidth,1),.1))})})}var customCursorAnimation=function(_a,_b,theme){var scaleX=_a.scaleX,scaleY=_a.scaleY,translateY=_a.translateY,rotate=_a.rotate,width=_b.width;return{scaleX:ui_1.Animated.sequence([ui_1.Animated.timing(scaleX,{toValue:0,duration:100,easing:ui_1.Animated.Easing.Out()}),ui_1.Animated.timing(scaleX,{toValue:width-4*theme.spacing,duration:200,easing:ui_1.Animated.Easing.In()})]),scaleY:ui_1.Animated.sequence([ui_1.Animated.timing(scaleY,{toValue:1,duration:100,easing:ui_1.Animated.Easing.Out()}),ui_1.Animated.timing(scaleY,{toValue:1,duration:200,easing:ui_1.Animated.Easing.In()})]),translateY:ui_1.Animated.sequence([ui_1.Animated.timing(translateY,{toValue:-30,duration:50,easing:ui_1.Animated.Easing.Out()}),ui_1.Animated.timing(translateY,{toValue:0,duration:50,easing:ui_1.Animated.Easing.In()})]),rotate:ui_1.Animated.sequence([ui_1.Animated.timing(rotate,{toValue:180,duration:50,easing:ui_1.Animated.Easing.Out()}),ui_1.Animated.timing(rotate,{toValue:0,duration:50,easing:ui_1.Animated.Easing.In()})])}},notification=React.createElement(ui_1.View,{style:reactxp_1.Styles.createViewStyle({backgroundColor:"red",borderRadius:10,minWidth:20,padding:4,position:"absolute",top:0,right:0})},React.createElement(ui_1.Text,{style:reactxp_1.Styles.createTextStyle({color:"white",textAlign:"center",fontSize:10})},"1"));exports.default=function default_1(_a){var _b=_a.firstTabLabel,firstTabLabel=void 0===_b?"LARGE ROCKET LABEL":_b,_c=_a.otherTabBarLabel,otherTabBarLabel=void 0===_c?"ROCKET":_c,_d=_a.hasIcon,hasIcon=void 0!==_d&&_d,_e=_a.isDisabled,isDisabled=void 0!==_e&&_e,_f=_a.hasIconOnTop,hasIconOnTop=void 0!==_f&&_f,palette=_a.palette,_g=_a.activeTabId,activeTabId=void 0===_g?"0":_g,_h=_a.tabNumber,tabNumber=void 0===_h?4:_h,_j=_a.customCursor,customCursor=void 0!==_j&&_j,_k=_a.isFrozen,isFrozen=void 0===_k?addon_knobs_1.boolean("Freeze the tabs bar",!1):_k,paletteKnob=addon_knobs_1.select("Palette",[void 0,"primary","secondary"],palette);return React.createElement(ui_1.View,{style:reactxp_1.Styles.createViewStyle({flex:1,justifyContent:"center"})},React.createElement(ui_1.TabBar,{isFrozen:isFrozen,hasIconOnTop:addon_knobs_1.boolean("Has two lines",hasIconOnTop),palette:paletteKnob||void 0,activeTabId:addon_knobs_1.select("Tab",["0","1","2","3","4","5"],activeTabId),customCursorAnimation:addon_knobs_1.boolean("With custom cursor",customCursor)?customCursorAnimation:void 0,renderCustomCursor:addon_knobs_1.boolean("With custom cursor",customCursor)?renderCustomCursor:void 0,leftScrollButton:function(theme){return React.createElement(ui_1.View,{style:{flex:1,alignItems:"center",justifyContent:"center"}},React.createElement(FontAwesome.default,{name:"chevron-left",size:16,color:paletteKnob?theme.palette[paletteKnob].main:theme.palette.primary.contrastText}))},rightScrollButton:function(theme){return React.createElement(ui_1.View,{style:{flex:1,alignItems:"center",justifyContent:"center"}},React.createElement(FontAwesome.default,{name:"chevron-right",size:16,color:paletteKnob?theme.palette[paletteKnob].main:theme.palette.primary.contrastText}))},tabs:__spreadArrays([{id:"0",label:addon_knobs_1.text("First tab label",firstTabLabel),isDisabled:addon_knobs_1.boolean("Disabled",isDisabled),badgeSlot:notification,iconSlot:addon_knobs_1.boolean("With icon",hasIcon)?function(iconStyle){return React.createElement(FontAwesome.default,{style:iconStyle,name:"rocket",size:30})}:void 0}],Array.from(Array(addon_knobs_1.number("Tab number",tabNumber))).map((function(_,i){return{id:i+1+"",label:otherTabBarLabel+" "+(i+1),iconSlot:addon_knobs_1.boolean("With icon",hasIcon)?function(iconStyle){return React.createElement(FontAwesome.default,{style:iconStyle,name:"check",size:30})}:void 0}})))}))}},152:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.toArray=exports.Styles=void 0;var reactxp_1=__webpack_require__(6);exports.Styles=reactxp_1.Styles,exports.toArray=function toArray(s){return Array.isArray(s)?s:[s]}},153:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getHoverOverlayOpacity=exports.getMaterialOverlayColor=void 0;var _1=__webpack_require__(27);exports.getMaterialOverlayColor=function getMaterialOverlayColor(_a){var isOnPaper=_a.isOnPaper,palette=_a.palette,theme=_a.theme;return isOnPaper?palette?theme.palette[palette].main:"light"===theme.palette.type?"#000":"#fff":_1.colorManipulator.getLuminance(theme.palette[palette||"primary"].main)>=.5?"#000":"#fff"},exports.getHoverOverlayOpacity=function getHoverOverlayOpacity(color,theme){var hoverOverlayOpacity=theme.palette.state.hover,overlayLuminance=_1.colorManipulator.getLuminance(color);return overlayLuminance<.3?hoverOverlayOpacity.dark:overlayLuminance<.7?hoverOverlayOpacity.medium:hoverOverlayOpacity.light}},197:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.createThemeContext=exports.override=exports.getTheme=exports.defaultTheme=void 0;var React=__importStar(__webpack_require__(0)),colors_1=__webpack_require__(489),deepmerge=__webpack_require__(1225),lightBackground={statusBar:colors_1.colors.grey[300],appBar:colors_1.colors.grey[100],default:colors_1.colors.grey[50],paper:colors_1.colors.white},defaultPalette=(colors_1.colors.black,colors_1.colors.grey[900],colors_1.colors.grey.A400,colors_1.colors.grey[800],{common:{black:colors_1.colors.black,white:colors_1.colors.white},type:"light",primary:{light:colors_1.colors.indigo[300],main:colors_1.colors.indigo[500],dark:colors_1.colors.indigo[700],contrastText:colors_1.colors.white},secondary:{light:colors_1.colors.pink.A200,main:colors_1.colors.pink.A400,dark:colors_1.colors.pink.A700,contrastText:colors_1.colors.white},grey:colors_1.colors.grey,text:{primary:"rgba(0, 0, 0, 0.87)",secondary:"rgba(0, 0, 0, 0.54)",disabled:"rgba(0, 0, 0, 0.38)",hint:"rgba(0, 0, 0, 0.38)"},background:lightBackground,divider:"rgba(0, 0, 0, 0.12)",modifier:{active:"rgba(0, 0, 0, 0.54)",hover:"rgba(0, 0, 0, 0.08)",hoverOpacity:.08,selected:"rgba(0, 0, 0, 0.14)",disabled:"rgba(0, 0, 0, 0.26)",disabledBackground:"rgba(0, 0, 0, 0.12)"},state:{hover:{light:.08,medium:.06,dark:.04},focus:{light:.32,medium:.24,dark:.12},selected:{light:.16,medium:.12,dark:.08},activated:{light:.12,medium:.24,dark:.36},pressed:{light:.16,medium:.32,dark:.48},draged:{light:.8,medium:.16,dark:.32}},contrastThreshold:3,tonalOffset:.2});exports.defaultTheme={shape:{borderRadius:4},palette:defaultPalette,spacing:8,typography:{fontFamily:"Roboto",fontSize:14,fontWeightLight:"300",fontWeightRegular:"400",fontWeightMedium:"500"},overrides:{},business:{error:{light:colors_1.colors.red[300],main:colors_1.colors.red[500],dark:colors_1.colors.red[700],contrastText:colors_1.colors.white},valid:{light:colors_1.colors.green[300],main:colors_1.colors.green[500],dark:colors_1.colors.green[700],contrastText:colors_1.colors.white},warning:{light:colors_1.colors.orange[300],main:colors_1.colors.orange[500],dark:colors_1.colors.orange[700],contrastText:colors_1.colors.white}}},exports.getTheme=function getTheme(config){return deepmerge(exports.defaultTheme,config)},exports.override=function override(overrides,compName,rule){return overrides&&overrides[compName]&&overrides[compName][rule]?overrides[compName][rule]:void 0},exports.createThemeContext=function createThemeContext(theme){return React.createContext(theme)}},198:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Fade_1=__webpack_require__(1232);Object.defineProperty(exports,"Fade",{enumerable:!0,get:function(){return Fade_1.default}})},199:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Paper_web_1=__webpack_require__(1233);Object.defineProperty(exports,"Paper",{enumerable:!0,get:function(){return Paper_web_1.default}})},200:function(module,exports,__webpack_require__){"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Emitter=exports.Ripple=void 0;var Emitter_1=__importDefault(__webpack_require__(492));Object.defineProperty(exports,"Emitter",{enumerable:!0,get:function(){return Emitter_1.default}});var Ripple_1=__importDefault(__webpack_require__(1235));Object.defineProperty(exports,"Ripple",{enumerable:!0,get:function(){return Ripple_1.default}})},201:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var Text_1=__webpack_require__(1237);Object.defineProperty(exports,"Text",{enumerable:!0,get:function(){return Text_1.default}})},202:function(module,exports,__webpack_require__){"use strict";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.shouldComponentUpdate=exports.recall=exports.debounce=exports.isTouch=exports.noop=void 0,exports.noop=function(){return null},exports.isTouch=function isTouch(e){return"touches"in e||"touches"in e.nativeEvent},exports.debounce=function debounce(func,waitMilliseconds,isImmediate){var timeoutId;return void 0===waitMilliseconds&&(waitMilliseconds=50),function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var context=this,doLater=function(){timeoutId=void 0,isImmediate||func.apply(context,args)},shouldCallNow=isImmediate&&void 0===timeoutId;void 0!==timeoutId&&clearTimeout(timeoutId),timeoutId=setTimeout(doLater,waitMilliseconds),shouldCallNow&&func.apply(context,args)}},exports.recall=function recall(func,computeArg,timeout){var timeoutId;void 0===timeout&&(timeout=16);var iteration=0;return function(){for(var args=[],_i=0;_i<arguments.length;_i++)args[_i]=arguments[_i];var context=this;timeoutId&&(clearTimeout(timeoutId),iteration++),timeoutId=setTimeout((function(){timeoutId=void 0,iteration=0}),timeout);var newArg=computeArg(iteration,args);func.apply(context,newArg)}},exports.shouldComponentUpdate=function shouldComponentUpdate(nextProps,nextState,currentProps,currentState){var nextStyle=nextProps.style,otherProps=__rest(nextProps,["style"]);return Object.keys(otherProps).some((function(key){return otherProps[key]!==currentProps[key]}))||void 0===nextStyle&&void 0!==currentProps.style||void 0!==nextStyle&&void 0===currentProps.style||void 0!==nextStyle&&void 0!==currentProps.style&&Object.keys(nextStyle).some((function(key){return"object"==typeof nextStyle[key]?Object.keys(nextStyle[key]).some((function(k){return nextStyle[k]!==currentProps.style[k]})):nextStyle[key]!==currentProps.style[key]}))||Object.keys(nextState).some((function(key){return nextState[key]!==currentState[key]}))}},203:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.fitParent=exports.createScrollIndicatorOverlayStyle=exports.tabsBarStyle=exports.tabStyle=void 0;var reactxp_1=__webpack_require__(6),colorManipulator_1=__webpack_require__(488),createStyle_1=__webpack_require__(152),helpers_1=__webpack_require__(153),theme_1=__webpack_require__(197);exports.tabStyle=function(_a){var theme=_a.theme,palette=_a.palette,_b=_a.style,style=void 0===_b?{}:_b,overlayColor=_a.overlayColor,options=_a.options,tabHeight=options&&options.hasIconOnTop?72:48,iconSize=3*theme.spacing,tabColor=void 0===palette||""===palette?colorManipulator_1.colorManipulator.fade(theme.palette.primary.contrastText,.7):theme.palette.text.secondary,tabActiveColor=void 0===palette||""===palette?theme.palette.primary.contrastText:theme.palette[palette].main,tabDisabledColor=void 0===palette||""===palette?colorManipulator_1.colorManipulator.fade(theme.palette.primary.contrastText,.5):theme.palette.text.disabled,twoLinesPadding=1.5*theme.spacing,overlayOpacity=helpers_1.getHoverOverlayOpacity(overlayColor,theme);return{root:createStyle_1.Styles.createViewStyle(__assign(__assign(__assign(__assign(__assign(__assign({height:tabHeight,minWidth:90,maxWidth:360},!!options&&!options.mustGrow&&{flexGrow:1,flexShrink:1,flexBasis:"100%"}),{paddingHorizontal:16,paddingVertical:options&&options.hasIconOnTop?twoLinesPadding:void 0,justifyContent:options&&options.hasIconOnTop?"space-between":"center",alignItems:"center",flexDirection:options&&options.hasIconOnTop?"column":"row",cursor:"pointer"}),style.root),theme_1.override(theme.overrides,"tab","root")),options&&options.hasIcon?theme_1.override(theme.overrides,"tab","hasIcon"):style.hasIcon),options&&options.hasLabel?theme_1.override(theme.overrides,"tab","hasLabel"):style.hasLabel),!1),icon:createStyle_1.Styles.createTextStyle(__assign(__assign(__assign(__assign(__assign(__assign({justifyContent:"center"},!!options&&options.hasLabel&&{margin:0}),{fontSize:iconSize,textAlign:"center",color:tabColor}),!!options&&options.isActive&&__assign({color:tabActiveColor},style.isActiveIcon)),!!options&&options.isDisabled&&{color:tabDisabledColor}),style.icon),theme_1.override(theme.overrides,"tab","icon")),!1),label:createStyle_1.Styles.createTextStyle(__assign(__assign(__assign(__assign({margin:0,paddingLeft:options&&!options.hasIconOnTop&&options.hasIcon?theme.spacing:0,overflow:"visible",textAlign:"center",fontSize:14,color:tabColor},!!options&&options.isActive&&__assign({color:tabActiveColor},style.isActiveLabel)),!!options&&options.isDisabled&&{color:tabDisabledColor}),style.label),theme_1.override(theme.overrides,"tab","label")),!1),overlay:createStyle_1.Styles.createViewStyle(__assign(__assign({flex:1,backgroundColor:overlayColor,opacity:overlayOpacity},style.overlay),theme_1.override(theme.overrides,"tab","overlay")),!1)}},exports.tabsBarStyle=function(_a){var palette=_a.palette,theme=_a.theme,_b=_a.style,style=void 0===_b?{}:_b,options=_a.options,tabHeight=options&&options.hasIconOnTop?72:48,tabBackgroundColor=void 0===palette||""===palette?theme.palette.primary.main:theme.palette.background.default,paddingHorizontal=options&&options.isScrollEnabled?52:0,cursorColor=void 0===palette||""===palette?theme.palette.secondary.main:theme.palette[palette].main;return{root:createStyle_1.Styles.createViewStyle(__assign(__assign({height:tabHeight,maxHeight:tabHeight,flexGrow:1,flexShrink:1,marginBottom:4},style.root),theme_1.override(theme.overrides,"tabs","root")),!1),container:createStyle_1.Styles.createViewStyle(__assign(__assign({backgroundColor:tabBackgroundColor,paddingHorizontal:paddingHorizontal},style.container),theme_1.override(theme.overrides,"tabs","container")),!1),scrollContent:createStyle_1.Styles.createViewStyle(__assign(__assign({flexDirection:"row",overflow:"visible"},style.scrollContent),theme_1.override(theme.overrides,"tabs","scrollContent")),!1),leftIndicator:createStyle_1.Styles.createViewStyle(__assign(__assign({position:"absolute",left:0,top:0,bottom:0,width:paddingHorizontal,cursor:"pointer",backgroundColor:tabBackgroundColor},style.leftIndicator),theme_1.override(theme.overrides,"tabs","leftIndicator")),!1),rightIndicator:createStyle_1.Styles.createViewStyle(__assign(__assign({position:"absolute",right:0,top:0,bottom:0,width:paddingHorizontal,cursor:"pointer",backgroundColor:tabBackgroundColor},style.rightIndicator),theme_1.override(theme.overrides,"tabs","rightIndicator")),!1),cursorAnimatedContainer:createStyle_1.Styles.createViewStyle({position:"absolute",width:1,top:0,bottom:0},!1),cursor:createStyle_1.Styles.createViewStyle(__assign(__assign({height:4,top:tabHeight-4,backgroundColor:cursorColor},style.cursor),theme_1.override(theme.overrides,"tabs","cursor")),!1),scrollView:createStyle_1.Styles.createScrollViewStyle(__assign(__assign(__assign({marginBottom:-20},"web"===reactxp_1.Platform.getType()&&{display:"inline-flex"}),style.scrollView),theme_1.override(theme.overrides,"tabs","scrollView")),!1),paddingHorizontal:paddingHorizontal}},exports.createScrollIndicatorOverlayStyle=function createScrollIndicatorOverlayStyle(color,theme){return createStyle_1.Styles.createViewStyle({flex:1,backgroundColor:color,opacity:helpers_1.getHoverOverlayOpacity(color,theme)},!1)},exports.fitParent=createStyle_1.Styles.createViewStyle({position:"absolute",top:0,right:0,bottom:0,left:0})},23:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(1108),exports),__exportStar(__webpack_require__(27),exports),__exportStar(__webpack_require__(1268),exports)},27:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(488),exports),__exportStar(__webpack_require__(489),exports),__exportStar(__webpack_require__(152),exports),__exportStar(__webpack_require__(197),exports),__exportStar(__webpack_require__(490),exports),__exportStar(__webpack_require__(88),exports)},285:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(491),exports);var CircleButton_1=__webpack_require__(1238);Object.defineProperty(exports,"CircleButton",{enumerable:!0,get:function(){return CircleButton_1.default}})},286:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||exports.hasOwnProperty(p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0});var RecursiveFoldableTree_1=__webpack_require__(1241);Object.defineProperty(exports,"FoldableTree",{enumerable:!0,get:function(){return RecursiveFoldableTree_1.default}}),__exportStar(__webpack_require__(495),exports)},31:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var reactxp_1=__webpack_require__(6);Object.defineProperty(exports,"View",{enumerable:!0,get:function(){return reactxp_1.View}})},488:function(module,exports,__webpack_require__){"use strict";function clamp(value,min,max){return void 0===min&&(min=0),void 0===max&&(max=1),value<min?min:value>max?max:value}function convertHexToRGB(color){color=color.substr(1);var re=new RegExp(".{1,"+color.length/3+"}","g"),colors=color.match(re);return colors&&1===colors[0].length&&(colors=colors.map((function(n){return n+n}))),colors?"rgb("+colors.map((function(n){return parseInt(n,16)})).join(", ")+")":""}function decomposeColor(color){if("#"===color.charAt(0))return decomposeColor(convertHexToRGB(color));var marker=color.indexOf("(");return{type:color.substring(0,marker),values:color.substring(marker+1,color.length-1).split(",").map((function(value){return parseFloat(value)}))}}function recomposeColor(color){var type=color.type,values=color.values;return-1!==type.indexOf("rgb")&&(values=values.map((function(n,i){return i<3?parseInt(n,10):n}))),-1!==type.indexOf("hsl")&&(values[1]=values[1]+"%",values[2]=values[2]+"%"),color.type+"("+values.join(", ")+")"}function getLuminance(color){var decomposedColor=decomposeColor(color);if(-1!==decomposedColor.type.indexOf("rgb")){var rgb=decomposedColor.values.map((function(val){return(val/=255)<=.03928?val/12.92:Math.pow((val+.055)/1.055,2.4)}));return Number((.2126*rgb[0]+.7152*rgb[1]+.0722*rgb[2]).toFixed(3))}return decomposedColor.values[2]/100}function darken(color,coefficient){if(!color)return color;if(color=decomposeColor(color),coefficient=clamp(coefficient),-1!==color.type.indexOf("hsl"))color.values[2]*=1-coefficient;else if(-1!==color.type.indexOf("rgb"))for(var i=0;i<3;i+=1)color.values[i]*=1-coefficient;return recomposeColor(color)}function lighten(color,coefficient){if(!color)return color;if(color=decomposeColor(color),coefficient=clamp(coefficient),-1!==color.type.indexOf("hsl"))color.values[2]+=(100-color.values[2])*coefficient;else if(-1!==color.type.indexOf("rgb"))for(var i=0;i<3;i+=1)color.values[i]+=(255-color.values[i])*coefficient;return recomposeColor(color)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.colorManipulator=void 0,exports.colorManipulator={convertHexToRGB:convertHexToRGB,rgbToHex:function rgbToHex(color){if(0===color.indexOf("#"))return color;var values=decomposeColor(color).values;return"#"+(values=values.map((function(n){return function intToHex(c){var hex=c.toString(16);return 1===hex.length?"0"+hex:hex}(n)}))).join("")},decomposeColor:decomposeColor,recomposeColor:recomposeColor,getContrastRatio:function getContrastRatio(foreground,background){var lumA=getLuminance(foreground),lumB=getLuminance(background);return(Math.max(lumA,lumB)+.05)/(Math.min(lumA,lumB)+.05)},getLuminance:getLuminance,emphasize:function emphasize(color,coefficient){return void 0===coefficient&&(coefficient=.15),getLuminance(color)>.5?darken(color,coefficient):lighten(color,coefficient)},fade:function fade(color,value){return color?(color=decomposeColor(color),value=clamp(value),"rgb"!==color.type&&"hsl"!==color.type||(color.type+="a"),color.values[3]=value,recomposeColor(color)):color},darken:darken,lighten:lighten}},489:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.isDarkColor=exports.colors=void 0,exports.colors={red:{50:"#ffebee",100:"#ffcdd2",200:"#ef9a9a",300:"#e57373",400:"#ef5350",500:"#f44336",600:"#e53935",700:"#d32f2f",800:"#c62828",900:"#b71c1c",A100:"#ff8a80",A200:"#ff5252",A400:"#ff1744",A700:"#d50000",darkText:[50,100,200,300,"A100"]},pink:{50:"#fce4ec",100:"#f8bbd0",200:"#f48fb1",300:"#f06292",400:"#ec407a",500:"#e91e63",600:"#d81b60",700:"#c2185b",800:"#ad1457",900:"#880e4f",A100:"#ff80ab",A200:"#ff4081",A400:"#f50057",A700:"#c51162",darkText:[50,100,200,"A100"]},purple:{50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff",darkText:[50,100,200,"A100"]},deepPurple:{50:"#ede7f6",100:"#d1c4e9",200:"#b39ddb",300:"#9575cd",400:"#7e57c2",500:"#673ab7",600:"#5e35b1",700:"#512da8",800:"#4527a0",900:"#311b92",A100:"#b388ff",A200:"#7c4dff",A400:"#651fff",A700:"#6200ea",darkText:[50,100,200,"A100"]},indigo:{50:"#e8eaf6",100:"#c5cae9",200:"#9fa8da",300:"#7986cb",400:"#5c6bc0",500:"#3f51b5",600:"#3949ab",700:"#303f9f",800:"#283593",900:"#1a237e",A100:"#8c9eff",A200:"#536dfe",A400:"#3d5afe",A700:"#304ffe",darkText:[50,100,200,"A100"]},blue:{50:"#e3f2fd",100:"#bbdefb",200:"#90caf9",300:"#64b5f6",400:"#42a5f5",500:"#2196f3",600:"#1e88e5",700:"#1976d2",800:"#1565c0",900:"#0d47a1",A100:"#82b1ff",A200:"#448aff",A400:"#2979ff",A700:"#2962ff",darkText:[50,100,200,300,400,"A100"]},lightBlue:{50:"#e1f5fe",100:"#b3e5fc",200:"#81d4fa",300:"#4fc3f7",400:"#29b6f6",500:"#03a9f4",600:"#039be5",700:"#0288d1",800:"#0277bd",900:"#01579b",A100:"#80d8ff",A200:"#40c4ff",A400:"#00b0ff",A700:"#0091ea",darkText:[50,100,200,300,400,500,"A100","A200","A300"]},cyan:{50:"#e0f7fa",100:"#b2ebf2",200:"#80deea",300:"#4dd0e1",400:"#26c6da",500:"#00bcd4",600:"#00acc1",700:"#0097a7",800:"#00838f",900:"#006064",A100:"#84ffff",A200:"#18ffff",A400:"#00e5ff",A700:"#00b8d4",darkText:[50,100,200,300,400,500,600,"A100","A200","A300","A400"]},teal:{50:"#e0f2f1",100:"#b2dfdb",200:"#80cbc4",300:"#4db6ac",400:"#26a69a",500:"#009688",600:"#00897b",700:"#00796b",800:"#00695c",900:"#004d40",A100:"#a7ffeb",A200:"#64ffda",A400:"#1de9b6",A700:"#00bfa5",darkText:[50,100,200,300,400,"A100","A200","A300","A400"]},green:{50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853",darkText:[50,100,200,300,400,500,"A100","A200","A300","A400"]},lightGreen:{50:"#f1f8e9",100:"#dcedc8",200:"#c5e1a5",300:"#aed581",400:"#9ccc65",500:"#8bc34a",600:"#7cb342",700:"#689f38",800:"#558b2f",900:"#33691e",A100:"#ccff90",A200:"#b2ff59",A400:"#76ff03",A700:"#64dd17",darkText:[50,100,200,300,400,500,600,"A100","A200","A300","A400"]},lime:{50:"#f9fbe7",100:"#f0f4c3",200:"#e6ee9c",300:"#dce775",400:"#d4e157",500:"#cddc39",600:"#c0ca33",700:"#afb42b",800:"#9e9d24",900:"#827717",A100:"#f4ff81",A200:"#eeff41",A400:"#c6ff00",A700:"#aeea00",darkText:[50,100,200,300,400,500,600,700,800,"A100","A200","A300","A400"]},yellow:{50:"#fffde7",100:"#fff9c4",200:"#fff59d",300:"#fff176",400:"#ffee58",500:"#ffeb3b",600:"#fdd835",700:"#fbc02d",800:"#f9a825",900:"#f57f17",A100:"#ffff8d",A200:"#ffff00",A400:"#ffea00",A700:"#ffd600",darkText:[50,100,200,300,400,500,600,700,800,900,"A100","A200","A300","A400"]},amber:{50:"#fff8e1",100:"#ffecb3",200:"#ffe082",300:"#ffd54f",400:"#ffca28",500:"#ffc107",600:"#ffb300",700:"#ffa000",800:"#ff8f00",900:"#ff6f00",A100:"#ffe57f",A200:"#ffd740",A400:"#ffc400",A700:"#ffab00",darkText:[50,100,200,300,400,500,600,700,800,900,"A100","A200","A300","A400"]},orange:{50:"#fff3e0",100:"#ffe0b2",200:"#ffcc80",300:"#ffb74d",400:"#ffa726",500:"#ff9800",600:"#fb8c00",700:"#f57c00",800:"#ef6c00",900:"#e65100",A100:"#ffd180",A200:"#ffab40",A400:"#ff9100",A700:"#ff6d00",darkText:[50,100,200,300,400,500,600,700,"A100","A200","A300","A400"]},deepOrange:{50:"#fbe9e7",100:"#ffccbc",200:"#ffab91",300:"#ff8a65",400:"#ff7043",500:"#ff5722",600:"#f4511e",700:"#e64a19",800:"#d84315",900:"#bf360c",A100:"#ff9e80",A200:"#ff6e40",A400:"#ff3d00",A700:"#dd2c00",darkText:[50,100,200,300,400,"A100","A200"]},brown:{50:"#efebe9",100:"#d7ccc8",200:"#bcaaa4",300:"#a1887f",400:"#8d6e63",500:"#795548",600:"#6d4c41",700:"#5d4037",800:"#4e342e",900:"#3e2723",darkText:[50,100,200]},grey:{50:"#fafafa",100:"#f5f5f5",200:"#eeeeee",300:"#e0e0e0",400:"#bdbdbd",500:"#9e9e9e",600:"#757575",700:"#616161",800:"#424242",900:"#212121",A100:"#d5d5d5",A200:"#aaaaaa",A400:"#303030",A700:"#616161",darkText:[50,100,200,300,400,500]},blueGrey:{50:"#eceff1",100:"#cfd8dc",200:"#b0bec5",300:"#90a4ae",400:"#78909c",500:"#607d8b",600:"#546e7a",700:"#455a64",800:"#37474f",900:"#263238",darkText:[50,100,200,300]},white:"#fff",black:"#000"},exports.isDarkColor=function isDarkColor(color){var c=color.substring(1),rgb=parseInt(c,16);return.2126*(rgb>>16&255)+.7152*(rgb>>8&255)+.0722*(rgb>>0&255)<40}},490:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t};Object.defineProperty(exports,"__esModule",{value:!0}),exports.withTheme=void 0;var React=__importStar(__webpack_require__(0)),ThemeContext_1=__webpack_require__(88);exports.withTheme=function(Component){return function(props){var innerRef=props.innerRef,rest=__rest(props,["innerRef"]);return React.createElement(ThemeContext_1.ThemeContext.Consumer,null,(function(theme){return React.createElement(Component,__assign({theme:theme,ref:innerRef},rest))}))}}},491:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Button=void 0;var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),styles_1=__webpack_require__(27),helpers_1=__webpack_require__(153),ThemeContext_1=__webpack_require__(88),fade_1=__webpack_require__(198),paper_1=__webpack_require__(199),ripple_1=__webpack_require__(200),text_1=__webpack_require__(201),view_1=__webpack_require__(31),style_1=__importDefault(__webpack_require__(494));exports.Button=React.forwardRef((function(props,ref){var ripple=React.useRef(),_a=React.useState(!1),isHover=_a[0],setIsHover=_a[1],setRef="object"==typeof ref?React.useCallback((function(nativeRef){ref&&(ref.current=nativeRef)}),[]):ref;function onHoverStart(e){var _a;setIsHover(!0),null===(_a=props.onHoverStart)||void 0===_a||_a.call(props,e)}function onHoverEnd(e){var _a,_b;null===(_a=ripple.current)||void 0===_a||_a.onPressOut(),setIsHover(!1),null===(_b=props.onHoverEnd)||void 0===_b||_b.call(props,e)}function onLongPress(e){var _a,_b;null===(_a=ripple.current)||void 0===_a||_a.onPressOut(),null===(_b=props.onLongPress)||void 0===_b||_b.call(props,e)}function onPress(e){var _a,_b;null===(_a=ripple.current)||void 0===_a||_a.onPressOut(),null===(_b=props.onPress)||void 0===_b||_b.call(props,e)}function onPressIn(e){var _a,_b;null===(_a=ripple.current)||void 0===_a||_a.onPressIn(e),null===(_b=props.onPressIn)||void 0===_b||_b.call(props,e)}function onPressOut(e){var _a,_b;null===(_a=ripple.current)||void 0===_a||_a.onPressOut(),null===(_b=props.onPressOut)||void 0===_b||_b.call(props,e)}return React.createElement(ThemeContext_1.ThemeContext.Consumer,null,(function(theme){var label=props.label,_a=props.elevation,elevation=void 0===_a?0:_a,_b=props.isDisabled,isDisabled=void 0!==_b&&_b,palette=props.palette,_c=props.variant,variant=void 0===_c?"contained":_c,_d=props.isDense,isDense=void 0!==_d&&_d,iconSlot=props.iconSlot,backgroundSlot=props.backgroundSlot,badgeSlot=props.badgeSlot,onLayout=props.onLayout,style=props.style,borderRadius=style&&style.root&&style.root.borderRadius||0,isOnPaper="contained"!==variant,overlayColor=helpers_1.getMaterialOverlayColor({isOnPaper:isOnPaper,palette:palette,theme:theme}),styles=style_1.default({theme:theme,palette:palette,style:style,variant:variant,overlayColor:overlayColor,options:{isDense:isDense,isDisabled:isDisabled,hasIcon:!!iconSlot}});return React.createElement(paper_1.Paper,{elevation:elevation,style:{root:__spreadArrays([{borderRadius:borderRadius}],styles_1.toArray(styles.root)),content:__spreadArrays([{borderRadius:borderRadius}],styles_1.toArray(styles.content))}},backgroundSlot&&backgroundSlot(theme),iconSlot&&iconSlot(styles.icon),label&&React.createElement(text_1.Text,{style:styles.label},label),badgeSlot,!isDisabled&&React.createElement(fade_1.Fade,{style:styles.fitParent,isVisible:isHover,duration:75},React.createElement(view_1.View,{style:styles.overlay})),!isDisabled&&React.createElement(ripple_1.Ripple,{onRef:function(emitter){ripple.current=emitter},color:overlayColor}),React.createElement(view_1.View,{style:styles.fitParent,onLayout:onLayout},React.createElement(reactxp_1.Button,{ref:setRef,disabled:isDisabled,style:styles.button,delayLongPress:props.delayLongPress,onPress:onPress,onPressIn:onPressIn,onPressOut:onPressOut,onHoverStart:onHoverStart,onHoverEnd:onHoverEnd,onLongPress:onLongPress})))}))}))},492:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=this&&this.__generator||function(thisArg,body){var f,y,t,g,_={label:0,sent:function(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},__spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),view_1=__webpack_require__(31),style_1=__webpack_require__(493),Emitter=function(_super){function Emitter(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={isUnmounted:!1,nextKey:0,particlesInfos:[]},_this.processingOnPressInHandler=!1,_this.removeQueue=[],_this.onPressIn=function(e){e.persist(),_this.addParticle(e)},_this.onPressOut=function(){_this.killNextParticle()},_this.onRef=function(view){_this.containerRef=view,_this.props.onRef&&_this.props.onRef(_this)},_this}return __extends(Emitter,_super),Emitter.prototype.render=function(){var Particle=this.props.particle;return React.createElement(view_1.View,{ref:this.onRef,style:style_1.containerStyle.root,onLayout:function(){}},React.createElement(reactxp_1.Button,{disableTouchOpacityAnimation:!0,onPressIn:this.onPressIn,onPressOut:this.onPressOut,onHoverEnd:this.onPressOut,onContextMenu:this.onPressOut,style:style_1.containerStyle.button},this.state.particlesInfos.map((function(props){return React.createElement(Particle,__assign({},props,{key:props.id}))}))))},Emitter.prototype.componentWillUnmount=function(){this.setState({isUnmounted:!0})},Emitter.prototype.addParticle=function(event){var _a;return __awaiter(this,void 0,void 0,(function(){var rect_1,width,height,x,y,touch,clientX,clientY,pageX,pageY,cursorX,cursorY,radiusFrom,posX_1,posY_1,options_1,e_1,_this=this;return __generator(this,(function(_b){switch(_b.label){case 0:if(!this.containerRef)return[2];this.processingOnPressInHandler=!0,_b.label=1;case 1:return _b.trys.push([1,3,,4]),[4,reactxp_1.UserInterface.measureLayoutRelativeToWindow(this.containerRef)];case 2:return rect_1=_b.sent(),width=rect_1.width,height=rect_1.height,x=rect_1.x,y=rect_1.y,touch=null===(_a=event.nativeEvent.touches)||void 0===_a?void 0:_a[0],clientX=touch?touch.clientX||touch.locationX:event.clientX,clientY=touch?touch.clientY||touch.locationY:event.clientY,pageX=touch?touch.pageX:event.pageX,pageY=touch?touch.pageY:event.pageY,clientX&&clientY&&pageX&&pageY&&(cursorX=Emitter.isWeb?Math.round(clientX-x):Math.round(pageX-x),cursorY=Emitter.isWeb?Math.round(clientY-y):Math.round(pageY-y),radiusFrom=Math.min(width,height)/2,posX_1=cursorX-radiusFrom,posY_1=cursorY-radiusFrom,options_1=this.props.options,this.setState((function(state){return{nextKey:state.nextKey+1,particlesInfos:__spreadArrays([{rect:rect_1,id:state.nextKey,x:posX_1,y:posY_1,isDying:!1,emitterLayout:rect_1,options:options_1,onDeath:_this.onParticleDeath.bind(_this)}],state.particlesInfos)}}),(function(){_this.removeQueue.forEach((function(remove){return remove()})),_this.removeQueue=[],_this.processingOnPressInHandler=!1}))),[3,4];case 3:return e_1=_b.sent(),console.warn(e_1),[3,4];case 4:return[2]}}))}))},Emitter.prototype.killNextParticle=function(cb){var _this=this,action=function(){var particlesInfos=_this.state.particlesInfos.slice(0).map((function(r,index,particles){return!particles[index+1]||particles[index+1].isDying?__assign(__assign({},r),{isDying:!0}):r}));_this.setState({particlesInfos:particlesInfos},cb)};this.processingOnPressInHandler?this.removeQueue.push(action):action()},Emitter.prototype.onParticleDeath=function(){this.state.isUnmounted||this.setState({particlesInfos:this.state.particlesInfos.slice(0,this.state.particlesInfos.length-1)})},Emitter.isWeb="web"===reactxp_1.Platform.getType(),Emitter}(React.PureComponent);exports.default=Emitter},493:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.rippleStyle=exports.containerStyle=void 0;var createStyle_1=__webpack_require__(152);exports.containerStyle={root:createStyle_1.Styles.createViewStyle({position:"absolute",top:0,right:0,bottom:0,left:0}),button:createStyle_1.Styles.createViewStyle({margin:0,flex:1})},exports.rippleStyle=function(_a){var x=_a.x,y=_a.y,radius=_a.radius,backgroundColor=_a.color;return{ripple:createStyle_1.Styles.createViewStyle({position:"absolute",width:2*radius,height:2*radius,left:x,top:y,backgroundColor:backgroundColor,borderRadius:radius})}}},494:function(module,exports,__webpack_require__){"use strict";var __spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;var r=Array(s),k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.createCircleButtonStyle=void 0;var reactxp_1=__webpack_require__(6),styles_1=__webpack_require__(27),helpers_1=__webpack_require__(153);exports.default=function default_1(_a){var theme=_a.theme,_b=_a.palette,palette=void 0===_b?"primary":_b,_c=_a.variant,variant=void 0===_c?"contained":_c,_d=_a.style,style=void 0===_d?{}:_d,overlayColor=_a.overlayColor,options=_a.options,height=options&&options.isDense?32:36,paddingVertical=options&&options.isDense?9:8.5,fontSize=options&&options.isDense?14:16,lineHeight=options&&options.isDense?14:19,iconSize=options&&options.isDense?14:19,tabColor=options&&options.isDisabled?theme.palette.text.disabled:"contained"===variant?theme.palette[palette].contrastText:theme.palette[palette].main,backgroundColor="contained"===variant?options&&options.isDisabled?styles_1.colorManipulator.fade(theme.palette.text.disabled,.2):theme.palette[palette].main:"transparent",borderColor="outlined"===variant?theme.palette.grey[500]:void 0,borderWidth="outlined"===variant?1:void 0,overlayOpacity=helpers_1.getHoverOverlayOpacity(overlayColor,theme);return{root:__spreadArrays([{height:height,borderRadius:theme.shape.borderRadius},styles_1.override(theme.overrides,"button","root"),(null==options?void 0:options.hasIcon)&&styles_1.override(theme.overrides,"button","hasIcon")],styles_1.toArray(style.hasIcon),styles_1.toArray(style.root)),content:__spreadArrays([reactxp_1.Styles.createTextStyle({borderRadius:theme.shape.borderRadius,borderWidth:borderWidth,backgroundColor:backgroundColor,borderColor:borderColor,paddingHorizontal:16,paddingVertical:paddingVertical,flexDirection:"row",justifyContent:"center"})],styles_1.toArray(style.content)),icon:__spreadArrays([reactxp_1.Styles.createTextStyle({position:"relative",justifyContent:"center",fontSize:iconSize,textAlign:"center",paddingRight:8,color:tabColor,alignSelf:"center"}),styles_1.override(theme.overrides,"button","icon")],styles_1.toArray(style.icon)),label:__spreadArrays([reactxp_1.Styles.createTextStyle({color:tabColor,fontSize:fontSize,lineHeight:lineHeight,alignSelf:"center"}),styles_1.override(theme.overrides,"button","label")],styles_1.toArray(style.label)),overlay:__spreadArrays([reactxp_1.Styles.createViewStyle({flex:1,backgroundColor:overlayColor,opacity:overlayOpacity})],styles_1.toArray(style.overlay),[styles_1.override(theme.overrides,"button","overlay")]),fitParent:reactxp_1.Styles.createViewStyle({position:"absolute",top:0,right:0,bottom:0,left:0}),button:reactxp_1.Styles.createViewStyle({flex:1})}},exports.createCircleButtonStyle=function createCircleButtonStyle(_a){var style=_a.style,radius=_a.radius;return{root:__spreadArrays([reactxp_1.Styles.createViewStyle({height:2*radius,width:2*radius,borderRadius:2*radius})],styles_1.toArray(style.root)),content:[{borderRadius:2*radius},style.content],icon:__spreadArrays([reactxp_1.Styles.createTextStyle({paddingRight:0})],styles_1.toArray(style.icon)),overlay:__spreadArrays([reactxp_1.Styles.createViewStyle({borderRadius:2*radius})],styles_1.toArray(style.overlay))}}},495:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ROOT_ID=void 0,exports.ROOT_ID="root"},496:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.buttonStyle=exports.listStyle=exports.createListItemStyle=void 0;var styles_1=__webpack_require__(27);exports.createListItemStyle=function createListItemStyle(_a){var height,theme=_a.theme,hasMeta=_a.hasMeta,hasIcon=_a.hasIcon,hasCircleImageOrImage=_a.hasCircleImageOrImage,hasSquareImage=_a.hasSquareImage,hasTextOrContent=_a.hasTextOrContent,hasTwoLinesText=_a.hasTwoLinesText,_b=_a.styleOverride,styleOverride=void 0===_b?{}:_b,isLast=_a.isLast,palette=_a.palette,colorFromPalette=void 0!==palette?theme.palette[palette].main:theme.palette.text.primary,hasOneLine=!hasMeta&&!hasTextOrContent,hasTwoLines=hasMeta&&!hasTextOrContent||!hasMeta&&hasTextOrContent&&!hasTwoLinesText,hasThreeLines=hasMeta&&hasTextOrContent&&!hasTwoLinesText||!hasMeta&&hasTextOrContent&&hasTwoLinesText,centerMarginLeft=hasIcon||hasCircleImageOrImage||hasSquareImage?0:16;hasOneLine?(height=48,hasIcon||hasCircleImageOrImage?height=56:hasSquareImage&&(height=72)):hasTwoLines?(height=64,(hasIcon||hasCircleImageOrImage||hasSquareImage)&&(height=72)):height=88;var circleImageMarginTop=8;(hasTwoLines||hasThreeLines)&&(circleImageMarginTop=16);var squareImageMarginTop=8;return hasThreeLines&&(squareImageMarginTop=16),styleOverride.root&&styleOverride.root.borderColor&&delete styleOverride.root.borderColor,{root:styles_1.Styles.createViewStyle(__assign({height:height,flexDirection:"row",alignItems:"flex-start",backgroundColor:theme.palette.background.default,borderBottomWidth:isLast?0:1,paddingRight:16,borderColor:isLast?void 0:theme.palette.divider},styleOverride&&styleOverride.root||{})),iconStyle:__assign({color:colorFromPalette,fontSize:24},styleOverride.iconStyle||{}),iconCircleStyle:__assign({color:theme.palette.background.default,fontSize:24},styleOverride.iconCircleStyle||{}),leftIconContainer:styles_1.Styles.createViewStyle(__assign({marginLeft:16,marginTop:16,marginRight:32,justifyContent:"center",alignItems:"center"},styleOverride.leftIconContainer||{})),circleIconContainer:styles_1.Styles.createViewStyle(__assign({marginLeft:16,marginRight:16,height:40,width:40,marginTop:circleImageMarginTop,justifyContent:"center",alignItems:"center",borderRadius:100,backgroundColor:theme.palette.text.secondary,overflow:"visible"},styleOverride.circleIconContainer||{})),circleImageContainer:styles_1.Styles.createViewStyle(__assign({marginLeft:16,marginRight:16,marginTop:circleImageMarginTop,height:40,width:40,justifyContent:"center",alignItems:"center",borderRadius:100,overflow:"hidden",backgroundColor:theme.palette.text.secondary},styleOverride.circleImageContainer||{})),squareImageContainer:styles_1.Styles.createViewStyle(__assign({marginLeft:16,marginTop:squareImageMarginTop,marginRight:16,height:56,width:56,borderRadius:4},styleOverride.squareImageContainer||{})),center:styles_1.Styles.createViewStyle(__assign({justifyContent:"center",marginLeft:centerMarginLeft,alignSelf:"stretch",flex:1},styleOverride.center||{})),title:styles_1.Styles.createTextStyle(__assign({fontSize:16,fontWeight:"bold",lineHeight:hasOneLine?void 0:20,height:hasOneLine?void 0:20,color:colorFromPalette},styleOverride.title||{})),meta:styles_1.Styles.createTextStyle(__assign({height:20,fontSize:14,fontStyle:"italic",color:theme.palette.text.primary},styleOverride.meta||{})),text:styles_1.Styles.createTextStyle(__assign({maxHeight:hasMeta?18:hasTwoLinesText?38:18,lineHeight:hasMeta?18:hasTwoLinesText?38:18,fontSize:14,color:theme.palette.text.secondary},styleOverride.text||{})),right:styles_1.Styles.createViewStyle(__assign({height:height,minWidth:24,marginLeft:16,justifyContent:"center",alignItems:"center",alignSelf:"flex-end"},styleOverride.right||{})),mainButton:{root:styles_1.Styles.createViewStyle({position:"absolute",top:0,right:0,bottom:0,left:0,height:void 0}),overlay:{backgroundColor:colorFromPalette}}}},exports.listStyle=styles_1.Styles.createViewStyle({flex:1}),exports.buttonStyle=styles_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignItems:"center"})},497:function(module,exports,__webpack_require__){"use strict";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)};Object.defineProperty(exports,"__esModule",{value:!0});var createStyle_1=__webpack_require__(152),theme_1=__webpack_require__(197);exports.default=function default_1(_a){var theme=_a.theme,_b=_a.palette,palette=void 0===_b?"primary":_b,_c=_a.style,style=void 0===_c?{}:_c;return{root:createStyle_1.Styles.createViewStyle(__assign(__assign({overflow:"hidden",flex:1,minHeight:theme.spacing},style.root),theme_1.override(theme.overrides,"progressBar","root")),!1),top:createStyle_1.Styles.createViewStyle(__assign(__assign({position:"absolute",borderRadius:16,top:0,left:0,bottom:0,right:0},style.top),theme_1.override(theme.overrides,"progressBar","top")),!1),fill:createStyle_1.Styles.createViewStyle(__assign(__assign({position:"absolute",top:0,left:0,right:0,bottom:0,transform:[{scaleX:0}],backgroundColor:theme.palette[palette].main},style.fill),theme_1.override(theme.overrides,"progressBar","fill")),!1),background:createStyle_1.Styles.createViewStyle(__assign(__assign({flex:1,backgroundColor:theme.palette.background.appBar},style.background),theme_1.override(theme.overrides,"progressBar","background")),!1)}}},498:function(module,exports,__webpack_require__){"use strict";var extendStatics,__extends=this&&this.__extends||(extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)},function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}),__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0});var React=__importStar(__webpack_require__(0)),reactxp_1=__webpack_require__(6),helpers_1=__webpack_require__(202),helpers_2=__webpack_require__(153),ThemeContext_1=__webpack_require__(88),fade_1=__webpack_require__(198),ripple_1=__webpack_require__(200),text_1=__webpack_require__(201),view_1=__webpack_require__(31),styles_1=__webpack_require__(203);function noop(){}var Tab=function(_super){function Tab(){var _this=null!==_super&&_super.apply(this,arguments)||this;return _this.state={isHover:!1},_this.isActionAllowed=!0,_this.blockActionDuringScroll=function(){_this.isActionAllowed=!1,_this.ripple&&_this.ripple.onPressOut()},_this.allowActionDuringScroll=function(){_this.isActionAllowed=!0},_this.onLayout=function(layout){var _a=_this.props,id=_a.id,onTabLayout=_a.onTabLayout;void 0!==_this.layout&&_this.layout.height===layout.height&&_this.layout.width===layout.width&&_this.layout.x===layout.x&&_this.layout.y===layout.y||(_this.layout={x:Math.round(layout.x),y:Math.round(layout.y),width:Math.round(layout.width),height:Math.round(layout.height)},onTabLayout&&onTabLayout({id:id,layout:_this.layout}))},_this}return __extends(Tab,_super),Tab.prototype.componentWillMount=function(){var _a=this.props.onWillMount;(void 0===_a?function(){}:_a)(this.props.id)},Tab.prototype.componentDidMount=function(){this.layout&&this.onLayout(this.layout)},Tab.prototype.componentWillUnmount=function(){var _a=this.props.onUnmount;(void 0===_a?function(){}:_a)(this.props.id)},Tab.prototype.shouldComponentUpdate=function(nextProps,nextState){return helpers_1.shouldComponentUpdate(nextProps,nextState,this.props,this.state)},Tab.prototype.render=function(){var _this=this;return React.createElement(ThemeContext_1.ThemeContext.Consumer,null,(function(theme){var _a=_this.props,id=_a.id,iconSlot=_a.iconSlot,label=_a.label,_b=_a.isActive,isActive=void 0!==_b&&_b,_c=_a.isDisabled,isDisabled=void 0!==_c&&_c,_d=_a.isFrozen,isFrozen=void 0!==_d&&_d,_e=_a.hasIconOnTop,hasIconOnTop=void 0!==_e&&_e,_f=_a.mustGrow,mustGrow=void 0!==_f&&_f,palette=_a.palette,badgeSlot=_a.badgeSlot,style=_a.style,_g=_a.onPress,onPress=void 0===_g?noop:_g,isHover=_this.state.isHover,isOnPaper=void 0!==palette,overlayColor=helpers_2.getMaterialOverlayColor({isOnPaper:isOnPaper,palette:palette,theme:theme}),styles=styles_1.tabStyle({theme:theme,palette:palette,style:style,overlayColor:overlayColor,options:{hasIconOnTop:hasIconOnTop,isDisabled:isDisabled,isActive:isActive,mustGrow:mustGrow,hasIcon:!!iconSlot,hasLabel:!!label}});return React.createElement(view_1.View,{onResponderMove:_this.blockActionDuringScroll,onResponderRelease:_this.allowActionDuringScroll,onLayout:_this.onLayout,style:styles.root},iconSlot&&iconSlot(styles.icon),label&&React.createElement(text_1.Text,{style:styles.label},label),badgeSlot,React.createElement(fade_1.Fade,{style:styles_1.fitParent,isVisible:isHover,duration:75},React.createElement(view_1.View,{style:styles.overlay})),!isDisabled&&!isFrozen&&React.createElement(ripple_1.Ripple,{onRef:function(emitter){_this.ripple=emitter},color:overlayColor}),React.createElement(view_1.View,{style:styles_1.fitParent},React.createElement(reactxp_1.Button,{disabled:isDisabled,style:reactxp_1.Styles.createViewStyle({flex:1}),onPress:function(){!isFrozen&&_this.isActionAllowed&&onPress(id)},onPressIn:function(e){_this.ripple&&_this.ripple.onPressIn(e)},onPressOut:function(){_this.ripple&&_this.ripple.onPressOut()},onHoverStart:function(){_this.setState({isHover:!0})},onHoverEnd:function(){_this.ripple&&_this.ripple.onPressOut(),_this.setState({isHover:!1})}})))}))},Tab}(React.Component);exports.default=Tab},499:function(module,exports,__webpack_require__){"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.select=exports.labelStyle=exports.style=void 0;var ui_1=__webpack_require__(23),React=__importStar(__webpack_require__(0)),react_1=__webpack_require__(0),react_router_dom_1=__webpack_require__(204),reactxp_1=__webpack_require__(6),collapseBehavior_1=__importDefault(__webpack_require__(1282)),Navigation_1=__webpack_require__(1283),router_1=__webpack_require__(1289),FontAwesome=__webpack_require__(118);function WithRouter(){var location=router_1.useLocation(),_a=React.useState("slide"),animation=_a[0],setAnimation=_a[1];return React.createElement(ui_1.View,{style:exports.style.section},React.createElement(reactxp_1.Picker,{style:exports.select,onValueChange:function(value){return setAnimation(value)},selectedValue:"slide",items:[{label:"Slide",value:"slide"},{label:"Collapse",value:"collapse"}]}),React.createElement(ui_1.Text,null," With React router "),React.createElement(Navigation_1.Navigation,null),React.createElement(ui_1.View,{style:exports.style.sceneContainer},React.createElement(ui_1.AnimatedTransition,{clean:!0,animation:"slide"===animation?void 0:collapseBehavior_1.default,id:location.key},React.createElement(router_1.Switch,{location:location},React.createElement(router_1.Route,{path:"/profile",component:function(){return React.createElement(ui_1.Text,null,"Profile")}}),React.createElement(router_1.Route,{path:"/portfolio",component:function(){return React.createElement(ui_1.Text,null,"Portfolio")}}),React.createElement(router_1.Route,{path:"/contact",component:function(){return React.createElement(ui_1.Text,null,"Contact")}}),React.createElement(react_router_dom_1.Redirect,{to:"/profile"})))))}function WithoutRouter(){var _a=react_1.useState({activeId:"section0"}),activeId=_a[0].activeId,setActiveId=_a[1],_b=React.useState("slide"),animation=_b[0],setAnimation=_b[1];return React.createElement(ui_1.View,{style:exports.style.section},React.createElement(reactxp_1.Picker,{style:exports.select,onValueChange:function(value){return setAnimation(value)},selectedValue:"slide",items:[{label:"Slide",value:"slide"},{label:"Collapse",value:"collapse"}]}),React.createElement(ui_1.Text,null," Without router "),React.createElement(ui_1.TabBar,{palette:"secondary",style:exports.style.header,activeTabId:activeId,onChange:function(id){return setActiveId({activeId:id})},leftScrollButton:function(theme){return React.createElement(ui_1.View,{style:{flex:1,alignItems:"center",justifyContent:"center"}},React.createElement(FontAwesome.default,{name:"chevron-left",size:16,color:theme.palette.text.secondary}))},rightScrollButton:function(theme){return React.createElement(ui_1.View,{style:{flex:1,alignItems:"center",justifyContent:"center"}},React.createElement(FontAwesome.default,{name:"chevron-right",size:16,color:theme.palette.text.secondary}))},tabs:[{id:"section0",label:"Section 0",style:{isActiveLabel:exports.labelStyle}},{id:"section1",label:"Section 1",style:{isActiveLabel:exports.labelStyle}},{id:"section2",label:"Section 2",style:{isActiveLabel:exports.labelStyle}}]}),React.createElement(ui_1.View,{style:exports.style.sceneContainer},React.createElement(ui_1.AnimatedTransition,{clean:!0,id:activeId,animation:"slide"===animation?void 0:collapseBehavior_1.default},"section0"===activeId&&React.createElement(ui_1.Text,null,"Section 0"),"section1"===activeId&&React.createElement(ui_1.Text,null,"Section 1"),"section2"===activeId&&React.createElement(ui_1.Text,null,"Section 2"))))}exports.style={section:ui_1.Styles.createViewStyle({alignSelf:"stretch",marginTop:60,height:100,flex:1}),header:{root:ui_1.Styles.createViewStyle({flexGrow:0,flexShrink:1})},sceneContainer:ui_1.Styles.createViewStyle({flex:1}),scene:ui_1.Styles.createViewStyle({flex:1,justifyContent:"center",alignItems:"center"})},exports.labelStyle={shadowColor:"#fff",shadowRadius:8},exports.select={},exports.default=function Story(){return React.createElement(React.Fragment,null,React.createElement(router_1.RRouter,null,React.createElement(WithRouter,null)),React.createElement(WithoutRouter,null))}},504:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/Roboto-Regular.3e1af3ef.ttf"},582:function(module,exports,__webpack_require__){__webpack_require__(583),__webpack_require__(947),module.exports=__webpack_require__(948)},719:function(module,exports){},88:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ThemeContext=void 0;var theme_1=__webpack_require__(197);exports.ThemeContext=theme_1.createThemeContext(theme_1.defaultTheme)},948:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(24),_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(502),_sproutch_ui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(23),react_native_vector_icons_Fonts_FontAwesome_ttf__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(503),react_native_vector_icons_Fonts_FontAwesome_ttf__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(react_native_vector_icons_Fonts_FontAwesome_ttf__WEBPACK_IMPORTED_MODULE_4__),_assets_fonts_roboto_Roboto_Regular_ttf__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(504),_assets_fonts_roboto_Roboto_Regular_ttf__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(_assets_fonts_roboto_Roboto_Regular_ttf__WEBPACK_IMPORTED_MODULE_5__);const fontAwesomeStyle=`@font-face {\n  src: url(${react_native_vector_icons_Fonts_FontAwesome_ttf__WEBPACK_IMPORTED_MODULE_4___default.a});\n  font-family: FontAwesome;\n}`,robotoRegularStyle=`@font-face {\n  src: url(${_assets_fonts_roboto_Roboto_Regular_ttf__WEBPACK_IMPORTED_MODULE_5___default.a});\n  font-family: Roboto;\n}`,faStyleEl=document.createElement("style"),robotoRegularStyleEl=document.createElement("style");faStyleEl.type="text/css",robotoRegularStyleEl.type="text/css",faStyleEl.styleSheet?faStyleEl.styleSheet.cssText=fontAwesomeStyle:faStyleEl.appendChild(document.createTextNode(fontAwesomeStyle)),robotoRegularStyleEl.styleSheet?robotoRegularStyleEl.styleSheet.cssText=robotoRegularStyle:robotoRegularStyleEl.appendChild(document.createTextNode(robotoRegularStyle)),document.head.appendChild(faStyleEl),document.head.appendChild(robotoRegularStyleEl);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addDecorator)(_storybook_addon_notes__WEBPACK_IMPORTED_MODULE_2__.withNotes),Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addDecorator)(storyFn=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{flexGrow:1,flexWrap:"wrap",flexDirection:"column",justifyContent:"space-around",display:"flex",height:"100vh",alignItems:"center"}},storyFn())),Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addDecorator)(storyFn=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_sproutch_ui__WEBPACK_IMPORTED_MODULE_3__.ThemeContext.Provider,{value:_sproutch_ui__WEBPACK_IMPORTED_MODULE_3__.defaultTheme},storyFn()));const stories=__webpack_require__(1269);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.configure)((function loadStories(){stories.keys().forEach(filename=>stories(filename))}),module)}.call(this,__webpack_require__(949)(module))}},[[582,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,